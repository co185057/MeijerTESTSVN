// <copyright file="SelectLanguage.xaml.cs" company="NCR Corporation">
//     Copyright (c) NCR Corporation. All rights reserved.
// </copyright>
namespace SSCOUIViews.Views
{
    using System;
    using System.Collections;
    using System.Collections.ObjectModel;
    using System.Globalization;
    using System.Windows;
    using System.Windows.Controls;
    using System.Windows.Data;
    using System.Windows.Documents;
    using System.Windows.Input;
    using System.Windows.Media;
    using System.Windows.Media.Imaging;
    using System.Windows.Navigation;
    using System.Windows.Shapes;
    using FPsxWPF.Controls;
    using SSCOControls;
    using SSCOUIModels;
    using SSCOUIModels.Controls;
    using SSCOUIModels.Models;
    using SSCOControls.TouchListBoxComponents;

    /// <summary>
    /// Interaction logic for SelectLanguage.xaml
    /// </summary>
    public partial class SelectLanguage : PopupView
    {
        /// <summary>
        /// Initializes a new instance of the SelectLanguage class.
        /// </summary>
        public SelectLanguage(IMainViewModel viewModel)
            : base(viewModel)
        {
            InitializeComponent();
        }

       /// <summary>
        /// SelectLanguage_Click() executed when a language button is clicked inside the LanguageOptions TouchListBox
       /// </summary>
       /// <param name="sender">Object type parameter</param>
       /// <param name="e">RoutedEvent argument type parameter</param>
        private void SelectLanguage_Click(object sender, RoutedEventArgs e)
        {
            GridItem item = this.LanguageOptions.SelectedItem as GridItem;
            Select(item);
        }

        /// <summary>
        /// OnStateParamChanged that accepts param that is set in app.config.
        /// </summary>
        /// <param name="param">String type of parameter.</param>
        public override void OnStateParamChanged(string param)
        {
            switch (param)
            {
                case "SelectLanguage":
                    SetSelectedLanguage();
                    break;
            }
        }

        /// <summary>
        /// Method for setting the current language
        /// </summary>
        private void SetSelectedLanguage()
        {
            foreach (GridItem item in this.LanguageOptions.Items)
            {
                string[] languageDataArray = item.Data.ToString().Split(';');
                if (languageDataArray.Length > 1)
                {
                    int languageData = int.Parse(languageDataArray[1], System.Globalization.NumberStyles.HexNumber, CultureInfo.InvariantCulture);
                    if (languageData == this.viewModel.CustomerLanguage)
                    {
                        this.LanguageOptions.SelectedItem = item;
                        break;
                    }
                }
            }
        }

        /// <summary>
        /// Handler for click event generated by UNav
        /// </summary>
        private void LanguageOptions_UNavClick(object sender, TouchListBoxUNavEventArgs e)
        {
            GridItem item = e.FocusedItem.DataContext as GridItem;
            LanguageOptions.SelectedItem = item;
            Select(item);
        }

        /// <summary>
        /// Select action
        /// </summary>
        /// <param name="item">grid item to perform select</param>
        private void Select(GridItem item)
        {
            if (null != item)
            {
                if (item.IsEnabled && item.IsVisible)
                {
                    this.viewModel.ActionCommand.Execute(String.Format(CultureInfo.InvariantCulture, "Languages({0})", LanguageOptions.SelectedIndex));
                }
            }
        }

        /// <summary>
        /// PopupView Loaded Event Handler
        /// </summary>
        /// <param name="sender">object sender</param>
        /// <param name="e">event e</param>
        private void PopupView_Loaded(object sender, RoutedEventArgs e)
        {
            if (viewModel.IsUNavEnabled)
            {
                if (LanguageOptions.SelectedItem != null)
                {
                    ListBoxItem selectedItem = (ListBoxItem)LanguageOptions.ItemContainerGenerator.ContainerFromItem(LanguageOptions.SelectedItem);
                    if (selectedItem != null)
                    {
                        selectedItem.Focus();
                    }
                }
            }
        }       
    }
}
