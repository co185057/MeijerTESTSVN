#if !defined(AFX_STDOPOSPOSPRINTER_H__EE351D08_173F_44F5_8752_5713C188B7D2__INCLUDED_)
#define AFX_STDOPOSPOSPRINTER_H__EE351D08_173F_44F5_8752_5713C188B7D2__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CStdOPOSPOSPrinter wrapper class

#define Init_CstrToV(s)    \
      VARIANT Var_##s;       \
      VariantInit(&Var_##s); \
      Var_##s.vt = VT_BSTR;  \
      Var_##s.bstrVal = s.AllocSysString();


#define CstrToV(s)         \
    &Var_##s

#define Uninit_CstrToV(s)  \
    VariantClear(&Var_##s);

template<class TYPE>
class TOPOSPOSPrinter  : public TYPE
   {
   public:
	   CLSID const& GetClsid()
   	   {
		   static CLSID const clsid
			   = { 0xccb90152, 0xb81e, 0x11d2, { 0xab, 0x74, 0x0, 0x40, 0x5, 0x4c, 0x37, 0x19 } };
		   return clsid;
	      }
	   virtual BOOL Create(LPCTSTR lpszClassName,
		   LPCTSTR lpszWindowName, DWORD dwStyle,
		   const RECT& rect,
		   CWnd* pParentWnd, UINT nID,
		   CCreateContext* pContext = NULL)
	      { 
         return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 
         }
      BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		   const RECT& rect, CWnd* pParentWnd, UINT nID,
		   CFile* pPersist = NULL, BOOL bStorage = FALSE,
		   BSTR bstrLicKey = NULL)
         { 
         return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		      pPersist, bStorage, bstrLicKey); 
         }
   // Attributes
   public:
   // Operations
   public:
      long GetOpenResult()
         {
         long result;
         InvokeHelper(0x31, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      CString GetCheckHealthText()
         {
         CString result;
         InvokeHelper(0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      BOOL GetClaimed()
         {
         BOOL result;
         InvokeHelper(0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetDeviceEnabled()
         {
         BOOL result;
         InvokeHelper(0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      void SetDeviceEnabled(BOOL bNewValue)
         {
         static BYTE parms[] = VTS_BOOL;
         InvokeHelper(0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, bNewValue);
         }
      BOOL GetFreezeEvents()
         {
         BOOL result;
         InvokeHelper(0x12, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      void SetFreezeEvents(BOOL bNewValue)
         {
         static BYTE parms[] = VTS_BOOL;
         InvokeHelper(0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, bNewValue);
         }
      long GetOutputID()
         {
         long result;
         InvokeHelper(0x13, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetResultCode()
         {
         long result;
         InvokeHelper(0x16, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetResultCodeExtended()
         {
         long result;
         InvokeHelper(0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetState()
         {
         long result;
         InvokeHelper(0x18, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      CString GetControlObjectDescription()
         {
         CString result;
         InvokeHelper(0x19, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      long GetControlObjectVersion()
         {
         long result;
         InvokeHelper(0x1a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      CString GetServiceObjectDescription()
         {
         CString result;
         InvokeHelper(0x1b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      long GetServiceObjectVersion()
         {
         long result;
         InvokeHelper(0x1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      CString GetDeviceDescription()
         {
         CString result;
         InvokeHelper(0x1d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      CString GetDeviceName()
         {
         CString result;
         InvokeHelper(0x1e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      long CheckHealth(long Level)
         {
         long result;
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x1f, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Level);
         return result;
         }
      long ClaimDevice(long Timeout)
         {
         long result;
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x20, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Timeout);
         return result;
         }
      long Claim(long Timeout)
         {
         long result;
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x20, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Timeout);
         return result;
         }
      long ClearOutput()
         {
         long result;
         InvokeHelper(0x22, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
         return result;
         }
      long Close()
         {
         long result;
         InvokeHelper(0x23, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
         return result;
         }
      long DirectIO(long Command, long* pData, BSTR* pString)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_PI4 VTS_PBSTR;
         InvokeHelper(0x24, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
            Command, pData, pString);
         return result;
         }
      long Open(LPCTSTR DeviceName)
         {
         long result;
         static BYTE parms[] = VTS_BSTR;
         InvokeHelper(0x25, DISPATCH_METHOD, VT_I4, (void*)&result, parms, DeviceName);
         return result;
         }
      long ReleaseDevice()
         {
         long result;
         InvokeHelper(0x26, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
         return result;
         }
      long Release()
         {
         long result;
         InvokeHelper(0x26, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
         return result;
         }
      BOOL GetAsyncMode()
         {
         BOOL result;
         InvokeHelper(0x32, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      void SetAsyncMode(BOOL bNewValue)
         {
         static BYTE parms[] = VTS_BOOL;
         InvokeHelper(0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, bNewValue);
         }
      BOOL GetCapConcurrentJrnRec()
         {
         BOOL result;
         InvokeHelper(0x34, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapConcurrentJrnSlp()
         {
         BOOL result;
         InvokeHelper(0x35, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapConcurrentRecSlp()
         {
         BOOL result;
         InvokeHelper(0x36, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapCoverSensor()
         {
         BOOL result;
         InvokeHelper(0x37, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapJrn2Color()
         {
         BOOL result;
         InvokeHelper(0x38, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapJrnBold()
         {
         BOOL result;
         InvokeHelper(0x39, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapJrnDhigh()
         {
         BOOL result;
         InvokeHelper(0x3a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapJrnDwide()
         {
         BOOL result;
         InvokeHelper(0x3b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapJrnDwideDhigh()
         {
         BOOL result;
         InvokeHelper(0x3c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapJrnEmptySensor()
         {
         BOOL result;
         InvokeHelper(0x3d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapJrnItalic()
         {
         BOOL result;
         InvokeHelper(0x3e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapJrnNearEndSensor()
         {
         BOOL result;
         InvokeHelper(0x3f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapJrnPresent()
         {
         BOOL result;
         InvokeHelper(0x40, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapJrnUnderline()
         {
         BOOL result;
         InvokeHelper(0x41, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRec2Color()
         {
         BOOL result;
         InvokeHelper(0x42, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecBarCode()
         {
         BOOL result;
         InvokeHelper(0x43, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecBitmap()
         {
         BOOL result;
         InvokeHelper(0x44, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecBold()
         {
         BOOL result;
         InvokeHelper(0x45, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecDhigh()
         {
         BOOL result;
         InvokeHelper(0x46, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecDwide()
         {
         BOOL result;
         InvokeHelper(0x47, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecDwideDhigh()
         {
         BOOL result;
         InvokeHelper(0x48, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecEmptySensor()
         {
         BOOL result;
         InvokeHelper(0x49, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecItalic()
         {
         BOOL result;
         InvokeHelper(0x4a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecLeft90()
         {
         BOOL result;
         InvokeHelper(0x4b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecNearEndSensor()
         {
         BOOL result;
         InvokeHelper(0x4c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecPapercut()
         {
         BOOL result;
         InvokeHelper(0x4d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecPresent()
         {
         BOOL result;
         InvokeHelper(0x4e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecRight90()
         {
         BOOL result;
         InvokeHelper(0x4f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecRotate180()
         {
         BOOL result;
         InvokeHelper(0x50, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecStamp()
         {
         BOOL result;
         InvokeHelper(0x51, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapRecUnderline()
         {
         BOOL result;
         InvokeHelper(0x52, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlp2Color()
         {
         BOOL result;
         InvokeHelper(0x53, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpBarCode()
         {
         BOOL result;
         InvokeHelper(0x54, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpBitmap()
         {
         BOOL result;
         InvokeHelper(0x55, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpBold()
         {
         BOOL result;
         InvokeHelper(0x56, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpDhigh()
         {
         BOOL result;
         InvokeHelper(0x57, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpDwide()
         {
         BOOL result;
         InvokeHelper(0x58, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpDwideDhigh()
         {
         BOOL result;
         InvokeHelper(0x59, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpEmptySensor()
         {
         BOOL result;
         InvokeHelper(0x5a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpFullslip()
         {
         BOOL result;
         InvokeHelper(0x5b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpItalic()
         {
         BOOL result;
         InvokeHelper(0x5c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpLeft90()
         {
         BOOL result;
         InvokeHelper(0x5d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpNearEndSensor()
         {
         BOOL result;
         InvokeHelper(0x5e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpPresent()
         {
         BOOL result;
         InvokeHelper(0x5f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpRight90()
         {
         BOOL result;
         InvokeHelper(0x60, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpRotate180()
         {
         BOOL result;
         InvokeHelper(0x61, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpUnderline()
         {
         BOOL result;
         InvokeHelper(0x62, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      long GetCharacterSet()
         {
         long result;
         InvokeHelper(0x64, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetCharacterSet(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      CString GetCharacterSetList()
         {
         CString result;
         InvokeHelper(0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      BOOL GetCoverOpen()
         {
         BOOL result;
         InvokeHelper(0x66, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      long GetErrorStation()
         {
         long result;
         InvokeHelper(0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      BOOL GetFlagWhenIdle()
         {
         BOOL result;
         InvokeHelper(0x6a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      void SetFlagWhenIdle(BOOL bNewValue)
         {
         static BYTE parms[] = VTS_BOOL;
         InvokeHelper(0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, bNewValue);
         }
      BOOL GetJrnEmpty()
         {
         BOOL result;
         InvokeHelper(0x6c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetJrnLetterQuality()
         {
         BOOL result;
         InvokeHelper(0x6d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      void SetJrnLetterQuality(BOOL bNewValue)
         {
         static BYTE parms[] = VTS_BOOL;
         InvokeHelper(0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, bNewValue);
         }
      long GetJrnLineChars()
         {
         long result;
         InvokeHelper(0x6e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetJrnLineChars(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      CString GetJrnLineCharsList()
         {
         CString result;
         InvokeHelper(0x6f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      long GetJrnLineHeight()
         {
         long result;
         InvokeHelper(0x70, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetJrnLineHeight(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetJrnLineSpacing()
         {
         long result;
         InvokeHelper(0x71, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetJrnLineSpacing(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetJrnLineWidth()
         {
         long result;
         InvokeHelper(0x72, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      BOOL GetJrnNearEnd()
         {
         BOOL result;
         InvokeHelper(0x73, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      long GetMapMode()
         {
         long result;
         InvokeHelper(0x74, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetMapMode(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      BOOL GetRecEmpty()
         {
         BOOL result;
         InvokeHelper(0x76, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetRecLetterQuality()
         {
         BOOL result;
         InvokeHelper(0x77, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      void SetRecLetterQuality(BOOL bNewValue)
         {
         static BYTE parms[] = VTS_BOOL;
         InvokeHelper(0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, bNewValue);
         }
      long GetRecLineChars()
         {
         long result;
         InvokeHelper(0x78, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetRecLineChars(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      CString GetRecLineCharsList()
         {
         CString result;
         InvokeHelper(0x79, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      long GetRecLineHeight()
         {
         long result;
         InvokeHelper(0x7a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetRecLineHeight(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetRecLineSpacing()
         {
         long result;
         InvokeHelper(0x7b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetRecLineSpacing(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetRecLinesToPaperCut()
         {
         long result;
         InvokeHelper(0x7c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetRecLineWidth()
         {
         long result;
         InvokeHelper(0x7d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      BOOL GetRecNearEnd()
         {
         BOOL result;
         InvokeHelper(0x7e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      long GetRecSidewaysMaxChars()
         {
         long result;
         InvokeHelper(0x7f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetRecSidewaysMaxLines()
         {
         long result;
         InvokeHelper(0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      BOOL GetSlpEmpty()
         {
         BOOL result;
         InvokeHelper(0x83, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetSlpLetterQuality()
         {
         BOOL result;
         InvokeHelper(0x84, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      void SetSlpLetterQuality(BOOL bNewValue)
         {
         static BYTE parms[] = VTS_BOOL;
         InvokeHelper(0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, bNewValue);
         }
      long GetSlpLineChars()
         {
         long result;
         InvokeHelper(0x85, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetSlpLineChars(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      CString GetSlpLineCharsList()
         {
         CString result;
         InvokeHelper(0x86, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      long GetSlpLineHeight()
         {
         long result;
         InvokeHelper(0x87, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetSlpLineHeight(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetSlpLinesNearEndToEnd()
         {
         long result;
         InvokeHelper(0x88, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetSlpLineSpacing()
         {
         long result;
         InvokeHelper(0x89, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetSlpLineSpacing(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetSlpLineWidth()
         {
         long result;
         InvokeHelper(0x8a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetSlpMaxLines()
         {
         long result;
         InvokeHelper(0x8b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      BOOL GetSlpNearEnd()
         {
         BOOL result;
         InvokeHelper(0x8c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      long GetSlpSidewaysMaxChars()
         {
         long result;
         InvokeHelper(0x8d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetSlpSidewaysMaxLines()
         {
         long result;
         InvokeHelper(0x8e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long BeginInsertion(long Timeout)
         {
         long result;
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0xa0, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Timeout);
         return result;
         }
      long BeginRemoval(long Timeout)
         {
         long result;
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0xa1, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Timeout);
         return result;
         }
      long CutPaper(long Percentage)
         {
         long result;
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0xa2, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Percentage);
         return result;
         }
      long EndInsertion()
         {
         long result;
         InvokeHelper(0xa3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
         return result;
         }
      long EndRemoval()
         {
         long result;
         InvokeHelper(0xa4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
         return result;
         }
      long PrintBarCode(long Station, LPCTSTR Data, long Symbology, long Height, long Width, long Alignment, long TextPosition)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
         InvokeHelper(0xa5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
            Station, Data, Symbology, Height, Width, Alignment, TextPosition);
         return result;
         }
      long PrintBitmap(long Station, LPCTSTR FileName, long Width, long Alignment)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_BSTR VTS_I4 VTS_I4;
         InvokeHelper(0xa6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
            Station, FileName, Width, Alignment);
         return result;
         }
      long PrintImmediate(long Station, CString Data)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_VARIANT;
         Init_CstrToV( Data );
         InvokeHelper(0xa7, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Station, CstrToV( Data ) );
         Uninit_CstrToV( Data );
         return result;
         }
      long PrintNormal(long Station, CString Data)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_VARIANT;
         Init_CstrToV( Data );
         InvokeHelper(0xa8, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Station, CstrToV( Data ) );
         Uninit_CstrToV( Data );
         return result;
         }
      long PrintTwoNormal(long Stations, CString Data1, CString Data2)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_VARIANT VTS_VARIANT;
         Init_CstrToV( Data1 );
         Init_CstrToV( Data2 );
         InvokeHelper(0xa9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
            Stations, CstrToV( Data1 ), CstrToV( Data2 ) );
         Uninit_CstrToV( Data1 );
         Uninit_CstrToV( Data2 );
         return result;
         }
      long RotatePrint(long Station, long Rotation)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_I4;
         InvokeHelper(0xaa, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Station, Rotation);
         return result;
         }
      long SetBitmap(long BitmapNumber, long Station, LPCTSTR FileName, long Width, long Alignment)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_I4 VTS_BSTR VTS_I4 VTS_I4;
         InvokeHelper(0xab, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
            BitmapNumber, Station, FileName, Width, Alignment);
         return result;
         }
      long SetLogo(long Location, LPCTSTR Data)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_BSTR;
         InvokeHelper(0xac, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Location, Data);
         return result;
         }
      long GetCapCharacterSet()
         {
         long result;
         InvokeHelper(0x33, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapTransaction()
         {
         BOOL result;
         InvokeHelper(0x63, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      long GetErrorLevel()
         {
         long result;
         InvokeHelper(0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      CString GetErrorString()
         {
         CString result;
         InvokeHelper(0x69, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      CString GetFontTypefaceList()
         {
         CString result;
         InvokeHelper(0x6b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      CString GetRecBarCodeRotationList()
         {
         CString result;
         InvokeHelper(0x75, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      long GetRotateSpecial()
         {
         long result;
         InvokeHelper(0x81, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetRotateSpecial(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      CString GetSlpBarCodeRotationList()
         {
         CString result;
         InvokeHelper(0x82, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      long TransactionPrint(long Station, long Control)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_I4;
         InvokeHelper(0xad, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Station, Control);
         return result;
         }
      long ValidateData(long Station, CString Data)
         {
         long result;
         static BYTE parms[] = VTS_I4 VTS_VARIANT;
         Init_CstrToV( Data );
         InvokeHelper(0xae, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Station, CstrToV( Data ));
         Uninit_CstrToV( Data );
         return result;
         }
      long GetBinaryConversion()
         {
         long result;
         InvokeHelper(0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetBinaryConversion(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetCapPowerReporting()
         {
         long result;
         InvokeHelper(0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetPowerNotify()
         {
         long result;
         InvokeHelper(0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetPowerNotify(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetPowerState()
         {
         long result;
         InvokeHelper(0x15, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetCapJrnCartridgeSensor()
         {
         long result;
         InvokeHelper(0x8f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetCapJrnColor()
         {
         long result;
         InvokeHelper(0x90, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetCapRecCartridgeSensor()
         {
         long result;
         InvokeHelper(0x91, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetCapRecColor()
         {
         long result;
         InvokeHelper(0x92, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetCapRecMarkFeed()
         {
         long result;
         InvokeHelper(0x93, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapSlpBothSidesPrint()
         {
         BOOL result;
         InvokeHelper(0x94, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      long GetCapSlpCartridgeSensor()
         {
         long result;
         InvokeHelper(0x95, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetCapSlpColor()
         {
         long result;
         InvokeHelper(0x96, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetCartridgeNotify()
         {
         long result;
         InvokeHelper(0x97, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetCartridgeNotify(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x97, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetJrnCartridgeState()
         {
         long result;
         InvokeHelper(0x98, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetJrnCurrentCartridge()
         {
         long result;
         InvokeHelper(0x99, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetJrnCurrentCartridge(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x99, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetRecCartridgeState()
         {
         long result;
         InvokeHelper(0x9a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetRecCurrentCartridge()
         {
         long result;
         InvokeHelper(0x9b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetRecCurrentCartridge(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x9b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetSlpCartridgeState()
         {
         long result;
         InvokeHelper(0x9c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long GetSlpCurrentCartridge()
         {
         long result;
         InvokeHelper(0x9d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      void SetSlpCurrentCartridge(long nNewValue)
         {
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0x9d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, nNewValue);
         }
      long GetSlpPrintSide()
         {
         long result;
         InvokeHelper(0x9e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
         return result;
         }
      long ChangePrintSide(long Side)
         {
         long result;
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0xaf, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Side);
         return result;
         }
      long MarkFeed(long Type)
         {
         long result;
         static BYTE parms[] = VTS_I4;
         InvokeHelper(0xb0, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Type);
         return result;
         }
      BOOL GetCapMapCharacterSet()
         {
         BOOL result;
         InvokeHelper(0xbe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetMapCharacterSet()
         {
         BOOL result;
         InvokeHelper(0xbf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      void SetMapCharacterSet(BOOL bNewValue)
         {
         static BYTE parms[] = VTS_BOOL;
         InvokeHelper(0xbf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, bNewValue);
         }
      CString GetRecBitmapRotationList()
         {
         CString result;
         InvokeHelper(0xc0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      CString GetSlpBitmapRotationList()
         {
         CString result;
         InvokeHelper(0xc1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapStatisticsReporting()
         {
         BOOL result;
         InvokeHelper(0x27, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      BOOL GetCapUpdateStatistics()
         {
         BOOL result;
         InvokeHelper(0x28, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
         return result;
         }
      long ResetStatistics(LPCTSTR StatisticsBuffer)
         {
         long result;
         static BYTE parms[] = VTS_BSTR;
         InvokeHelper(0x29, DISPATCH_METHOD, VT_I4, (void*)&result, parms, StatisticsBuffer);
         return result;
         }
      long RetrieveStatistics(BSTR* pStatisticsBuffer)
         {
         long result;
         static BYTE parms[] = VTS_PBSTR;
         InvokeHelper(0x2a, DISPATCH_METHOD, VT_I4, (void*)&result, parms, pStatisticsBuffer);
         return result;
         }
      long UpdateStatistics(LPCTSTR StatisticsBuffer)
         {
         long result;
         static BYTE parms[] = VTS_BSTR;
         InvokeHelper(0x2b, DISPATCH_METHOD, VT_I4, (void*)&result, parms, StatisticsBuffer);
         return result;
         }
   };

class CStdOPOSPOSPrinter : public TOPOSPOSPrinter<CWnd>
   {
   protected:
	   DECLARE_DYNCREATE(CStdOPOSPOSPrinter)
   };

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_STDOPOSPOSPRINTER_H__EE351D08_173F_44F5_8752_5713C188B7D2__INCLUDED_)
