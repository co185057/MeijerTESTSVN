#if !defined(AFX_OPOSPINPAD_H__6C093533_961D_482B_AC8E_AFE53ABD5597__INCLUDED_)
#define AFX_OPOSPINPAD_H__6C093533_961D_482B_AC8E_AFE53ABD5597__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.
#include "OposControl.h"

/////////////////////////////////////////////////////////////////////////////
// COPOSPINPad wrapper class

class COPOSPINPad : public COposControl
{
protected:
	DECLARE_DYNCREATE(COPOSPINPad)
public:
     //TAR253061 
	LPCTSTR GetProgid()
	{
		static TCHAR progid[] = _T("OPOS.Pinpad");
		return progid;
	}

	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{
		return CreateControl(GetProgid(), lpszWindowName, dwStyle, rect, pParentWnd, nID);
	}

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ 
		return CreateControl(GetProgid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); 
	}

// Attributes
public:

// Operations
public:
	long GetOpenResult();
	long GetBinaryConversion();
	void SetBinaryConversion(long nNewValue);
	long GetCapPowerReporting();
	CString GetCheckHealthText();
	BOOL GetClaimed();
	long GetDataCount();
	BOOL GetDataEventEnabled();
	void SetDataEventEnabled(BOOL bNewValue);
	BOOL GetDeviceEnabled();
	void SetDeviceEnabled(BOOL bNewValue);
	BOOL GetFreezeEvents();
	void SetFreezeEvents(BOOL bNewValue);
	long GetPowerNotify();
	void SetPowerNotify(long nNewValue);
	long GetPowerState();
	long GetResultCode();
	long GetResultCodeExtended();
	long GetState();
	CString GetControlObjectDescription();
	long GetControlObjectVersion();
	CString GetServiceObjectDescription();
	long GetServiceObjectVersion();
	CString GetDeviceDescription();
	CString GetDeviceName();
	long CheckHealth(long Level);
	long ClaimDevice(long Timeout);            //TAR253061
	long ClearInput();
	long Close();
	long DirectIO(long Command, long* pData, BSTR* pString);
	long Open(LPCTSTR DeviceName);
	long ReleaseDevice();                      //TAR253061
	CString GetAccountNumber();
	void SetAccountNumber(LPCTSTR lpszNewValue);
	CString GetAdditionalSecurityInformation();
	CY GetAmount();
	void SetAmount(const CY& newValue);
	CString GetAvailableLanguagesList();
	CString GetAvailablePromptsList();
	long GetCapDisplay();
	BOOL GetCapKeyboard();
	long GetCapLanguage();
	BOOL GetCapMACCalculation();
	BOOL GetCapTone();
	CString GetEncryptedPIN();
	long GetMaximumPINLength();
	void SetMaximumPINLength(long nNewValue);
	CString GetMerchantID();
	void SetMerchantID(LPCTSTR lpszNewValue);
	long GetMinimumPINLength();
	void SetMinimumPINLength(long nNewValue);
	BOOL GetPINEntryEnabled();
	long GetPrompt();
	void SetPrompt(long nNewValue);
	long GetPromptLanguage();
	void SetPromptLanguage(long nNewValue);
	CString GetTerminalID();
	void SetTerminalID(LPCTSTR lpszNewValue);
	CString GetTrack1Data();
	void SetTrack1Data(LPCTSTR lpszNewValue);
	CString GetTrack2Data();
	void SetTrack2Data(LPCTSTR lpszNewValue);
	CString GetTrack3Data();
	void SetTrack3Data(LPCTSTR lpszNewValue);
	long GetTransactionType();
	void SetTransactionType(long nNewValue);
	long BeginEFTTransaction(LPCTSTR PINPadSystem, long TransactionHost);
	long ComputeMAC(LPCTSTR InMsg, BSTR* pOutMsg);
	long EnablePINEntry();
	long EndEFTTransaction(long CompletionCode);
	long UpdateKey(long KeyNum, LPCTSTR Key);
	long VerifyMAC(LPCTSTR Message);
	CString GetTrack4Data();
	void SetTrack4Data(LPCTSTR lpszNewValue);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_OPOSPINPAD_H__6C093533_961D_482B_AC8E_AFE53ABD5597__INCLUDED_)
