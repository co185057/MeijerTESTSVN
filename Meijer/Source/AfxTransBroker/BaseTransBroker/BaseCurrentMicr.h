///////////////////////////////////////////////////////////////////////////
///
/// \file BaseCurrentMicr.h
/// \brief interface for the CBaseCurrentMicr class.
///
///	@author: FastLane POSI
///
//////////////////////////////////////////////////////////////////////////

#if !defined(AFX_BaseCurrentMicr_H__INCLUDED_)
#define AFX_BaseCurrentMicr_H__INCLUDED_
#include "micrMsg.h"

//////////////////////////////////////////////////////////////////////
///
/// CBaseCurrentMicr is  
///
///	@author: FastLane POSI
///
//////////////////////////////////////////////////////////////////////
class CBaseCurrentMicr : public CMicrMsg
{
public:
	//////////////////////////////////////////////////////////////////////
	///
	/// Destructor
	///
	//////////////////////////////////////////////////////////////////////
  virtual ~CBaseCurrentMicr();
	
	//////////////////////////////////////////////////////////////////////
	///
	/// Refresh, casts a CMicrMsg to a this*, get msg data into class
	///	
	///	@param CMicrMsg *pMsg
	//////////////////////////////////////////////////////////////////////
	void Refresh(CMicrMsg *pMsg);

protected:
	//////////////////////////////////////////////////////////////////////
	///
	/// Constructor
	///
	//////////////////////////////////////////////////////////////////////
	CBaseCurrentMicr();

private:
	//////////////////////////////////////////////////////////////////////
	///
	/// Hide Copy Const
	///
	//////////////////////////////////////////////////////////////////////
	CBaseCurrentMicr(const CBaseCurrentMicr &);                    // hide copy const

	//////////////////////////////////////////////////////////////////////
	///
	/// Hide Assignment
	///
	//////////////////////////////////////////////////////////////////////
	CBaseCurrentMicr & operator =(const CBaseCurrentMicr &); // hide assignment
};

#endif 
