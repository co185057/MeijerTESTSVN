///////////////////////////////////////////////////////////////////////////
///
/// \file BaseTBProperties.h
/// \brief Interface for the CTBProperties class.
///
//////////////////////////////////////////////////////////////////////
#if !defined(AFX_TBPROPERTIES_H__87331EEF_1E06_44DA_836B_255595E965F1__INCLUDED_)
#define AFX_TBPROPERTIES_H__87331EEF_1E06_44DA_836B_255595E965F1__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#pragma warning (disable: 4786)
#pragma warning (disable: 4788)
#include <map>
using namespace std;

#include "SingleInstance.h"

//////////////////////////////////////////////////////////////////////
/// Const for NewFLState
//////////////////////////////////////////////////////////////////////
const LPCTSTR TBPROP_NEWFLSTATE         = _T("NewFLState");

//////////////////////////////////////////////////////////////////////
/// Const for ItemPrice
//////////////////////////////////////////////////////////////////////
const LPCTSTR TBPROP_ITEMPRICE          = _T("ItemPrice");

//////////////////////////////////////////////////////////////////////
/// Const for ItemCode
//////////////////////////////////////////////////////////////////////
const LPCTSTR TBPROP_ITEMCODE           = _T("ItemCode");

//////////////////////////////////////////////////////////////////////
/// Const for ItemQty
//////////////////////////////////////////////////////////////////////
const LPCTSTR TBPROP_QTY                = _T("ItemQty");

//////////////////////////////////////////////////////////////////////
/// Const for ItemWeight
//////////////////////////////////////////////////////////////////////
const LPCTSTR TBPROP_WEIGHT             = _T("ItemWeight");

//////////////////////////////////////////////////////////////////////
/// Const for ItemID
//////////////////////////////////////////////////////////////////////
const LPCTSTR TBPROP_ENTRYID            = _T("ItemID");

//////////////////////////////////////////////////////////////////////
/// Const for EnteredTenderAmount
//////////////////////////////////////////////////////////////////////
const LPCTSTR TBPROP_ENTERTENDERAMOUNT  = _T("EnteredTenderAmount");

//////////////////////////////////////////////////////////////////////
/// Const for ItemTare
//////////////////////////////////////////////////////////////////////
const LPCTSTR TBPROP_ITEMTARE           = _T("ItemTare");

typedef map<CString , CString> CStringMap;

//////////////////////////////////////////////////////////////////////
///
/// CBaseTBProperties is ...
///
///	@author: FastLane POSI
///
//////////////////////////////////////////////////////////////////////
class CBaseTBProperties 
{

public:
	//////////////////////////////////////////////////////////////////////
	///
	/// GetProperty
	///
	///	@param LPCTSTR
	///	@return CString
	//////////////////////////////////////////////////////////////////////
	virtual CString GetProperty(LPCTSTR szPropertyName);

	//////////////////////////////////////////////////////////////////////
	///
	/// SetProperty
	///
	///	@param LPCTSTR
	///	@param LPCTSTR
	//////////////////////////////////////////////////////////////////////
	virtual void SetProperty(LPCTSTR szPropertyName, LPCTSTR szValue);
	
	//////////////////////////////////////////////////////////////////////
	///
	/// GetHookProperty
	///
	///	@param LPCTSTR
	///	@return CString
	//////////////////////////////////////////////////////////////////////
	virtual CString GetHookProperty(LPCTSTR szPropertyName);

	//////////////////////////////////////////////////////////////////////
	///
	/// SetHookProperty
	///
	///	@param LPCTSTR
	///	@param LPCTSTR
	//////////////////////////////////////////////////////////////////////
	virtual void SetHookProperty(LPCTSTR szPropertyName, LPCTSTR szValue);

protected:

	//////////////////////////////////////////////////////////////////////
	///
	/// Constructor
	///
	//////////////////////////////////////////////////////////////////////
	CBaseTBProperties();

	//////////////////////////////////////////////////////////////////////
	///
	/// Destructor
	///
	//////////////////////////////////////////////////////////////////////
	virtual ~CBaseTBProperties();

private:
   CStringMap m_stringMap;	///< string mpa
   CStringMap::iterator m_MapIterator;	///< map iterator
   CRITICAL_SECTION m_CritSec;	///< critical section

	 //////////////////////////////////////////////////////////////////////
	 ///
	 /// Hide Copy Const
	 ///
	 //////////////////////////////////////////////////////////////////////
   CBaseTBProperties (const CBaseTBProperties &);

	 //////////////////////////////////////////////////////////////////////
	 ///
	 /// Hide assignment
	 ///
	 //////////////////////////////////////////////////////////////////////
   CBaseTBProperties & operator =(const CBaseTBProperties &);
};

#endif // !defined(AFX_TBPROPERTIES_H__87331EEF_1E06_44DA_836B_255595E965F1__INCLUDED_)
