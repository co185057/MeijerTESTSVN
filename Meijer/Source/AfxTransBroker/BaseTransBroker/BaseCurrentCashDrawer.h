///////////////////////////////////////////////////////////////////////////
///
/// \file BaseCurrentCashDrawer.h
/// \brief interface for the CBaseCurrentCashDrawer class.
///
///	@author: FastLane POSI
///
//////////////////////////////////////////////////////////////////////////

#if !defined(AFX_BaseCurrentCashDrawer_H__INCLUDED_)
#define AFX_BaseCurrentCashDrawer_H__INCLUDED_

#include "transbroker.h"
#include "cashdrawerMsg.h"

#define CASHDRAWER_CLOSED   0
#define CASHDRAWER_OPEN     1

//////////////////////////////////////////////////////////////////////
///
/// CBaseCurrentCashDrawer is  
///
///	@author: FastLane POSI
///
//////////////////////////////////////////////////////////////////////
class CBaseCurrentCashDrawer : public CCashDrawerMsg
{
public:
	//////////////////////////////////////////////////////////////////////
	///
	/// Destructor
	///
	//////////////////////////////////////////////////////////////////////
    virtual ~CBaseCurrentCashDrawer();

	//////////////////////////////////////////////////////////////////////
	///
	/// Refresh, casts a CashDrawerMsg to a this*, get msg data into class
	///
	///	@param CCashDrawerMsg *pMsg
	//////////////////////////////////////////////////////////////////////
    void Refresh(CCashDrawerMsg *pMsg);

	//////////////////////////////////////////////////////////////////////
	///
	/// GetExpectedCashDrawerState, TBAPI
	///
	///	@param long plExpectedState - to populate expected state
	///	@return TBRC, status of API call
	//////////////////////////////////////////////////////////////////////
    virtual TBRC GetExpectedCashDrawerState(long *plExpectedState);

	//////////////////////////////////////////////////////////////////////
	///
	/// SetCashDrawerState, TBAPI to set the cash drawer state
	///
	///	@param long lState - value of new cash drawer state	
	///	@return TBRC, status of API call
	//////////////////////////////////////////////////////////////////////
    virtual TBRC SetCashDrawerState(long lState);

	//////////////////////////////////////////////////////////////////////
	///
	/// setExpectedCashDrawerState, set the expected cash drawer state
	///
	///	@param long lState, value of new expected cash drawer state
	///	@return TBRC, status of API call
	//////////////////////////////////////////////////////////////////////
    void setExpectedCashDrawerState( long lState);

protected:
	//////////////////////////////////////////////////////////////////////
	///
	/// Constructor
	///
	//////////////////////////////////////////////////////////////////////
    CBaseCurrentCashDrawer();

private:
	//////////////////////////////////////////////////////////////////////
	///
	/// Hide copy const
	///
	//////////////////////////////////////////////////////////////////////
    CBaseCurrentCashDrawer(const CBaseCurrentCashDrawer &);                    // hide copy const

	//////////////////////////////////////////////////////////////////////
	///
	/// Hide Assignment
	///
	//////////////////////////////////////////////////////////////////////
    CBaseCurrentCashDrawer & operator =(const CBaseCurrentCashDrawer &); // hide assignment

	long m_lExpectedCashDrawerState;	///< long variable to track the expected cash drawer state
};

#endif 
