//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace RapNet.POSFileAccessService {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttp", Namespace="http://tempuri.org/")]
    public class POSFileAccessws : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public POSFileAccessws() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["RapNet_POSFileAccessService_POSFileAccessws"];
            if ((urlSetting != null)) {
                this.Url = string.Concat(urlSetting, "");
            }
            else {
                this.Url = "http://153.60.40.81:9992/POSFileAccessService/basic";
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPOSFileAccessws/EmplPwdChange_ws", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmplPwdChange_ws([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string OperID, out int EmplPwdChange_wsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool EmplPwdChange_wsResultSpecified) {
            object[] results = this.Invoke("EmplPwdChange_ws", new object[] {
                        OperID});
            EmplPwdChange_wsResult = ((int)(results[0]));
            EmplPwdChange_wsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEmplPwdChange_ws(string OperID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EmplPwdChange_ws", new object[] {
                        OperID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEmplPwdChange_ws(System.IAsyncResult asyncResult, out int EmplPwdChange_wsResult, out bool EmplPwdChange_wsResultSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            EmplPwdChange_wsResult = ((int)(results[0]));
            EmplPwdChange_wsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPOSFileAccessws/ChangeEmplPwd_ws", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeEmplPwd_ws([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string OperID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string OldPwd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NewPwd, out int ChangeEmplPwd_wsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ChangeEmplPwd_wsResultSpecified) {
            object[] results = this.Invoke("ChangeEmplPwd_ws", new object[] {
                        OperID,
                        OldPwd,
                        NewPwd});
            ChangeEmplPwd_wsResult = ((int)(results[0]));
            ChangeEmplPwd_wsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeEmplPwd_ws(string OperID, string OldPwd, string NewPwd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeEmplPwd_ws", new object[] {
                        OperID,
                        OldPwd,
                        NewPwd}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndChangeEmplPwd_ws(System.IAsyncResult asyncResult, out int ChangeEmplPwd_wsResult, out bool ChangeEmplPwd_wsResultSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            ChangeEmplPwd_wsResult = ((int)(results[0]));
            ChangeEmplPwd_wsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPOSFileAccessws/ValidateEmplPwd_ws", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateEmplPwd_ws([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string OperID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string OldPwd, out int ValidateEmplPwd_wsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ValidateEmplPwd_wsResultSpecified) {
            object[] results = this.Invoke("ValidateEmplPwd_ws", new object[] {
                        OperID,
                        OldPwd});
            ValidateEmplPwd_wsResult = ((int)(results[0]));
            ValidateEmplPwd_wsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateEmplPwd_ws(string OperID, string OldPwd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateEmplPwd_ws", new object[] {
                        OperID,
                        OldPwd}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndValidateEmplPwd_ws(System.IAsyncResult asyncResult, out int ValidateEmplPwd_wsResult, out bool ValidateEmplPwd_wsResultSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            ValidateEmplPwd_wsResult = ((int)(results[0]));
            ValidateEmplPwd_wsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPOSFileAccessws/GetMaxInvalidPwdAttempts_ws", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMaxInvalidPwdAttempts_ws(out int GetMaxInvalidPwdAttempts_wsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetMaxInvalidPwdAttempts_wsResultSpecified) {
            object[] results = this.Invoke("GetMaxInvalidPwdAttempts_ws", new object[0]);
            GetMaxInvalidPwdAttempts_wsResult = ((int)(results[0]));
            GetMaxInvalidPwdAttempts_wsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMaxInvalidPwdAttempts_ws(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMaxInvalidPwdAttempts_ws", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetMaxInvalidPwdAttempts_ws(System.IAsyncResult asyncResult, out int GetMaxInvalidPwdAttempts_wsResult, out bool GetMaxInvalidPwdAttempts_wsResultSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            GetMaxInvalidPwdAttempts_wsResult = ((int)(results[0]));
            GetMaxInvalidPwdAttempts_wsResultSpecified = ((bool)(results[1]));
        }
    }
}
