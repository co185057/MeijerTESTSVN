// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "civicmform.h"

/////////////////////////////////////////////////////////////////////////////
// CIVICMForm

IMPLEMENT_DYNCREATE(CIVICMForm, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CIVICMForm properties

CString CIVICMForm::GetCheckHealthText()
{
	CString result;
	GetProperty(0x1, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetCheckHealthText(LPCTSTR propVal)
{
	SetProperty(0x1, VT_BSTR, propVal);
}

BOOL CIVICMForm::GetClaimed()
{
	BOOL result;
	GetProperty(0x2, VT_BOOL, (void*)&result);
	return result;
}

void CIVICMForm::SetClaimed(BOOL propVal)
{
	SetProperty(0x2, VT_BOOL, propVal);
}

BOOL CIVICMForm::GetDataEventEnabled()
{
	BOOL result;
	GetProperty(0x3, VT_BOOL, (void*)&result);
	return result;
}

void CIVICMForm::SetDataEventEnabled(BOOL propVal)
{
	SetProperty(0x3, VT_BOOL, propVal);
}

BOOL CIVICMForm::GetDeviceEnabled()
{
	BOOL result;
	GetProperty(0x4, VT_BOOL, (void*)&result);
	return result;
}

void CIVICMForm::SetDeviceEnabled(BOOL propVal)
{
	SetProperty(0x4, VT_BOOL, propVal);
}

BOOL CIVICMForm::GetFreezeEvents()
{
	BOOL result;
	GetProperty(0x5, VT_BOOL, (void*)&result);
	return result;
}

void CIVICMForm::SetFreezeEvents(BOOL propVal)
{
	SetProperty(0x5, VT_BOOL, propVal);
}

long CIVICMForm::GetResultCode()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetResultCode(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

long CIVICMForm::GetResultCodeExtended()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetResultCodeExtended(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

long CIVICMForm::GetState()
{
	long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetState(long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

CString CIVICMForm::GetControlObjectDescription()
{
	CString result;
	GetProperty(0x9, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetControlObjectDescription(LPCTSTR propVal)
{
	SetProperty(0x9, VT_BSTR, propVal);
}

long CIVICMForm::GetControlObjectVersion()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetControlObjectVersion(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

CString CIVICMForm::GetServiceObjectDescription()
{
	CString result;
	GetProperty(0xb, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetServiceObjectDescription(LPCTSTR propVal)
{
	SetProperty(0xb, VT_BSTR, propVal);
}

long CIVICMForm::GetServiceObjectVersion()
{
	long result;
	GetProperty(0xc, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetServiceObjectVersion(long propVal)
{
	SetProperty(0xc, VT_I4, propVal);
}

CString CIVICMForm::GetDeviceDescription()
{
	CString result;
	GetProperty(0xd, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetDeviceDescription(LPCTSTR propVal)
{
	SetProperty(0xd, VT_BSTR, propVal);
}

CString CIVICMForm::GetDeviceName()
{
	CString result;
	GetProperty(0xe, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetDeviceName(LPCTSTR propVal)
{
	SetProperty(0xe, VT_BSTR, propVal);
}

long CIVICMForm::GetRows()
{
	long result;
	GetProperty(0xf, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetRows(long propVal)
{
	SetProperty(0xf, VT_I4, propVal);
}

long CIVICMForm::GetColumns()
{
	long result;
	GetProperty(0x10, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetColumns(long propVal)
{
	SetProperty(0x10, VT_I4, propVal);
}

CString CIVICMForm::GetRawData()
{
	CString result;
	GetProperty(0x11, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetRawData(LPCTSTR propVal)
{
	SetProperty(0x11, VT_BSTR, propVal);
}

long CIVICMForm::GetTotalPoints()
{
	long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetTotalPoints(long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}

CString CIVICMForm::GetPointArray()
{
	CString result;
	GetProperty(0x13, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetPointArray(LPCTSTR propVal)
{
	SetProperty(0x13, VT_BSTR, propVal);
}

long CIVICMForm::GetBinaryConversion()
{
	long result;
	GetProperty(0x14, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetBinaryConversion(long propVal)
{
	SetProperty(0x14, VT_I4, propVal);
}

long CIVICMForm::GetDataCount()
{
	long result;
	GetProperty(0x15, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetDataCount(long propVal)
{
	SetProperty(0x15, VT_I4, propVal);
}

long CIVICMForm::GetAutoDisable()
{
	long result;
	GetProperty(0x16, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetAutoDisable(long propVal)
{
	SetProperty(0x16, VT_I4, propVal);
}

long CIVICMForm::GetCharacterSet()
{
	long result;
	GetProperty(0x17, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetCharacterSet(long propVal)
{
	SetProperty(0x17, VT_I4, propVal);
}

CString CIVICMForm::GetCharacterSetList()
{
	CString result;
	GetProperty(0x18, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetCharacterSetList(LPCTSTR propVal)
{
	SetProperty(0x18, VT_BSTR, propVal);
}

long CIVICMForm::GetFontHeight()
{
	long result;
	GetProperty(0x19, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetFontHeight(long propVal)
{
	SetProperty(0x19, VT_I4, propVal);
}

long CIVICMForm::GetFontWidth()
{
	long result;
	GetProperty(0x1a, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetFontWidth(long propVal)
{
	SetProperty(0x1a, VT_I4, propVal);
}

long CIVICMForm::GetFontTypeface()
{
	long result;
	GetProperty(0x1b, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetFontTypeface(long propVal)
{
	SetProperty(0x1b, VT_I4, propVal);
}

CString CIVICMForm::GetFontTypefaceList()
{
	CString result;
	GetProperty(0x1c, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetFontTypefaceList(LPCTSTR propVal)
{
	SetProperty(0x1c, VT_BSTR, propVal);
}

BOOL CIVICMForm::GetCapDisplay()
{
	BOOL result;
	GetProperty(0x1d, VT_BOOL, (void*)&result);
	return result;
}

void CIVICMForm::SetCapDisplay(BOOL propVal)
{
	SetProperty(0x1d, VT_BOOL, propVal);
}

BOOL CIVICMForm::GetCapRealTimeData()
{
	BOOL result;
	GetProperty(0x1e, VT_BOOL, (void*)&result);
	return result;
}

void CIVICMForm::SetCapRealTimeData(BOOL propVal)
{
	SetProperty(0x1e, VT_BOOL, propVal);
}

BOOL CIVICMForm::GetCapUserTerminated()
{
	BOOL result;
	GetProperty(0x1f, VT_BOOL, (void*)&result);
	return result;
}

void CIVICMForm::SetCapUserTerminated(BOOL propVal)
{
	SetProperty(0x1f, VT_BOOL, propVal);
}

long CIVICMForm::GetMaximumX()
{
	long result;
	GetProperty(0x20, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetMaximumX(long propVal)
{
	SetProperty(0x20, VT_I4, propVal);
}

long CIVICMForm::GetMaximumY()
{
	long result;
	GetProperty(0x21, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetMaximumY(long propVal)
{
	SetProperty(0x21, VT_I4, propVal);
}

BOOL CIVICMForm::GetRealTimeDataEnabled()
{
	BOOL result;
	GetProperty(0x22, VT_BOOL, (void*)&result);
	return result;
}

void CIVICMForm::SetRealTimeDataEnabled(BOOL propVal)
{
	SetProperty(0x22, VT_BOOL, propVal);
}

CString CIVICMForm::GetKeyPadBoardPrompt1()
{
	CString result;
	GetProperty(0x23, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetKeyPadBoardPrompt1(LPCTSTR propVal)
{
	SetProperty(0x23, VT_BSTR, propVal);
}

CString CIVICMForm::GetKeyPadBoardPrompt2()
{
	CString result;
	GetProperty(0x24, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetKeyPadBoardPrompt2(LPCTSTR propVal)
{
	SetProperty(0x24, VT_BSTR, propVal);
}

CString CIVICMForm::GetKeyPadBoardText()
{
	CString result;
	GetProperty(0x25, VT_BSTR, (void*)&result);
	return result;
}

void CIVICMForm::SetKeyPadBoardText(LPCTSTR propVal)
{
	SetProperty(0x25, VT_BSTR, propVal);
}

long CIVICMForm::GetFontStyle()
{
	long result;
	GetProperty(0x26, VT_I4, (void*)&result);
	return result;
}

void CIVICMForm::SetFontStyle(long propVal)
{
	SetProperty(0x26, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CIVICMForm operations

long CIVICMForm::Open(LPCTSTR DeviceName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x27, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		DeviceName);
	return result;
}

long CIVICMForm::Close()
{
	long result;
	InvokeHelper(0x28, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}
//TAR253061
long CIVICMForm::ClaimDevice(long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x29, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Timeout);
	return result;
}
//TAR253061
long CIVICMForm::ReleaseDevice()
{
	long result;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CIVICMForm::CheckHealth(long Level)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Level);
	return result;
}

long CIVICMForm::ClearInput()
{
	long result;
	InvokeHelper(0x2c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CIVICMForm::DirectIO(long Command, long* pData, BSTR* pString)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_PBSTR;
	InvokeHelper(0x2d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Command, pData, pString);
	return result;
}

void CIVICMForm::SOData(long Status)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Status);
}

void CIVICMForm::SODirectIO(long EventNumber, long* pData, BSTR* pString)
{
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_PBSTR;
	InvokeHelper(0x2f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 EventNumber, pData, pString);
}

void CIVICMForm::SOError(long ResultCode, long ResultCodeExtended, long ErrorLocus, long* pErrorResponse)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_PI4;
	InvokeHelper(0x30, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ResultCode, ResultCodeExtended, ErrorLocus, pErrorResponse);
}

void CIVICMForm::SOStatusUpdate(long Data)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x31, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Data);
}

long CIVICMForm::StoreFormOnDevice(long formNumber, LPCTSTR formFile)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x32, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		formNumber, formFile);
	return result;
}

long CIVICMForm::DisplayFormOnDevice(long formNumber, LPCTSTR formFile)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x33, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		formNumber, formFile);
	return result;
}

long CIVICMForm::DisplayTextAt(long Row, long Column, LPCTSTR Data, long Attribute)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x34, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Row, Column, Data, Attribute);
	return result;
}

long CIVICMForm::QueryRadioButtonState(long groupID, long controlID, long* controlState)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4;
	InvokeHelper(0x35, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		groupID, controlID, controlState);
	return result;
}

long CIVICMForm::QueryScriptBoxData(long scriptBoxID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x36, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		scriptBoxID);
	return result;
}

long CIVICMForm::QuerySignatureBoxData()
{
	long result;
	InvokeHelper(0x37, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CIVICMForm::QueryKeyPadBoardText()
{
	long result;
	InvokeHelper(0x38, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}
