// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "smartscale.h"

/////////////////////////////////////////////////////////////////////////////
// CSmartScale

IMPLEMENT_DYNCREATE(CSmartScale, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CSmartScale properties

long CSmartScale::GetSlowConclusionTimeout()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetSlowConclusionTimeout(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

long CSmartScale::GetSCWatchdogTimeout()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetSCWatchdogTimeout(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

long CSmartScale::GetZeroWeightTimeout()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetZeroWeightTimeout(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

long CSmartScale::GetLastGoodWeight()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetLastGoodWeight(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

BOOL CSmartScale::GetHoldWeight()
{
	BOOL result;
	GetProperty(0x5, VT_BOOL, (void*)&result);
	return result;
}

void CSmartScale::SetHoldWeight(BOOL propVal)
{
	SetProperty(0x5, VT_BOOL, propVal);
}

BOOL CSmartScale::GetSkipBagging()
{
	BOOL result;
	GetProperty(0x6, VT_BOOL, (void*)&result);
	return result;
}

void CSmartScale::SetSkipBagging(BOOL propVal)
{
	SetProperty(0x6, VT_BOOL, propVal);
}

long CSmartScale::GetHeavyWeightLimit()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetHeavyWeightLimit(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

long CSmartScale::GetMeduimWeightLimit()
{
	long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetMeduimWeightLimit(long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

long CSmartScale::GetHeavyWeightTol()
{
	long result;
	GetProperty(0x9, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetHeavyWeightTol(long propVal)
{
	SetProperty(0x9, VT_I4, propVal);
}

long CSmartScale::GetMediumWeightTol()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetMediumWeightTol(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

long CSmartScale::GetLightWeightTol()
{
	long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetLightWeightTol(long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

long CSmartScale::GetCurrentTotalWeight()
{
	long result;
	GetProperty(0xc, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetCurrentTotalWeight(long propVal)
{
	SetProperty(0xc, VT_I4, propVal);
}

long CSmartScale::GetNewItemZeroWeightTimeout()
{
	long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetNewItemZeroWeightTimeout(long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

long CSmartScale::GetSlowConclusionTimeoutInAttract()
{
	long result;
	GetProperty(0xe, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetSlowConclusionTimeoutInAttract(long propVal)
{
	SetProperty(0xe, VT_I4, propVal);
}

long CSmartScale::GetSlowConclTimeoutInNotExpecting()
{
	long result;
	GetProperty(0xf, VT_I4, (void*)&result);
	return result;
}

void CSmartScale::SetSlowConclTimeoutInNotExpecting(long propVal)
{
	SetProperty(0xf, VT_I4, propVal);
}

BOOL CSmartScale::GetInAttract()
{
	BOOL result;
	GetProperty(0x10, VT_BOOL, (void*)&result);
	return result;
}

void CSmartScale::SetInAttract(BOOL propVal)
{
	SetProperty(0x10, VT_BOOL, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CSmartScale operations

void CSmartScale::GetStatus(BSTR* bstrDeviceName, BSTR* bstrCheckHealthText, long* lStatus)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_PBSTR VTS_PI4;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bstrDeviceName, bstrCheckHealthText, lStatus);
}

void CSmartScale::ResetTimers(long nTimer)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nTimer);
}

void CSmartScale::SetSoldItemInfo(LPDISPATCH lpdispWeightInfo)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lpdispWeightInfo);
}
