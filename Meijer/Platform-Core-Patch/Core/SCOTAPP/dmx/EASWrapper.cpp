// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "..\stdafx.h"
#include "EASWrapper.h"
#include <opos_eas.h>

#define COMP_ID ID_DM
#define T_ID    _T("DMX")

 
/////////////////////////////////////////////////////////////////////////////
// CEASWrapper

BOOL CEASWrapper::Create( 
   CWnd* pParentWnd, 
   UINT nID )
	{
   return TOposEas<CGenericOposIF>::CreateControl( GetClsid(), NULL, 0, CRect(0,0,0,0), pParentWnd, nID );
	}

/////////////////////////////////////////////////////////////////////////////
// CEASWrapper properties

/////////////////////////////////////////////////////////////////////////////
// CEASWrapper operations


/* virtual */
void CEASWrapper::OnOposStatusEvent( 
   long nStatus )
   {
   switch ( nStatus ) 
      {
      case EAS_STATUS_FAILURE:
      // want to simulate a motion / no_motion so the tag deactivate will go away
      // send a failure message to the event viewer
      // error(RETURN,SM_CAT_INTERNAL_ERROR, SCOTAPP_DEVFACTORY_EASPAD_FAILED,"%d", nStatus);
      case EAS_STATUS_OK:
      case EAS_STATUS_DEACTIVATED:
         PostDmEventToApplication( DM_STATUS, DMCLASS_EASDEACTIVATOR, m_nDeviceId, nStatus );
         break;
      default:
         ASSERT( FALSE );  // Power Notify someday???
         break;
      }
   return;
   }
