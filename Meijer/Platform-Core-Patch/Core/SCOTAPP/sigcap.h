#if !defined(AFX_SIGCAP_H__7DF95F20_E179_456D_88CD_D13B5569B815__INCLUDED_)
#define AFX_SIGCAP_H__7DF95F20_E179_456D_88CD_D13B5569B815__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CSigCap wrapper class
#include "OposControl.h"

class CSigCap : public COposControl
{
protected:
	DECLARE_DYNCREATE(CSigCap)
public:

	LPCTSTR GetProgid()
	{
		static TCHAR progid[] = _T("OPOS.SigCap");
		return progid;
	}

	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ 
		return CreateControl(GetProgid(), lpszWindowName, dwStyle, rect, pParentWnd, nID);
	}


    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{
		return CreateControl(GetProgid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
                             pPersist, bStorage, bstrLicKey);
	}

// Attributes
public:

// Operations
public:
	long GetOpenResult();
	CString GetCheckHealthText();
	BOOL GetClaimed();
	BOOL GetDataEventEnabled();
	void SetDataEventEnabled(BOOL bNewValue);
	BOOL GetDeviceEnabled();
	void SetDeviceEnabled(BOOL bNewValue);
	BOOL GetFreezeEvents();
	void SetFreezeEvents(BOOL bNewValue);
	long GetResultCode();
	long GetResultCodeExtended();
	long GetState();
	CString GetControlObjectDescription();
	long GetControlObjectVersion();
	CString GetServiceObjectDescription();
	long GetServiceObjectVersion();
	CString GetDeviceDescription();
	CString GetDeviceName();
	long CheckHealth(long Level);
	long ClaimDevice(long Timeout);
	long ClearInput();
	long Close();
	long DirectIO(long Command, long* pData, BSTR* pString);
	long Open(LPCTSTR DeviceName);
	long ReleaseDevice();
	BOOL GetCapDisplay();
	BOOL GetCapUserTerminated();
	long GetMaximumX();
	long GetMaximumY();
	CString GetPointArray();
	CString GetRawData();
	long GetTotalPoints();
	long BeginCapture(LPCTSTR FormName);
	long EndCapture();
	BOOL GetAutoDisable();
	void SetAutoDisable(BOOL bNewValue);
	long GetBinaryConversion();
	void SetBinaryConversion(long nNewValue);
	long GetDataCount();
	BOOL GetCapRealTimeData();
	BOOL GetRealTimeDataEnabled();
	void SetRealTimeDataEnabled(BOOL bNewValue);
	long GetCapPowerReporting();
	long GetPowerNotify();
	void SetPowerNotify(long nNewValue);
	long GetPowerState();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_SIGCAP_H__7DF95F20_E179_456D_88CD_D13B5569B815__INCLUDED_)
