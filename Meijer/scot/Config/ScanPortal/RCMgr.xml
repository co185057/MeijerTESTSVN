<state-machine>
    <!-- ============================================================================ -->
    <!-- Section:  Include the XML configuration file for the RAP terminal            -->
    <!-- ============================================================================ -->
    <include name="LaneRAP.xml" />
    <!-- ============================================================================ -->
    <!-- Section:  Library definitions                                                -->
    <!-- ============================================================================ -->
    <library-list>
        <library>
            <library-name>RCMgr.dll</library-name>
            <comment>This library contains the actions for the Remote Console Manager</comment>
        </library>
    </library-list>
    <!-- ============================================================================ -->
    <!-- Section:  Timer definitions                                                  -->
    <!-- ============================================================================ -->
    <timer-list>
        <timer>
            <timer-name>initialization_timer</timer-name>
        </timer>
        <timer>
            <timer-name>sound_timer</timer-name>
        </timer>
    </timer-list>
    <!-- ============================================================================ -->
    <!-- Section:  Constant definitions                                               -->
    <!-- ============================================================================ -->
    <constant-list>
        <constant>
            <constant-name>default_state_timeout</constant-name>
            <constant-value>2000</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_SET_XACT_STATE</constant-name>
            <constant-value>1</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_ENTER_STORE_MODE</constant-name>
            <constant-value>2</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_EXIT_STORE_MODE</constant-name>
            <constant-value>3</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_XACT_END</constant-name>
            <constant-value>4</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_XACT_BEGIN</constant-name>
            <constant-value>5</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_VALIDATE_OPERATOR</constant-name>
            <constant-value>6</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_SET_LIGHT_STATE</constant-name>
            <constant-value>7</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_CONNECT</constant-name>
            <constant-value>8</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_DISCONNECT</constant-name>
            <constant-value>9</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_SIGNON</constant-name>
            <constant-value>10</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_SIGNOFF</constant-name>
            <constant-value>11</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_DISCONNECT_SERVER</constant-name>
            <constant-value>13</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_RELOAD_OPTIONS</constant-name>
            <constant-value>14</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_ACQUIRE_EXCLUSIVE</constant-name>
            <constant-value>15</constant-value>
        </constant>
        <constant>
            <constant-name>OPERATION_RELEASE_EXCLUSIVE</constant-name>
            <constant-value>16</constant-value>
        </constant>
        <constant>
            <constant-name>GET_REQUEST_ENABLE_AM</constant-name>
            <constant-value>1</constant-value>
        </constant>
        <constant>
            <constant-name>GET_CURRENT_APPROVAL_CODE</constant-name>
            <constant-value>2</constant-value>
        </constant>
        <constant>
            <constant-name>GET_RAP_DATA_AVAILABLE</constant-name>
            <constant-value>3</constant-value>
        </constant>
        <constant>
            <constant-name>GET_RAP_DATA</constant-name>
            <constant-value>4</constant-value>
        </constant>
        <constant>
            <constant-name>GET_PREVIOUS_VIEW</constant-name>
            <constant-value>5</constant-value>
        </constant>
        <constant>
            <constant-name>GET_DATA_PENDING_COUNT</constant-name>
            <constant-value>6</constant-value>
        </constant>
        <constant>
            <constant-name>GET_CONNECTION_MODE</constant-name>
            <constant-value>7</constant-value>
        </constant>
        <constant>
            <constant-name>GET_REMOTE_CONNECTION_HANDHELD</constant-name>
            <constant-value>8</constant-value>
        </constant>
        <constant>
            <constant-name>GET_REMOTE_CONNECTION_NAME</constant-name>
            <constant-value>9</constant-value>
        </constant>
        <constant>
            <constant-name>GET_REQUEST_ENABLE_HH_AM</constant-name>
            <constant-value>10</constant-value>
        </constant>
    </constant-list>
    <!-- ============================================================================ -->
    <!-- Section:  Variable definitions                                               -->
    <!-- ============================================================================ -->
    <variable-list>
<!--
        <variable name="test_string" type="string"/>
-->
        <variable>
            <var-name>control_command_type</var-name>
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>suspend_allowed</var-name>
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>suspend_in_progress</var-name>
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>remote_initiated_suspend</var-name>
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>new_state</var-name>
        </variable>
        <variable>
            <var-name>cash_amount_digit</var-name>
            <initial-value>0</initial-value>
            <max-value>12</max-value>
            <min-value />
        </variable>
        <variable>
            <var-name>number_of_digit</var-name>
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>tender_state</var-name>
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>is_handheld</var-name>
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>trilite_color</var-name>
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>lane_name_flag</var-name>
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>sound_flag</var-name>
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>X</var-name>
            <initial-value>0</initial-value>
            <max-value />
            <min-value>0</min-value>
        </variable>
        <variable>
            <var-name>store_mode</var-name><!-- TAR 356326 - store_mode is set to 1 when lane enters Store Mode -->
            <initial-value>0</initial-value>
        </variable>
        <variable>
            <var-name>security_disabled</var-name>
            <initial-value>0</initial-value>
        </variable>
    </variable-list>
    <!-- ============================================================================ -->
    <!-- Section:  State definitions                                                  -->
    <!-- ============================================================================ -->
    <state-list>
        <state-definition>
            <comment>This is the initial state entered</comment>
            <state-name>Unitialized</state-name>
            <initial />
        </state-definition>
        <state-definition>
            <state-name>Logged Off</state-name>
        </state-definition>
        <state-definition>
            <state-name>Main</state-name>
        </state-definition>
        <state-definition>
            <comment>This is a Handheld only state</comment>
            <state-name>LaneDetail</state-name>
        </state-definition>
        <!-- +SR720 -->
        <state-definition>
            <state-name>LaneInterventionDetail</state-name>
        </state-definition>
        <!-- -SR720 -->
        <state-definition>
            <state-name>Wait For Data Needed</state-name>
        </state-definition>
        <state-definition>
            <state-name>LaneStatus</state-name>
        </state-definition>
        <state-definition>
            <state-name>Immediate Intervention</state-name>
        </state-definition>
        <state-definition>
            <state-name>Delayed Intervention</state-name>
        </state-definition>
        <state-definition>
            <state-name>Store Mode</state-name>
        </state-definition>
        <state-definition>
            <state-name>Assist Mode</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveAgeCheck</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveCoupon</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveVisualVerify</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveUnknownItem</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveItemNotForSale</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveQuantityRestrict</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveTimeRestrict</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveHelp</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveHelpOutsideTrx</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveDelaySecurity</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveVoid</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveOtherPayment</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveUnDeActivatedItem</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveSignatureCapture</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveCollection</state-name>
        </state-definition>
        <state-definition>
            <state-name>EnterPrice</state-name>
        </state-definition>
        <state-definition>
            <state-name>CancelTransactionGeneric</state-name>
        </state-definition>
        <state-definition>
            <state-name>ConfirmSuspend</state-name>
        </state-definition>
        <state-definition>
            <state-name>IncorrectItemWeight</state-name>
        </state-definition>
        <state-definition>
            <state-name>UnexpectedIncrease</state-name>
        </state-definition>
        <!--SR085 + -->
        <state-definition>
            <state-name>BagBoxNotValid</state-name>
        </state-definition>
        <!--SR085 - -->
        <state-definition>
            <state-name>SkipBaggingBtnThreshold</state-name>
        </state-definition>
        <state-definition>
            <state-name>ItemRemovedBtnThreshold</state-name>
        </state-definition>
        <state-definition>
            <state-name>BagBoxBtnThreshold</state-name>
        </state-definition>
        <state-definition>
            <state-name>NewWeightItem</state-name>
        </state-definition>
        <state-definition>
            <state-name>BagItemTimerExpires</state-name>
        </state-definition>
        <state-definition>
            <state-name>TakeChangeTimerExpires</state-name>
        </state-definition>
        <state-definition>
            <state-name>EASNotActivated</state-name>
        </state-definition>
        <state-definition>
            <state-name>PickingUpItemsTimerExpires</state-name>
        </state-definition>
        <state-definition>
            <state-name>DeviceFailure</state-name>
        </state-definition>
        <state-definition>
            <state-name>WLDBFailure</state-name>
        </state-definition>
        <state-definition>
            <state-name>UnexpectedDecrease</state-name>
        </state-definition>
        <state-definition>
            <state-name>CloseLane</state-name>
        </state-definition>
        <state-definition>
            <state-name>BagAreaBackup</state-name>
        </state-definition>
        <state-definition>
            <state-name>SafetyCoverOpen</state-name>
        </state-definition>
        <state-definition>
            <state-name>UnDeActivatedItemOnTABeltDetected</state-name>
        </state-definition>
        <state-definition>
            <state-name>VerifySignature</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveAssistedTender</state-name>
        </state-definition>
        <state-definition>
            <state-name>AssistedEndorsement</state-name>
        </state-definition>
        <state-definition>
            <state-name>StartTransaction</state-name>
        </state-definition>
        <state-definition>
            <state-name>StartTransactionAM</state-name>
        </state-definition>
        <state-definition>
            <state-name>ItemsForgotten</state-name>
        </state-definition>
        <state-definition>
            <state-name>InsertCouponTimerExpires</state-name>
        </state-definition>
        <state-definition>
            <state-name>CollectGiftCardRAP</state-name>
        </state-definition>
        <state-definition>
            <state-name>HostOfflineRAP</state-name>
        </state-definition>
        <state-definition>
            <state-name>Reporting Mode</state-name>
        </state-definition>
        <state-definition>
            <state-name>Suspend In Progress</state-name>
        </state-definition>
        <state-definition>
            <state-name>Allow Suspension</state-name>
        </state-definition>
        <state-definition>
            <state-name>MultiPackItem</state-name>
        </state-definition>
        <state-definition>
            <state-name>OutOfSyncStop</state-name>
        </state-definition>
        <state-definition>
            <state-name>HopperSubstitution</state-name>
        </state-definition>
        <state-definition>
            <state-name>OutOfSyncNeedAssist</state-name>
        </state-definition>
        <state-definition>
            <state-name>ConfirmSuspendFromOtherPayment</state-name>
        </state-definition>
        <state-definition>
            <state-name>ConfirmSuspendFromLaneStatus</state-name>
        </state-definition>
        <state-definition>
            <state-name>ApproveRestrictedNotAllowed</state-name>
        </state-definition>
        <state-definition>
            <state-name>RAPDataNeededNotHandled</state-name>
        </state-definition>
        <state-definition>
            <state-name>StartTrainingModeTrans</state-name>
        </state-definition>
        <!-- +SR678 -->
        <state-definition>
            <state-name>MaxCouponApproval</state-name>
        </state-definition>
        <state-definition>
            <state-name>CouponWarningAtFinalization</state-name>
        </state-definition>
        <!-- -SR678 -->
  <!-- // +TAR 352409  -->
    <state-definition>
        <state-name>ApproveSuspensionDecline</state-name>
    </state-definition>
  <!-- // -TAR 352409  -->
    </state-list>
    <state-table name="DelayedInterventionsTable">
        <state key="Age Restriction Event" state-name="ApproveAgeCheck" />
        <state key="Coupon Event" state-name="ApproveCoupon" />
        <state key="Call For Help Event" state-name="ApproveHelp" />
        <state key="Call For Help Outside Transaction Event" state-name="ApproveHelpOutsideTrx" />
        <state key="Quantity Restricted Item Event" state-name="ApproveQuantityRestrict" />
        <state key="Recalled Item Event" state-name="ApproveItemNotForSale" />
        <state key="Time Restricted Item Event" state-name="ApproveTimeRestrict" />
        <state key="Unknown Item Event" state-name="ApproveUnknownItem" />
        <state key="Void Event" state-name="ApproveVoid" />
        <state key="Visual Validation Event" state-name="ApproveVisualVerify" />
        <state key="Hopper Substitution Event" state-name="HopperSubstitution" />
        <state key="Other Payment Event" state-name="ApproveOtherPayment" />
        <state key="Price Required Event" state-name="EnterPrice" />
        <state key="Sig Cap Event" state-name="ApproveSignatureCapture" />
        <state key="Cancel Transaction Generic Event" state-name="CancelTransactionGeneric" />
        <state key="Cancel Transaction Event" state-name="CancelTransactionGeneric" />
        <state key="Verify Signature Event" state-name="VerifySignature" />
        <state key="Assisted Tender Event" state-name="ApproveAssistedTender" />
        <state key="Assisted Endorsement Event" state-name="AssistedEndorsement" />
        <state key="Bag Area Backup Event" state-name="BagAreaBackup" />
        <state key="Safety Cover Open Event" state-name="SafetyCoverOpen" />
        <state key="Close Lane Event" state-name="CloseLane" />
        <state key="Device Error Event" state-name="DeviceFailure" />
        <state key="WLDB Failure Event" state-name="WLDBFailure" />
        <state key="Multipack Item Event" state-name="MultiPackItem" />
        <state key="Out Of Sync Stop Event" state-name="OutOfSyncStop" />
        <state key="Out Of Sync Assist Event" state-name="OutOfSyncNeedAssist" />
        <state key="Security Event" state-name="ApproveDelaySecurity" />
        <state key="Restricted Not Allowed Event" state-name="ApproveRestrictedNotAllowed" />
        <state key="Undeactivated Item Event" state-name="EASNotActivated" />
        <state key="RAPDataNeeded Not Handled Event" state-name="RAPDataNeededNotHandled" />
        <state key="Training Mode Transaction Event" state-name="StartTrainingModeTrans" />
        <state key="SuspensionDecline Event" state-name="ApproveSuspensionDecline" />    <!-- TAR 352409  -->
        <state key="Max Coupon Event" state-name="MaxCouponApproval" />                         <!-- SR678 -->              
        <state key="Max Coupon Finalization Event" state-name="CouponWarningAtFinalization" />  <!-- TAR SR678 --> 
    </state-table>
    <state-table name="ImmediateInterventionsTable">
        <state key="age-restriction" state-name="ApproveAgeCheck" />
        <state key="coupon" state-name="ApproveCoupon" />
        <state key="call-for-help" state-name="ApproveHelp" />
        <state key="quantity-restricted-item" state-name="ApproveQuantityRestrict" />
        <state key="recalled-item" state-name="ApproveItemNotForSale" />
        <state key="time-restricted-item" state-name="ApproveTimeRestrict" />
        <state key="unknown-item" state-name="ApproveUnknownItem" />
        <state key="void" state-name="ApproveVoid" />
        <state key="visual-validation" state-name="ApproveVisualVerify" />
        <state key="security" state-name="ApproveDelaySecurity" />
        <state key="ready-to-collect" state-name="ApproveCollection" />
        <state key="restricted-not-allowed" state-name="ApproveRestrictedNotAllowed" />
        <state key="Training Mode Transaction Event" state-name="StartTrainingModeTrans" />
        <state key="suspension-decline" state-name="ApproveSuspensionDecline" />    <!--    TAR 352409  -->
        <!-- +SR678 -->
        <state key="Max Coupon Event" state-name="MaxCouponApproval" />                     
        <state key="Max Coupon Finalization Event" state-name="CouponWarningAtFinalization" />  
        <!-- -SR678 -->
    </state-table>
    <lookup-table name="RAPDataNeededInterventionsTable" key-type="int" value-type="string">
        <lookup-entry key="0" value="message-name=Void Event;state-name=ApproveVoid;priority=urgent" />
        <lookup-entry key="12" value="message-name=Price Required Event;state-name=EnterPrice;priority=urgent" />
        <lookup-entry key="13" value="message-name=RAPDataNeeded Not Handled Event;state-name=RAPDataNeededNotHandled;priority=urgent" />
        <lookup-entry key="16" value="message-name=Device Error Event;state-name=DeviceFailure;priority=urgent" />
        <lookup-entry key="31" value="message-name=Close Lane Event;state-name=CloseLane;priority=urgent" />
        <lookup-entry key="51" value="message-name=SuspensionDecline Event;state-name=ApproveSuspensionDecline;priority=urgent" />    <!-- TAR 352409  -->
        <lookup-entry key="52" value="message-name=Training Mode Transaction Event;state-name=StartTrainingModeTrans;priority=urgent" />
        <!-- SR678 -->
        <lookup-entry key="54" value="message-name=Max Coupon Event;state-name=MaxCouponApproval;priority=urgent" />    
        <lookup-entry key="55" value="message-name=Max Coupon Finalization Event;state-name=CouponWarningAtFinalization;priority=urgent" />  

    </lookup-table>
    <lookup-table name="ControlCommandsTable" key-type="string" value-type="int">
        <lookup-entry key="set-transaction-state" value="OPERATION_SET_XACT_STATE" />
        <lookup-entry key="enter-store-mode" value="OPERATION_ENTER_STORE_MODE" />
        <lookup-entry key="exit-store-mode" value="OPERATION_EXIT_STORE_MODE" />
        <lookup-entry key="end" value="OPERATION_XACT_END" />
        <lookup-entry key="begin" value="OPERATION_XACT_BEGIN" />
        <lookup-entry key="validate-operator" value="OPERATION_VALIDATE_OPERATOR" />
        <lookup-entry key="set-light-state" value="OPERATION_SET_LIGHT_STATE" />
        <lookup-entry key="connect" value="OPERATION_CONNECT" />
        <lookup-entry key="disconnect" value="OPERATION_DISCONNECT" />
        <lookup-entry key="sign-on" value="OPERATION_SIGNON" />
        <lookup-entry key="sign-off" value="OPERATION_SIGNOFF" />
        <lookup-entry key="disconnect-server" value="OPERATION_DISCONNECT_SERVER" />
        <lookup-entry key="reload-options" value="OPERATION_RELOAD_OPTIONS" />
        <lookup-entry key="acquire-exclusive-access" value="OPERATION_ACQUIRE_EXCLUSIVE" />
        <lookup-entry key="release-exclusive-access" value="OPERATION_RELEASE_EXCLUSIVE" />
    </lookup-table>
    <lookup-table name="GetCommandsTable" key-type="string" value-type="int">
        <lookup-entry key="request-enable-assist-mode" value="GET_REQUEST_ENABLE_AM" />
        <lookup-entry key="current-approval-code" value="GET_CURRENT_APPROVAL_CODE" />
        <lookup-entry key="rap-data-available" value="GET_RAP_DATA_AVAILABLE" />
        <lookup-entry key="rap-data" value="GET_RAP_DATA" />
        <lookup-entry key="previous-view" value="GET_PREVIOUS_VIEW" />
        <lookup-entry key="rap-data-pending-count" value="GET_DATA_PENDING_COUNT" />
        <lookup-entry key="connection-mode" value="GET_CONNECTION_MODE" />
        <lookup-entry key="remote-connection-handheld" value="GET_REMOTE_CONNECTION_HANDHELD" />
        <lookup-entry key="remote-connection-name" value="GET_REMOTE_CONNECTION_NAME" />
        <lookup-entry key="request-enable-handheld-assist-mode" value="GET_REQUEST_ENABLE_HH_AM" />
    </lookup-table>
    <lookup-table name="RemoteDataCommandsTable" key-type="string" value-type="string">
        <lookup-entry key="MainScreen" value="Main Screen" />
        <lookup-entry key="release" value="Release Exclusive Access Event" />
        <lookup-entry key="AllLaneStatusSummary" value="All Lane Status Summary" />
        <lookup-entry key="toggle" value="Assist Mode Toggle" />
        <lookup-entry key="sell-item" value="RAP Sell Item" />
        <lookup-entry key="exception-remove" value="Update Exception" />
        <lookup-entry key="exception-step" value="Update Exception" />
        <lookup-entry key="get-weight" value="Get Weight Value" />
        <lookup-entry key="get-weight-cancel" value="Cancel Get Weight Value" />
		<lookup-entry key="void-item" value="RAP Void Item" />
        <lookup-entry key="switch" value="Ready To Switch" />
        <lookup-entry key="itemization-start" value="Itemization Start" />
        <lookup-entry key="itemization-complete" value="Itemization Complete" />
        <lookup-entry key="attendant-done" value="Attendant Done" />
        <lookup-entry key="rap-start-belts" value="RAP Start Belts" />
        <lookup-entry key="rap-stop-belts" value="RAP Stop Belts" />
        <lookup-entry key="assign-collection-area-1" value="Assign Collection Area" />
        <lookup-entry key="assign-collection-area-2" value="Assign Collection Area" />
        <lookup-entry key="assign-collection-area-3" value="Assign Collection Area" />
        <lookup-entry key="exceptions-pending" value="Exceptions Pending" />
        <lookup-entry key="exceptions-acknowledged" value="Exceptions Acknowledged" />
        <lookup-entry key="check-health-start" value="Check Health Start" />
        <lookup-entry key="jam-recovery-start" value="Jam Recovery Start" />
    </lookup-table>
    <lookup-table name="SelectButtonTable" key-type="string" value-type="string">
        <lookup-entry key="HHAssistModeButton" value="AssistModeButton" />
        <lookup-entry key="HHLaneStatusButton" value="LaneStatusButton" />
    </lookup-table>
    <lookup-table name="SelectKeyDownTable" key-type="int" value-type="string">
        <lookup-entry key="48" value="NumericKeyPad2" />
        <lookup-entry key="49" value="NumericKeyPad1" />
        <lookup-entry key="50" value="NumericKeyPad1" />
        <lookup-entry key="51" value="NumericKeyPad1" />
        <lookup-entry key="52" value="NumericKeyPad1" />
        <lookup-entry key="53" value="NumericKeyPad1" />
        <lookup-entry key="54" value="NumericKeyPad1" />
        <lookup-entry key="55" value="NumericKeyPad1" />
        <lookup-entry key="56" value="NumericKeyPad1" />
        <lookup-entry key="57" value="NumericKeyPad1" />
        <lookup-entry key="27" value="NumericKeyPad3" />
        <lookup-entry key="13" value="NumericKeyPad4" />
        <lookup-entry key="190" value="NumericKeyPad5" />
        <lookup-entry key="96" value="NumericKeyPad2" />
        <lookup-entry key="97" value="NumericKeyPad1" />
        <lookup-entry key="98" value="NumericKeyPad1" />
        <lookup-entry key="99" value="NumericKeyPad1" />
        <lookup-entry key="100" value="NumericKeyPad1" />
        <lookup-entry key="101" value="NumericKeyPad1" />
        <lookup-entry key="102" value="NumericKeyPad1" />
        <lookup-entry key="103" value="NumericKeyPad1" />
        <lookup-entry key="104" value="NumericKeyPad1" />
        <lookup-entry key="105" value="NumericKeyPad1" />
        <lookup-entry key="110" value="NumericKeyPad5" />
    </lookup-table>
    <lookup-table name="EventCommandsTable" key-type="string" value-type="string">
        <lookup-entry key="add-other-event" value="Add Other Event" />
        <lookup-entry key="security" value="Security Event" />
        <lookup-entry key="coupon" value="Coupon Event" />
        <lookup-entry key="void" value="Void Event" />
        <lookup-entry key="age-restriction" value="Age Restriction Event" />
        <lookup-entry key="visual-validation" value="Visual Validation Event" />
        <lookup-entry key="hopper-substitution" value="Hopper Substitution Event" />
        <lookup-entry key="call-for-help" value="Call For Help Event" />
        <lookup-entry key="other-payment" value="Other Payment Event" />
        <lookup-entry key="suspend" value="Suspend Event" />
        <lookup-entry key="price-required" value="Price Required Event" />
        <lookup-entry key="unknown-item" value="Unknown Item Event" />
        <lookup-entry key="recalled-item" value="Recalled Item Event" />
        <lookup-entry key="time-restricted-item" value="Time Restricted Item Event" />
        <lookup-entry key="sig-cap" value="Sig Cap Event" />
        <lookup-entry key="application-error" value="Application Error Event" />
        <lookup-entry key="device-error" value="Device Error Event" />
        <lookup-entry key="quantity-restricted-item" value="Quantity Restricted Item Event" />
        <lookup-entry key="undeactivated-item" value="Undeactivated Item Event" />
        <lookup-entry key="can-suspend-now" value="Can Suspend Now Event" />
        <lookup-entry key="cancel-application-error" value="Cancel Application Error Event" />
        <lookup-entry key="media-low" value="Media Low Event" />
        <lookup-entry key="no-rap-data-needed" value="No RAP Data Needed Event" />
        <lookup-entry key="rap-data-needed" value="RAP Data Needed Event" />
        <lookup-entry key="normal-item" value="Normal Item Event" />
        <lookup-entry key="out-of-service" value="Out Of Service Event" />
        <lookup-entry key="return-to-service" value="Return To Service Event" />
        <lookup-entry key="ready-to-collect" value="Ready To Collect Event" />
        <lookup-entry key="ready-to-suspend" value="Ready To Suspend Event" />
        <lookup-entry key="switch-context" value="Switch Context Event" />
        <lookup-entry key="switch-lane-context" value="Switch Lane Context Event" />
        <lookup-entry key="remote-data" value="Remote Data Event" />
        <lookup-entry key="restricted-not-allowed" value="Restricted Not Allowed Event" />
        <lookup-entry key="suspension-decline" value="SuspensionDecline Event" />    <!--    TAR 352409  -->
        <lookup-entry key="enable-security" value="Enable Security Event" /> <!-- sr683 -->
        <lookup-entry key="disable-security" value="Disable Security Event" /> <!-- sr683 -->
    </lookup-table>
    <!-- ============================================================================ -->
    <!-- Section:  Message definitions                                                -->
    <!-- ============================================================================ -->
    <msg-list>
        <msg-definition>
            <msg-name>Initialize</msg-name>
            <msg-value>0x00000001</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Terminate</msg-name>
            <msg-value>0x00000002</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Event Command</msg-name>
            <msg-value>0x00000003</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Can Approve Command</msg-name>
            <msg-value>0x00000004</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Get Approval Command</msg-name>
            <msg-value>0x00000005</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Approval Command</msg-name>
            <msg-value>0x00000006</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Control Command</msg-name>
            <msg-value>0x00000007</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Get Command</msg-name>
            <msg-value>0x00000008</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Set Command</msg-name>
            <msg-value>0x00000009</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Add Other Event</msg-name>
            <msg-value>0x0000000a</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Security Event</msg-name>
            <msg-value>0x0000000b</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Coupon Event</msg-name>
            <msg-value>0x0000000c</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Void Event</msg-name>
            <msg-value>0x0000000d</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Age Restriction Event</msg-name>
            <msg-value>0x0000000e</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Visual Validation Event</msg-name>
            <msg-value>0x0000000f</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Call For Help Event</msg-name>
            <msg-value>0x00000010</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Other Payment Event</msg-name>
            <msg-value>0x00000011</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Suspend Event</msg-name>
            <msg-value>0x00000012</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Price Required Event</msg-name>
            <msg-value>0x00000013</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Unknown Item Event</msg-name>
            <msg-value>0x00000014</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Recalled Item Event</msg-name>
            <msg-value>0x00000015</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Time Restricted Item Event</msg-name>
            <msg-value>0x00000016</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Sig Cap Event</msg-name>
            <msg-value>0x00000017</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Application Error Event</msg-name>
            <msg-value>0x00000018</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Device Error Event</msg-name>
            <msg-value>0x00000019</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Quantity Restricted Item Event</msg-name>
            <msg-value>0x0000001a</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Undeactivated Item Event</msg-name>
            <msg-value>0x0000001b</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Can Suspend Now Event</msg-name>
            <msg-value>0x0000001c</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Cancel Application Error Event</msg-name>
            <msg-value>0x0000001d</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Media Low Event</msg-name>
            <msg-value>0x0000001e</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>No RAP Data Needed Event</msg-name>
            <msg-value>0x0000001f</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>RAP Data Needed Event</msg-name>
            <msg-value>0x00000020</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Normal Item Event</msg-name>
            <msg-value>0x00000021</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Out Of Service Event</msg-name>
            <msg-value>0x00000022</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Return To Service Event</msg-name>
            <msg-value>0x00000023</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Ready To Collect Event</msg-name>
            <msg-value>0x00000024</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Ready To Suspend Event</msg-name>
            <msg-value>0x00000025</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Add Other Approval</msg-name>
            <msg-value>0x00000026</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Security Approval</msg-name>
            <msg-value>0x00000027</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Coupon Approval</msg-name>
            <msg-value>0x00000028</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Void Approval</msg-name>
            <msg-value>0x00000029</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Age Restriction Approval</msg-name>
            <msg-value>0x0000002a</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Visual Validation Approval</msg-name>
            <msg-value>0x0000002b</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Call For Help Approval</msg-name>
            <msg-value>0x0000002c</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Other Payment Approval</msg-name>
            <msg-value>0x0000002d</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Suspend Approval</msg-name>
            <msg-value>0x0000002e</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Price Required Approval</msg-name>
            <msg-value>0x0000002f</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Unknown Item Approval</msg-name>
            <msg-value>0x00000030</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Recalled Item Approval</msg-name>
            <msg-value>0x00000031</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Time Restricted Item Approval</msg-name>
            <msg-value>0x00000032</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Sig Cap Approval</msg-name>
            <msg-value>0x00000033</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Application Error Approval</msg-name>
            <msg-value>0x00000034</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Device Error Approval</msg-name>
            <msg-value>0x00000035</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Quantity Restricted Item Approval</msg-name>
            <msg-value>0x00000036</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Undeactivated Item Approval</msg-name>
            <msg-value>0x00000037</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Set Transaction State</msg-name>
            <msg-value>0x00000038</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Enter Store Mode</msg-name>
            <msg-value>0x00000039</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Exit Store Mode</msg-name>
            <msg-value>0x0000003a</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Transaction End</msg-name>
            <msg-value>0x0000003b</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Transaction Begin</msg-name>
            <msg-value>0x0000003c</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Validate Operator</msg-name>
            <msg-value>0x0000003d</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Set Light State</msg-name>
            <msg-value>0x0000003e</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Normal Item Event - Alert</msg-name>
            <msg-value>0x0000003f</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Normal Item Event - POS Message</msg-name>
            <msg-value>0x00000040</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Enable Assist Mode Button</msg-name>
            <msg-value>0x00000041</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Disable Assist Mode Button</msg-name>
            <msg-value>0x00000042</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Media Event</msg-name>
            <msg-value>0x00000043</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Enable NumItems Event</msg-name>
            <msg-value>0x00000044</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Disable NumItems Event</msg-name>
            <msg-value>0x00000045</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Input Event Command</msg-name>
            <msg-value>0x00000046</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Connection Attempt</msg-name>
            <msg-value>0x00000047</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Sign On Attempt</msg-name>
            <msg-value>0x00000048</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Switch Context</msg-name>
            <msg-value>0x00000049</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Invalid Birthday</msg-name>
            <msg-value>0x0000004a</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Start Transaction Enter AM Event</msg-name>
            <msg-value>0x0000004b</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Exit Assist Mode</msg-name>
            <msg-value>0x0000004c</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Cancel Transaction Generic Event</msg-name>
            <msg-value>0x0000004d</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Cancel Transaction Event</msg-name>
            <msg-value>0x0000004e</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Verify Signature Event</msg-name>
            <msg-value>0x0000004f</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Assisted Tender Event</msg-name>
            <msg-value>0x00000050</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Bag Area Backup Event</msg-name>
            <msg-value>0x00000051</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Safety Cover Open Event</msg-name>
            <msg-value>0x00000052</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Assisted Endorsement Event</msg-name>
            <msg-value>0x00000053</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Close Lane Event</msg-name>
            <msg-value>0x00000054</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Call For Help Outside Transaction Event</msg-name>
            <msg-value>0x00000055</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>WLDB Failure Event</msg-name>
            <msg-value>0x00000056</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Collection Event</msg-name>
            <msg-value>0x00000057</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Host Offline Event</msg-name>
            <msg-value>0x00000058</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Reload Options</msg-name>
            <msg-value>0x00000059</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Remote Approval</msg-name>
            <msg-value>0x0000005a</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Initialize UI</msg-name>
            <msg-value>0x0000005b</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Assist Mode Size To FullScreen</msg-name>
            <msg-value>0x0000005c</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Switch Context Event</msg-name>
            <msg-value>0x0000005d</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Disconnect</msg-name>
            <msg-value>0x0000005e</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Switch Lane Context Event</msg-name>
            <msg-value>0x0000005f</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Multipack Item Event</msg-name>
            <msg-value>0x00000060</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Out Of Sync Stop Event</msg-name>
            <msg-value>0x00000061</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Out Of Sync Assist Event</msg-name>
            <msg-value>0x00000062</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Remote Data Event</msg-name>
            <msg-value>0x00000063</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Release Exclusive Access Event</msg-name>
            <msg-value>0x00000064</msg-value>
        </msg-definition>
        <!-- Messages for Buttons -->
        <msg-definition>
            <msg-name>Light State Change</msg-name>
            <msg-value>0x00000065</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Disconnect Handheld</msg-name>
            <msg-value>0x00000066</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Immediate Intervention</msg-name>
            <msg-value>0x00000067</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Enable Assist Mode Button 2</msg-name>
            <msg-value>0x00000068</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Connection Complete</msg-name>
            <msg-value>0x00000069</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Release Control For SCOTAPP</msg-name>
            <msg-value>0x0000006a</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>All Lane Status Summary</msg-name>
            <msg-value>0x0000006b</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Assist Mode Toggle</msg-name>
            <msg-value>0x0000006c</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Generate Alert Event</msg-name>
            <msg-value>0x0000006d</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Start Transaction Event</msg-name>
            <msg-value>0x0000006c</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Training Mode Transaction Event</msg-name>
            <msg-value>0x0000006e</msg-value>
        </msg-definition>
        <!-- +SR678-->
        <msg-definition>
                 <msg-name>Max Coupon Event</msg-name>
                 <msg-value>0x0000006f</msg-value>
            </msg-definition>
        <msg-definition>
                 <msg-name>Max Coupon Finalization Event</msg-name>
                    <msg-value>0x00000070</msg-value>
        </msg-definition>
        <!-- -SR678-->
        <!-- Messages for Buttons -->
        <msg-definition>
            <msg-name>Button Press</msg-name>
            <msg-value>0x20000001</msg-value>
        </msg-definition>
        <!-- Internal Messages -->
        <msg-definition>
            <msg-name>Update Buttons</msg-name>
            <msg-value>0x20000002</msg-value>
        </msg-definition>
        <!-- Internal Messages -->
        <msg-definition>
            <msg-name>Update Buttons In Lane Status</msg-name>
            <msg-value>0x20000003</msg-value>
        </msg-definition>
        <!-- Internal Messages -->
        <msg-definition>
            <msg-name>Confirm Suspend From Other Payment</msg-name>
            <msg-value>0x20000004</msg-value>
        </msg-definition>
        <!-- Internal Messages -->
        <msg-definition>
            <msg-name>Confirm Suspend From Lane Status</msg-name>
            <msg-value>0x20000005</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Restricted Not Allowed Event</msg-name>
            <msg-value>0x20000006</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Restricted Not Allowed Approval</msg-name>
            <msg-value>0x20000007</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>RAPDataNeeded Not Handled Event</msg-name>
            <msg-value>0x20000008</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Check Handheld</msg-name>
            <msg-value>0x20000009</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Transition From Intervention</msg-name>
            <msg-value>0x2000000a</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Transition To Delayed Intervention</msg-name>
            <msg-value>0x2000000b</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Hopper Substitution Event</msg-name>
            <msg-value>0x2000000c</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Hopper Substitution Approval</msg-name>
            <msg-value>0x2000000d</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Handle Assist Mode 2</msg-name>
            <msg-value>0x2000000e</msg-value>
        </msg-definition>
   <!-- +TAR 352409  -->
          <msg-definition>
                <msg-name>SuspensionDecline Approval</msg-name>
                <msg-value>0x2000000f</msg-value>
            </msg-definition>
            <msg-definition>
                <msg-name>SuspensionDecline Event</msg-name>
                <msg-value>0x20000010</msg-value>
            </msg-definition>
  <!--  -TAR 352409  -->
        <msg-definition>
            <msg-name>Enable Security Event</msg-name>
            <msg-value>0x20000011</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Disable Security Event</msg-name>
            <msg-value>0x20000012</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Main Screen</msg-name>
            <msg-value>0x20000013</msg-value>
        </msg-definition>       
        <msg-definition>
            <msg-name>RAP Sell Item</msg-name>
            <msg-value>0x20000014</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Update Exception</msg-name>
            <msg-value>0x20000015</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Get Weight Value</msg-name>
            <msg-value>0x20000016</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Cancel Get Weight Value</msg-name>
            <msg-value>0x20000017</msg-value>
        </msg-definition>
 		<msg-definition>
 			<msg-name>RAP Void Item</msg-name>
            <msg-value>0x20000018</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Ready To Switch</msg-name>
            <msg-value>0x20000019</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Itemization Start</msg-name>
            <msg-value>0x20000020</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Itemization Complete</msg-name>
            <msg-value>0x20000021</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Attendant Done</msg-name>
            <msg-value>0x20000022</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>RAP Start Belts</msg-name>
            <msg-value>0x20000023</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>RAP Stop Belts</msg-name>
            <msg-value>0x20000024</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Assign Collection Area</msg-name>
            <msg-value>0x20000025</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Exceptions Pending</msg-name>
            <msg-value>0x20000028</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Exceptions Acknowledged</msg-name>
            <msg-value>0x20000029</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Check Health Start</msg-name>
            <msg-value>0x20000030</msg-value>
        </msg-definition>
        <msg-definition>
            <msg-name>Jam Recovery Start</msg-name>
            <msg-value>0x20000031</msg-value>
        </msg-definition>
    </msg-list>
    <!-- ============================================================================ -->
    <!-- Section:  Action definitions                                                 -->
    <!-- ============================================================================ -->
    <action-list>
        <action>
            <action-name>CanApproveCommand</action-name>
        </action>
        <action>
            <action-name>EventCommand</action-name>
        </action>
        <action>
            <action-name>AddOtherEventCommand</action-name>
        </action>
        <action>
            <action-name>ControlCommand</action-name>
        </action>
        <action>
            <action-name>ApprovalCommand</action-name>
        </action>
        <action>
            <action-name>GetApprovalCommand</action-name>
        </action>
        <action>
            <action-name>GetCommand</action-name>
        </action>
        <action>
            <action-name>SetCommand</action-name>
        </action>
        <action>
            <action-name>LoadConfiguration</action-name>
        </action>
        <action>
            <action-name>SelectButton</action-name>
        </action>
        <action>
            <action-name>EnableButton</action-name>
        </action>
        <action>
            <action-name>DisableButton</action-name>
        </action>
        <action>
            <action-name>SwitchContext</action-name>
        </action>
        <action>
            <action-name>SetTransactionState</action-name>
        </action>
        <action>
            <action-name>EnterStoreMode</action-name>
        </action>
        <action>
            <action-name>ExitStoreMode</action-name>
        </action>
        <action>
            <action-name>TransactionBegin</action-name>
        </action>
        <action>
            <action-name>TransactionEnd</action-name>
        </action>
        <action>
            <action-name>SetLightState</action-name>
        </action>
        <action>
            <action-name>ValidateOperator</action-name>
        </action>
        <action>
            <action-name>AddNormalItem</action-name>
        </action>
        <action>
            <action-name>ApproveIntervention</action-name>
        </action>
        <action>
            <action-name>ClearImmediateIntervention</action-name>
        </action>
        <action>
            <action-name>SaveImmediateIntervention</action-name>
        </action>
        <action>
            <action-name>SaveDelayedIntervention</action-name>
        </action>
        <action>
            <action-name>MediaCommand</action-name>
        </action>
        <action>
            <action-name>ShowControl</action-name>
        </action>
        <action>
            <action-name>HideControl</action-name>
        </action>
        <action>
            <action-name>CanSuspendNowEvent</action-name>
        </action>
        <action>
            <action-name>ConnectCommandRAP</action-name>
        </action>
        <action>
            <action-name>DisconnectCommand</action-name>
        </action>
        <action>
            <action-name>SignonCommand</action-name>
        </action>
        <action>
            <action-name>SignoffCommand</action-name>
        </action>
        <action>
            <action-name>CheckImmediateIntervention</action-name>
        </action>
        <action>
            <action-name>CheckDelayedIntervention</action-name>
        </action>
        <action>
            <action-name>DisplayImmediateIntervention</action-name>
        </action>
        <action>
            <action-name>CheckDefaultButton</action-name>
        </action>
        <action>
            <action-name>Append1To9</action-name>
        </action>
        <action>
            <action-name>Append0</action-name>
        </action>
        <action>
            <action-name>ClearEntryText</action-name>
        </action>
        <action>
            <action-name>SetTextColor</action-name> <!-- SR683 -->
        </action>
        <action>
            <action-name>ValidateBirthday</action-name>
        </action>
        <action>
            <action-name>ShowMessage</action-name>
        </action>
        <action>
            <action-name>SetText</action-name>
        </action>
        <action>
            <action-name>NotifyAssistMode</action-name>
        </action>
        <action>
            <action-name>SwitchContextCommand</action-name>
        </action>
        <action>
            <action-name>GenerateLocalButtonPress</action-name>
        </action>
        <action>
            <action-name>IsInputEventEnabled</action-name>
        </action>
        <action>
            <action-name>SendUnsolicitedData</action-name>
        </action>
        <action>
            <action-name>CheckAssistModeControl</action-name>
        </action>
        <action>
            <action-name>IsNotStartTransactionView</action-name>
        </action>
        <action>
            <action-name>IsNotStartTransactionAMView</action-name>
        </action>
        <action>
            <action-name>CheckRAPDataNeededEvent</action-name>
        </action>
        <action>
            <action-name>SaveAsDelayedIntervention</action-name>
        </action>
        <action>
            <action-name>SetLaneName</action-name>
        </action>
        <action>
            <action-name>DisplayDelayedIntervention</action-name>
        </action>
        <action>
            <action-name>DisplayNextDelayedIntervention</action-name>
        </action>
        <action>
            <action-name>PushbackDelayedIntervention</action-name>
        </action>
        <action>
            <action-name>SendSuspendRequest</action-name>
        </action>
        <action>
            <action-name>SaveSuspendRequest</action-name>
        </action>
        <action>
            <action-name>RequestFullScreenAssistMode</action-name>
        </action>
        <action>
            <action-name>ReleaseFullScreenAssistMode</action-name>
        </action>
        <action>
            <action-name>IsOutsideTransaction</action-name>
        </action>
        <action>
            <action-name>ReloadConfiguration</action-name>
        </action>
        <action>
            <action-name>ClearApprovedIntervention</action-name>
        </action>
        <action>
            <action-name>SaveMinimumAge</action-name>
        </action>
        <action>
            <action-name>ClearRAPDataNeededIntervention</action-name>
        </action>
        <action>
            <action-name>IsInterventionOutstanding</action-name>
        </action>
        <action>
            <action-name>ClearLaneStatusWindows</action-name>
        </action>
        <action>
            <action-name>AppendDot</action-name>
        </action>
        <action>
            <action-name>ClearReceipt</action-name>
        </action>
        <action>
            <action-name>SaveRemoteConnection</action-name>
        </action>
        <action>
            <action-name>IsHandheld</action-name>
        </action>
        <action>
            <action-name>SwitchContextDelayedIntervention</action-name>
        </action>
        <action>
            <action-name>DisplayAgeRestrictionInstructionText</action-name>
        </action>
        <action>
            <action-name>GenerateEvent</action-name>
        </action>
        <action>
            <action-name>SaveStartTransactionIntervention</action-name>
        </action>
        <action>
            <action-name>AcquireExclusiveAccess</action-name>
        </action>
        <action>
            <action-name>ReleaseExclusiveAccess</action-name>
        </action>
        <action>
            <action-name>SwitchLaneContextCommand</action-name>
        </action>
        <action>
            <action-name>IsNotImmediateInterventionOutstanding</action-name>
        </action>
        <action>
            <action-name>DisplayNextImmediateIntervention</action-name>
        </action>
        <action>
            <action-name>EnableInputEvents</action-name>
        </action>
        <action>
            <action-name>IsNotConfirmSuspend</action-name>
        </action>
        <action>
            <action-name>IsNotMaxOfDOBInput</action-name>
        </action>
        <action>
            <action-name>RemoteDataCommandRAP</action-name>
        </action>
        <action>
            <action-name>SendInterventionEvent</action-name>
        </action>
        <action>
            <action-name>SendClientMachineNameEvent</action-name>
        </action>
        <action>
            <action-name>IsNotHandheld</action-name>
        </action>
        <action>
            <action-name>SwitchContextImmediateIntervention</action-name>
        </action>
        <action>
            <action-name>IsExclusiveAccessGranted</action-name>
        </action>
        <action>
            <action-name>SetReleaseExclusiveAccessRequired</action-name>
        </action>
        <action>
            <action-name>IsCurrentRemoteConnection</action-name>
        </action>
        <action>
            <action-name>IsInterventionTypeOutstanding</action-name>
        </action>
        <action>
            <action-name>DisableAMOnHandheld</action-name>
        </action>
        <action>
            <action-name>ConnectCommandComplete</action-name>
        </action>
        <action>
            <action-name>MediaLowEvent</action-name>
        </action>
        <action>
            <action-name>CheckForDateNotNeededButtonOption</action-name>
        </action>
        <action>
            <action-name>IsRemoteConnectionInputEnabled</action-name>
        </action>
        <action>
            <action-name>IsHandheldAssistModeAllowed</action-name>
        </action>
        <action>
            <action-name>IsAssistModeEnabled</action-name>
        </action>
        <action>
            <action-name>SendAllLaneStatusSummary</action-name>
        </action>
        <action>
            <action-name>ClearCurrentIntervention</action-name>
        </action>
        <action>
            <action-name>SwitchContextRAPDataNeededIntervention</action-name>
        </action>
        <action>
            <action-name>SelectKeyDown</action-name>
        </action>
        <action>
            <action-name>ForwardAuxData</action-name>
        </action>
        <action>
            <action-name>IsCurrentTriliteColor</action-name>
        </action>
        <action>
            <action-name>IsButtonEnabled</action-name>
        </action>
        <action>
            <action-name>IsTriliteColorGray</action-name>
        </action>
        <action>
            <action-name>PushbackImmediateIntervention</action-name>
        </action>
        <action>
            <action-name>PlaySound</action-name>
        </action>
        <action>
            <action-name>PlayInterventionSound</action-name>
        </action>
        <action>
            <action-name>ClearAllInterventions</action-name>
        </action>
        <action>
            <action-name>MakeInterventionCurrent</action-name>
        </action>
        <action>
            <action-name>MatchLaneContext</action-name>
        </action>
        <action>
            <action-name>ClearRemoteIntervention</action-name>
        </action>
        <action>
            <action-name>DisplayCurrentIntervention</action-name>
        </action>
        <action>
            <action-name>CompareToCurrentContext</action-name>
        </action>        
        <action>
            <action-name>send-msg</action-name>
        </action>
        <action>
            <action-name>pop-state</action-name>
        </action>
        <action>
            <action-name>push-state</action-name>
        </action>
        <action>
            <action-name>goto-state</action-name>
        </action>
        <action>
            <action-name>increment-variable</action-name>
        </action>
        <action>
            <action-name>decrement-variable</action-name>
        </action>
        <action>
            <action-name>assign-variable</action-name>
        </action>
        <action>
            <action-name>start-timer</action-name>
        </action>
        <action>
            <action-name>stop-timer</action-name>
        </action>
        <action>
            <action-name>IsCurrentInterventionInProgress</action-name>
        </action>
        <action>
            <action-name>wait-timer</action-name>
        </action>
        <action>
            <action-name>resend-msg</action-name>
        </action>
        <action>
            <action-name>evaluate-expression</action-name>
        </action>
        <action>
            <action-name>set-return-code</action-name>
        </action>
        <action>
            <action-name>clean-state</action-name>
        </action>
    <action>
        <action-name>IsLastDelayIntervention</action-name>
    </action>
    <action>
            <action-name>IsForceApprovalBeforeSuspend</action-name>
        </action>
        <!-- +SR720 -->
        <action>
            <action-name>IsTriliteColorGreen</action-name>
        </action>
        <!-- -SR720 -->
    </action-list>
    <!-- ============================================================================ -->
    <!-- Section:  Rules for state transitions                                        -->
    <!-- ============================================================================ -->
    <context-switch-list>
        <context-switch>
            <context-name>RAPSingle4</context-name>
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>RAPSingle5</context-name>
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>RAPSingle6</context-name>
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>RAPSingle8</context-name>
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>RAPSingle10</context-name>
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>RAPSingle12</context-name>
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>RAPSingle16</context-name>
            <enable-input-controls />
        </context-switch>
          <context-switch>
            <context-name>SmAbort</context-name>
            <push-input-controls-setting />
            <disable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>EnterPrice</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>LaneStatus</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveAgeCheck</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>LaneDetail</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveCoupon</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveVisualVerify</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveUnknownItem</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveItemNotForSale</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveQuantityRestrict</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveTimeRestrict</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveHelp</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveHelpOutsideTrx</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveVoid</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveOtherPayment</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveUnDeActivatedItem</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveSignatureCapture</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveCollection</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>CancelTransactionGeneric</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ConfirmSuspend</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>IncorrectItemWeight</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>UnexpectedIncrease</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>BagBoxNotValid</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>SkipBaggingBtnThreshold</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ItemRemovedBtnThreshold</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>BagBoxBtnThreshold</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>NewWeightItem</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>BagItemTimerExpires</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>TakeChangeTimerExpires</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>EASNotActivated</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>PickingUpItemsTimerExpires</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>DeviceFailure</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>WLDBFailure</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>UnexpectedDecrease</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>CloseLane</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>BagAreaBackup</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>SafetyCoverOpen</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>UnDeActivatedItemOnTABeltDetected</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>VerifySignature</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveAssistedTender</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>AssistedEndorsement</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>StartTransaction</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>StartTransactionAM</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ItemsForgotten</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>        
        <context-switch>
            <context-name>InsertCouponTimerExpires</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>CollectGiftCardRAP</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>HostOfflineRAP</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>MultiPackItem</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>OutOfSyncStop</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>HopperSubstitution</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>        
        <context-switch>
            <context-name>OutOfSyncNeedAssist</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ConfirmSuspendFromOtherPayment</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ConfirmSuspendFromLaneStatus</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveRestrictedNotAllowed</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>StartTrainingModeTrans</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveSuspensionDecline</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>MaxCouponApproval</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>CouponWarningAtFinalization</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>ApproveDelaySecurity</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>AllowSuspend</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
        <context-switch>
            <context-name>LaneInterventionDetail</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
	<context-switch>
            <context-name>Alert</context-name>
            <push-input-controls-setting />
            <enable-input-controls />
        </context-switch>
    </context-switch-list>
    <!-- ============================================================================ -->
    <!-- Section:  Rules for state transitions                                        -->
    <!-- ============================================================================ -->
    <application-state-list>
        <application-state>
            <state-name>tender</state-name>
            <push-assist-mode />
            <entry-rule-list>
                <rule>
                    <action>
                        <action-name>DisableAMOnHandheld</action-name>
                        <parameter>
                            <value>context-name=all;button-name=AssistModeButton</value>
                        </parameter>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>tender_state</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                    </action>
                </rule>
            </entry-rule-list>
            <exit-rule-list>
                <rule>
                    <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>tender_state</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                    </action>
                </rule>
            </exit-rule-list>
        </application-state>
    </application-state-list>
    <!-- ============================================================================ -->
    <!-- Section:  Rules for state transitions                                        -->
    <!-- ============================================================================ -->
    <rules>
        <!-- ======================================================================== -->
        <!-- State:  Any state                                                        -->
        <!-- Messages:  Initialize from FL to begin the initialization process        -->
        <!--                                                                          -->
        <!--                                                                          -->
        <!--      Message:                  Purpose:                                  -->
        <!--      _____________________     _________________________________________ -->
        <!--      Initialize                Begin the initialization process          -->
        <!-- ======================================================================== -->
        <state>
            <state-name>*</state-name>
            <!-- SCOTAPP is requesting a reset of the UI -->
            <message>
                <message-name>Initialize UI</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearReceipt</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Sets a flag based on whether the current remote connection is
                 a handheld device or not -->
            <message>
                <message-name>Check Handheld</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>is_handheld</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>is_handheld</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- API Handler:   OnInputEvent
                 Function:      Handles button presses from the remote API -->
            <message>
                <message-name>Input Event Command</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>IsInputEventEnabled</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsRemoteConnectionInputEnabled</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveRemoteConnection</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SelectKeyDown</action-name>
                            <parameter>
                                <value>lookup-table-name=SelectKeyDownTable</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SelectButton</action-name>
                            <parameter>
                                <value>lookup-table-name=SelectButtonTable</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- 1-9 on the numeric keypad -->
            <message>
                <message-name>NumericKeyPad1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>increment-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsNotMaxOfDOBInput</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>Append1To9</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>evaluate-expression</action-name>
                            <parameter>
                                <value>number_of_digit==1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- '0' on the numeric keypad -->
            <message>
                <message-name>NumericKeyPad2</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>increment-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsNotMaxOfDOBInput</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>Append0</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>evaluate-expression</action-name>
                            <parameter>
                                <value>number_of_digit==1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Clear button on the numeric keypad -->
            <message>
                <message-name>NumericKeyPad3</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- '.' button on the numeric keypad -->
            <message>
                <message-name>NumericKeyPad5</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>increment-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsNotMaxOfDOBInput</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AppendDot</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>evaluate-expression</action-name>
                            <parameter>
                                <value>number_of_digit==1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- API Handler:   OnEvent
                 Function:      Handles asynchronous events from the owner -->
            <message>
                <message-name>Event Command</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>EventCommand</action-name>
                            <parameter>
                                <value>lookup-table-name=EventCommandsTable</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- API Handler:   OnControl
                 Function:      Handles synchronous requests from the owner -->
            <message>
                <message-name>Control Command</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ControlCommand</action-name>
                            <parameter>
                                <value>lookup-table-name=ControlCommandsTable;
                                       variable-name=control_command_type</value>
                            </parameter>
                        </action>
                    </rule>
                    <select>
                        <when expression="control_command_type==1">
                            <rule>
                                <action>
                                    <action-name>SetTransactionState</action-name>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==2">
                            <rule>
                                <action>
                                    <action-name>send-msg</action-name>
                                    <parameter> <!-- Data source name from xml file -->
                                        <value>Enter Store Mode</value>
                                    </parameter>
                                    <parameter>
                                        <value>copy-plist</value>
                                    </parameter>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==3">
                            <rule>
                                <action>
                                    <action-name>send-msg</action-name>
                                    <parameter> <!-- Data source name from xml file -->
                                        <value>Exit Store Mode</value>
                                    </parameter>
                                    <parameter>
                                        <value>copy-plist</value>
                                    </parameter>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==4">
                            <rule>
                                <action>
                                    <action-name>send-msg</action-name>
                                    <parameter>
                                        <value>Transaction End</value>
                                    </parameter>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==5">
                            <rule>
                                <action>
                                    <action-name>send-msg</action-name>
                                    <parameter>
                                        <value>Transaction Begin</value>
                                    </parameter>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==6">
                            <rule>
                                <action>
                                    <action-name>ValidateOperator</action-name>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==7">
                            <rule>
                                <action>
                                    <action-name>send-msg</action-name>
                                    <parameter>
                                        <value>Light State Change</value>
                                    </parameter>
                                    <parameter>
                                        <value>copy-plist</value>
                                    </parameter>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==8">
                            <rule>
                                <action>
                                    <action-name>send-msg</action-name>
                                    <parameter>
                                        <value>Connection Attempt</value>
                                    </parameter>
                                    <parameter>
                                        <value>copy-plist</value>
                                    </parameter>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==9">
                            <rule>
                                <action>
                                    <action-name>send-msg</action-name>
                                    <parameter>
                                        <value>message-name=Disconnect;copy-plist=true</value>
                                    </parameter>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==10">
                            <rule>
                                <action>
                                    <action-name>send-msg</action-name>
                                    <parameter>
                                        <value>message-name=Sign On Attempt;copy-plist=true</value>
                                    </parameter>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==11">
                            <rule>
                                <action>
                                    <action-name>SignoffCommand</action-name>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==13">
                            <rule>
                                <action>
                                    <action-name>send-msg</action-name>
                                    <parameter>
                                        <value>Exit Assist Mode</value>
                                    </parameter>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==14">
                            <rule>
                                <action>
                                    <action-name>ReloadConfiguration</action-name>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==15">
                            <rule>
                                <action>
                                    <action-name>SaveRemoteConnection</action-name>
                                </action>
                            </rule>
                            <rule>
                                <action>
                                    <action-name>AcquireExclusiveAccess</action-name>
                                </action>
                            </rule>
                        </when>
                        <when expression="control_command_type==16">
                            <rule>
                                <action>
                                    <action-name>send-msg</action-name>
                                    <parameter>
                                        <value>Release Control For SCOTAPP</value>
                                    </parameter>
                                </action>
                            </rule>
                        </when>
                    </select>
                </message-rule-list>
            </message>
            <!-- API Handler:   OnControl operation=release
                 Function:      Releases exclusive access for SCOTAPP -->
            <message>
                <message-name>Release Control For SCOTAPP</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Subroutine to handle the return from an intervention context.
                 Distinguishes between a HH device and a desktop. Only used
                 to return from a context that has exclusive access.  -->
            <message>
                <message-name>Transition From Intervention</message-name>
                <message-rule-list>
                    <!-- If no interventions are outstanding, then go back
                         to Quad view -->
                    <if expression="IsInterventionOutstanding()">
                        <rule>
                            <action>
                                <action-name>CheckImmediateIntervention</action-name>
                            </action>
                            <failure-transition>Immediate Intervention</failure-transition>
                        </rule>
                        <!-- This action will select a state transition on the false leg -->
                        <rule>
                            <action>
                                <action-name>CheckDelayedIntervention</action-name>
                            </action>
                            <on-failure-action>
                                <action-name>send-msg</action-name>
                                <parameter>
                                    <value>Transition To Delayed Intervention</value>
                                </parameter>
                                <parameter>
                                    <value>copy-plist</value>
                                </parameter>
                            </on-failure-action>
                        </rule>
            <rule>
                            <action>
                                <action-name>ReleaseExclusiveAccess</action-name>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>ReleaseExclusiveAccess</action-name>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <!-- Subroutine to transition from one intervention to the next
                 delayed intervention.  -->
            <message>
                <message-name>Transition To Delayed Intervention</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayCurrentIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       instruction-text-variable=InstructionText;
                                       transaction-variable=InstructionText;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SwitchContextDelayedIntervention</action-name>
                            <parameter>
                                <value>DelayedInterventionsTable</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- API Handler:   OnControl operation=set-light-state
                 Function:      Changes the color of the lane button -->
            <message>
                <message-name>Light State Change</message-name>
                <message-rule-list>
                    <if expression="!IsCurrentTriliteColor()">
                        <rule>
                            <action>
                                <action-name>SetLightState</action-name>
                                <parameter>
                                    <value>lane-button=LaneButton;
                                        lane-button-text=LaneButtonText;
                                    </value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>send-msg</action-name>
                                <parameter>
                                    <value>message-name=Generate Alert Event;
                                           copy-plist=true
                                    </value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                </message-rule-list>
            </message>
            <message> <!-- sr683 -->
                <message-name>Disable Security Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>security_disabled</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetText</action-name>
                            <parameter>
                                <value>
                                string-id=SecurityDisableStatusTextOff;
                                control-name=SecurityDisableStatusText
                                       </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetText</action-name>
                            <parameter>
                                <value>string-id=SecurityDisableButtonOn;
                                       control-name=SecurityDisableButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetTextColor</action-name>
                            <parameter>
                                <value>control-name=LaneStateWindow2;color-name=Red</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ShowMessage</action-name>
                            <parameter>
                                <value>string-id=SecurityDisableText;
                                       transaction-variable=LaneStateWindow2</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message> <!-- sr683 -->
                <message-name>Enable Security Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>security_disabled</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetText</action-name>
                            <parameter>
                                <value>string-id=SecurityDisableStatusTextOn;
                                       control-name=SecurityDisableStatusText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetText</action-name>
                            <parameter>
                                <value>string-id=SecurityDisableButtonOff;
                                       control-name=SecurityDisableButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetTextColor</action-name>
                            <parameter>
                                <value>control-name=LaneStateWindow2;color-name=Black</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter>
                                <value>transaction-variable=LaneStateWindow2</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Generate Alert Event</message-name>
                <message-rule-list>
                    <if expression="!IsTriliteColorGray()">
                        <rule>
                            <action>
                                <action-name>SendInterventionEvent</action-name>
                                <parameter>
                                    <value>operation=intervention</value>
                                </parameter>
                            </action>
                        </rule>                     
                    </if>
                    <!-- +SR720 --> 
                    <if expression="IsOutsideTransaction()">
                        <rule>
                            <action>
                                <action-name>SetText</action-name>
                                <parameter>
                                    <value>control-name=LaneStatusButton;string-id=LaneStatusTitle</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else-if expression="IsTriliteColorGreen()">
                        <rule>
                            <action>
                                <action-name>SetText</action-name>
                                <parameter>
                                    <value>control-name=LaneStatusButton;string-id=LaneStatusTitle</value>
                                </parameter>
                            </action>
                        </rule>
                    </else-if>
                    <else-if expression="IsTriliteColorGray()">
                        <rule>
                            <action>
                                <action-name>SetText</action-name>
                                <parameter>
                                    <value>control-name=LaneStatusButton;string-id=LaneStatusTitle</value>
                                </parameter>
                            </action>
                          </rule>
                    </else-if>
                    <else>
                        <rule>
                            <action>
                                <action-name>SetText</action-name>
                                <parameter>
                                    <value>control-name=LaneStatusButton;string-id=ExpandReceiptButtonText</value>
                                </parameter>
                            </action>
                        </rule>
                    </else>                             
                    <!-- -SR720 -->                  
                </message-rule-list>
            </message>
            <message>
                <message-name>Disconnect</message-name>
                <message-rule-list>
                    <if expression="IsCurrentRemoteConnection()">
                        <rule>
                            <action>
                                <action-name>PushbackDelayedIntervention</action-name>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>ClearCurrentIntervention</action-name>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>ReleaseExclusiveAccess</action-name>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>DisconnectCommand</action-name>
                            </action>
                            <failure-transition>Logged Off</failure-transition>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>DisconnectCommand</action-name>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disconnect Handheld</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisconnectCommand</action-name>
                        </action>
                    </rule>
                    <failure-transition>Logged Off</failure-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Exit Assist Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>exit-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Connection Attempt</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ConnectCommandRAP</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetLaneName</action-name>
                            <parameter>
                                <value>button-name=LaneButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetLaneName</action-name>
                            <parameter>
                                <value>button-name=LaneCaption</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Connection Complete</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ConnectCommandComplete</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsExclusiveAccessGranted</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>SaveRemoteConnection</action-name>
                        </on-failure-action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Sign On Attempt</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SignonCommand</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Set Command</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SetCommand</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Get Command</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>GetCommand</action-name>
                            <parameter>
                                <value>lookup-table-name=GetCommandsTable</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContextCommand</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Lane Context Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchLaneContextCommand</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Remote Data Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>RemoteDataCommandRAP</action-name>
                            <parameter>
                                <value>lookup-table-name=RemoteDataCommandsTable</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Normal Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>AddNormalItem</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button=LaneButton;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3;
                                       assist-mode-button=AssistModeButton;
                                       lane-status-button=LaneStatusButton;
                                       receipt-control=LaneReceipt;
                                       item-count-text=ItemAmount;
                                       total-amount-text=SMTotalAmount
                                </value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Approval Command</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApprovalCommand</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- This message received when a an intervention has been successfully
                 approved. -->
            <message>
                <message-name>Remote Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearRemoteIntervention</action-name>
                        </action>
                    </rule>
                    <!-- sr683 -->
                    <if expression="security_disabled!=1">
                    <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>IsInterventionOutstanding</action-name>
                            </action>
                            <on-failure-action>
                                <action-name>ClearLaneStatusWindows</action-name>
                                <parameter>
                                    <value>lane-button-text=LaneButtonText;
                                           lane-status1-text=LaneStateWindow1;
                                           lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </on-failure-action>
                            <failure-transition>Main</failure-transition>
                        </rule>
                    </else>
                    <!-- sr683 -->

            <rule>
            <action>
                <action-name>IsLastDelayIntervention</action-name>
              </action>
            </rule>
                    <if expression="IsCurrentInterventionInProgress()">
                    <rule>
                            <action>
                                <action-name>DisplayCurrentIntervention</action-name>
                                <parameter>
                                    <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </action>
                    </rule>
                    </if>
                    <else>
                    <rule>
                            <action>
                                <action-name>IsNotImmediateInterventionOutstanding</action-name>
                            </action>
                            <on-failure-action>
                                <action-name>DisplayNextImmediateIntervention</action-name>
                                <parameter>
                                    <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </on-failure-action>
                    </rule>
                    <rule>
                            <action>
                                <action-name>DisplayNextDelayedIntervention</action-name>
                                <parameter>
                                    <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </action>
                    </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Security Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=security</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                      </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                     </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Coupon Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=coupon</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
            <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
            </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
            <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
            </rule>
                    </else-if>
                    <else>
               <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
              </rule>
                    </else>
                </message-rule-list>
            </message>
     <!--  +TAR 352409   -->
        <message>
                <message-name>SuspensionDecline Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=suspension-decline</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                        <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                    <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                    <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
          </message>
     <!--  -TAR 352409  -->
            <message>
                <message-name>Void Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=void</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                      </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                      </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                      </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Age Restriction Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=age-restriction</value>
                            </parameter>
                        </action>
                    </rule>

                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>

                    <if expression="!IsInterventionOutstanding()">
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                     </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                     <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                      </rule>
                    </else-if>
                    <else>
                     <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                     </rule>
                    </else>

                </message-rule-list>
            </message>
            <message>
                <message-name>Visual Validation Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=visual-validation</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                        <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                     <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    </else-if>
                    <else>
                    <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Hopper Substitution Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=hopper-substitution</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                       </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                       </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Call For Help Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=call-for-help</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                      </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                      </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                      </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Other Payment Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=other-payment</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                        <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                        <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Suspend Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=suspend</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                       <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Price Required Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=price-required</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                      </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Unknown Item Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=unknown-item</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                      </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                       <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                       </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Recalled Item Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=recalled-item</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                       <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                       <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Time Restricted Item Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=time-restricted-item</value>
                            </parameter>
                        </action>
                    </rule>
                   <!--(+)TAR#391227-->
                     <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                       <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                    <!--(-)TAR#391227-->
                </message-rule-list>
            </message>
            <message>
                <message-name>Restricted Not Allowed Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=restricted-not-allowed</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                       <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Sig Cap Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=sig-cap</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                       <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Application Error Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=application-error</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Device Error Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=device-error</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Quantity Restricted Item Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=quantity-restricted-item</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                       <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Undeactivated Item Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=undeactivated-item</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="!IsInterventionOutstanding()">
                      <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </if>
                    <else-if expression="!IsNotImmediateInterventionOutstanding()">
                       <rule>
                        <action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else-if>
                    <else>
                      <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Can Approve Command</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>CanApproveCommand</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Get Approval Command</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>GetApprovalCommand</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Terminate</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearReceipt</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       item-count-static-text=ItemText;
                                       item-count-text=ItemAmount;
                                       total-amount-static-text=TotalText;
                                       total-amount-text=TotalAmount;
                                       visible=false
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Unitialized</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Add Other Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>AddOtherEventCommand</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Media Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>MediaCommand</action-name>
                            <parameter>
                                <value>data-source=MediaList;
                                       receipt-control=RAPMediaList
                                </value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>CheckRAPDataNeededEvent</action-name>
                            <parameter>
                                <value>lookup-table-name=RAPDataNeededInterventionsTable</value>
                            </parameter>
                        </action>
                        <on-failure-action>
                            <action-name>SaveAsDelayedIntervention</action-name>
                            <parameter>
                                <value>lookup-table-name=RAPDataNeededInterventionsTable</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>button-name=LaneButton;context-name=all</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearImmediateIntervention</action-name>
                        </action>
                    </rule>

          <!-- TAR 356303 roll back
            <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
           roll back TAR 356303 -->
                    <rule>
                        <action>
                            <action-name>ClearRAPDataNeededIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <if expression="IsCurrentInterventionInProgress()">
                        <rule>
                            <action>
                                <action-name>DisplayCurrentIntervention</action-name>
                                <parameter>
                                    <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>IsNotImmediateInterventionOutstanding</action-name>
                            </action>
                            <on-failure-action>
                                <action-name>DisplayNextImmediateIntervention</action-name>
                                <parameter>
                                    <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </on-failure-action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>DisplayNextDelayedIntervention</action-name>
                                <parameter>
                                    <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Transaction Begin</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearReceipt</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       item-count-static-text=ItemText;
                                       item-count-text=ItemAmount;
                                       total-amount-static-text=TotalText;
                                       total-amount-text=TotalAmount;
                                       visible=true
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>TransactionBegin</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>CheckAssistModeControl</action-name>
                            <parameter>
                                <value>valid-values=1,3</value>
                            </parameter>
                        </action>
                        <on-failure-action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="IsInterventionOutstanding()">
                        <rule>
                            <action>
                                <action-name>SetText</action-name>
                                <parameter>
                                    <value>control-name=LaneStatusButton;string-id=ExpandReceiptButtonText</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                </message-rule-list>
            </message>
            <message>
                <message-name>Transaction End</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>TransactionEnd</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearAllInterventions</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearReceipt</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       item-count-static-text=ItemText;
                                       item-count-text=ItemAmount;
                                       total-amount-static-text=TotalText;
                                       total-amount-text=TotalAmount;
                                       visible=false
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="IsExclusiveAccessGranted()">
                        <rule>
                            <action>
                                <action-name>ReleaseExclusiveAccess</action-name>
                            </action>
                        </rule>
                    </if>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>suspend_in_progress</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Enable Assist Mode Button</message-name>
                <message-rule-list>
<!-- preformance fix for later
                    <if expression="IsButtonEnabled(context-name=all;button-name=AssistModeButton)">
                        <rule/>
                    </if>
                    <else-if expression="!IsAssistModeEnabled()">
-->
                    <if expression="!IsAssistModeEnabled()">
                        <rule>
                            <action>
                                <action-name>DisableButton</action-name>
                                <parameter>
                                    <value>context-name=all;button-name=AssistModeButton</value>
                                </parameter>
                                <parameter>
                                    <value>context-name=all;button-name=HHAssistModeButton</value>
                                </parameter>
                            </action>
                        </rule>
<!--
                    </else-if>
-->
                    </if>
                    <else-if expression="CheckAssistModeControl(valid-values=0)">
                        <rule>
                            <action>
                                <action-name>DisableButton</action-name>
                                <parameter>
                                    <value>context-name=all;button-name=AssistModeButton</value>
                                </parameter>
                                <parameter>
                                    <value>context-name=all;button-name=HHAssistModeButton</value>
                                </parameter>
                            </action>
                        </rule>
                    </else-if>
                    <else-if expression="CheckAssistModeControl(valid-values=3)">
                        <rule>
                            <action>
                                <action-name>send-msg</action-name>
                                <parameter>
                                    <value>message-name=Enable Assist Mode Button 2;copy-plist=true</value>
                                </parameter>
                            </action>
                        </rule>
                    </else-if>
                    <!-- +TAR 353676 -->
                    <else-if expression="CheckAssistModeControl(valid-values=2)">
                        <rule>
                            <action>
                                <action-name>send-msg</action-name>
                                <parameter>
                                    <value>message-name=Handle Assist Mode 2</value>
                                </parameter>
                            </action>
                        </rule>
                    </else-if>
                    <!-- -TAR 353676 -->
                    <else-if expression="IsOutsideTransaction()">
                        <rule>
                            <action>
                                <action-name>DisableButton</action-name>
                                <parameter>
                                    <value>context-name=all;button-name=AssistModeButton</value>
                                </parameter>
                                <parameter>
                                    <value>context-name=all;button-name=HHAssistModeButton</value>
                                </parameter>
                            </action>
                        </rule>
                    </else-if>
                    <else>
                        <rule>
                            <action>
                                <action-name>send-msg</action-name>
                                <parameter>
                                    <value>message-name=Enable Assist Mode Button 2;copy-plist=true</value>
                                </parameter>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <!-- +TAR 353676 -->
            <message>
                <message-name>Handle Assist Mode 2</message-name>
                <message-rule-list>
                    <if expression="IsOutsideTransaction()">
                        <rule>
                            <action>
                                <action-name>send-msg</action-name>
                                <parameter>
                                    <value>message-name=Enable Assist Mode Button 2;copy-plist=true</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                </message-rule-list>
            </message>
            <!-- -TAR 353676 -->
            <message>
                <message-name>Enable Assist Mode Button 2</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="IsHandheldAssistModeAllowed()">
                        <rule>
                            <action>
                                <action-name>EnableButton</action-name>
                                <parameter>
                                    <value>context-name=all;button-name=HHAssistModeButton</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>DisableButton</action-name>
                                <parameter>
                                    <value>context-name=all;button-name=HHAssistModeButton</value>
                                </parameter>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disable Assist Mode Button</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                            <parameter> <!-- Data source name from xml file -->
                                <value>context-name=all;button-name=HHAssistModeButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Enable NumItems Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ShowControl</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>control-name=ItemText;
                                       context-name=all</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ShowControl</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>control-name=ItemAmount;
                                       context-name=all</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disable NumItems Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>HideControl</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>ItemText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>HideControl</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>ItemAmount</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Can Suspend Now Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>CanSuspendNowEvent</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>suspend_allowed</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>suspend_allowed</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Security Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Coupon Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Void Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <!-- 287301
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
-->
                </message-rule-list>
            </message>
    <!--  +TAR 352409  -->
          <message>
            <message-name>SuspensionDecline Event</message-name>
                 <message-rule-list>
               <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>

                    <!-- 287301
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
            -->
                </message-rule-list>
           </message>
    <!--  -TAR 352409  -->
            <message>
                <message-name>Age Restriction Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Visual Validation Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Hopper Substitution Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       instruction-text-variable=InstructionText;
                                       transaction-variable=InstructionText;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Call For Help Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsOutsideTransaction</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                            <parameter>
                                <value>message-name=Call For Help Outside Transaction Event</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Other Payment Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Suspend Event</message-name>
                <message-rule-list>
<!-- TAR371932 & TAR371918+ -->
            <rule>
                        <action>
                            <action-name>SaveSuspendRequest</action-name>
                        </action>
                    </rule>
<!-- TAR371932 & TAR371918- -->
                    <rule>
                        <action>
                            <action-name>evaluate-expression</action-name>
                            <parameter>
                                <value>remote_initiated_suspend==1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>remote_initiated_suspend</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveSuspendRequest</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cApprove;
                                       category=suspend</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>push-state</action-name>
                        </action>
                    </rule>
                    <success-transition>Suspend In Progress</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Price Required Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Unknown Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Recalled Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Time Restricted Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Restricted Not Allowed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Sig Cap Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Application Error Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Device Error Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Quantity Restricted Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Undeactivated Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       receipt-control=LaneReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveDelayedIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Ready To Collect Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisplayImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>button-name=LaneButton;context-name=all</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Normal Item Event - Alert</message-name>
            </message>
            <message>
                <message-name>Normal Item Event - POS Message</message-name>
            </message>
            <message>
                <message-name>Media Low Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>MediaLowEvent</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>All Lane Status Summary</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SendAllLaneStatusSummary</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>RAP Sell Item</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
			<message>
                <message-name>RAP Void Item</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Update Exception</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Get Weight Value</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Cancel Get Weight Value</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Assist Mode Toggle</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
           <message>
                <message-name>Main Screen</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>  
            <message>
                <message-name>Ready To Switch</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Itemization Start</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Itemization Complete</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Attendant Done</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>RAP Start Belts</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>RAP Stop Belts</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Assign Collection Area</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Exceptions Pending</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Exceptions Acknowledged</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Check Health Start</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Jam Recovery Start</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ForwardAuxData</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  Unitialized                                                      -->
        <!-- Messages:  Initialize from FL to begin the initialization process        -->
        <!-- ======================================================================== -->
        <state>
            <state-name>Unitialized</state-name>
            <message>
                <message-name>Initialize</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>LoadConfiguration</action-name>
                        </action>
                    </rule>
                    <success-transition>Logged Off</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  Idle                                                             -->
        <!-- Function:  Active state when no transaction in progress                  -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>Logged Off</state-name>
            <message>
                <message-name>LaneButton</message-name>
            </message>
            <message>
                <message-name>AssistModeButton</message-name>
            </message>
            <message>
                <message-name>LaneStatusButton</message-name>
            </message>
            <message>
                <message-name>Normal Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>AddNormalItem</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button=LaneButton;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3;
                                       assist-mode-button=AssistModeButton;
                                       lane-status-button=LaneStatusButton;
                                       receipt-control=LaneReceipt;
                                       item-count-text=ItemAmount;
                                       total-amount-text=SMTotalAmount
                                </value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Exit Store Mode</message-name>
            </message>
            <message>
                <message-name>Connection Attempt</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ConnectCommandRAP</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetLaneName</action-name>
                            <parameter>
                                <value>button-name=LaneButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetLaneName</action-name>
                            <parameter>
                                <value>button-name=LaneCaption</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Connection Complete</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ConnectCommandComplete</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SaveRemoteConnection</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearRAPDataNeededIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <if expression="IsCurrentInterventionInProgress()">
                        
                            <action>
                                <action-name>DisplayCurrentIntervention</action-name>
                                <parameter>
                                    <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </action>
                        
                    </if>

                    <else>
                        
                            <action>
                                <action-name>IsNotImmediateInterventionOutstanding</action-name>
                            </action>
                            <on-failure-action>
                                <action-name>DisplayNextImmediateIntervention</action-name>
                                <parameter>
                                    <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </on-failure-action>
                        
                            <action>
                                <action-name>DisplayNextDelayedIntervention</action-name>
                                <parameter>
                                    <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </action>
                        
                    </else>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  Main                                                             -->
        <!-- Function:  Transaction in progress                                       -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>Main</state-name>
            <entry-rule-list>
                <rule>
                    <action>
                        <action-name>clean-state</action-name>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>send-msg</action-name>
                        <parameter>
                            <value>Update Buttons</value>
                        </parameter>
                    </action>
                </rule>
                <if expression="IsExclusiveAccessGranted()">
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                </if>
            </entry-rule-list>
            <message>
                <message-name>Update Buttons</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=LaneButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <!-- Update the assist mode button.  There is a "function" set up in the "*" state for doing just this. -->
                    <if expression="CompareToCurrentContext(context=ThankYou)">
                        <rule>
                            <action>
                                <action-name>DisableButton</action-name>
                                    <parameter>
                                        <value>context-name=all;button-name=AssistModeButton</value>
                                    </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>send-msg</action-name>
                                    <parameter>
                                        <value>Enable Assist Mode Button</value>
                                    </parameter>
                            </action>
                        </rule>                     
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>LaneButton</message-name>
                <message-rule-list>
                   <!-- +RFC 289024 : Commented the rule    -->
                   <!-- Uncomment for tar  398179   -->
                    <rule>
                        <action>
                            <action-name>IsNotHandheld</action-name>
                        </action>
                        <failure-transition>LaneDetail</failure-transition>
                    </rule>
                
            <!--    -RFC 289024 : End of comment    -->
                    <rule>
                        <action>
                            <action-name>CheckImmediateIntervention</action-name>
                        </action>
                        <failure-transition>Immediate Intervention</failure-transition>
                    </rule>
                    <!-- This action will select a state transition on the false leg -->
                    <rule>
                        <action>
                            <action-name>CheckDelayedIntervention</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>SwitchContextDelayedIntervention</action-name>
                            <parameter>
                                <value>DelayedInterventionsTable</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>evaluate-expression</action-name>
                            <parameter>
                                <value>suspend_in_progress==0</value>
                            </parameter>
                        </action>
                        <failure-transition>Allow Suspension</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>CheckImmediateIntervention</action-name>
                        </action>
                        <failure-transition>Immediate Intervention</failure-transition>
                    </rule>
                    <!-- This action will select a state transition on the false leg -->
                    <rule>
                        <action>
                            <action-name>CheckDelayedIntervention</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>SwitchContextDelayedIntervention</action-name>
                            <parameter>
                                <value>DelayedInterventionsTable</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsOutsideTransaction</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </on-failure-action>
                        <failure-transition>Assist Mode</failure-transition>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendUnsolicitedData</action-name>
                            <parameter>
                                <value>unsolicited-data=RAPInitiateTransaction</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Wait For Data Needed</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>LaneStatusButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>push-state</action-name>
                        </action>
                    </rule>
                    <!-- +SR720 -->
                    <if expression="IsOutsideTransaction()">
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=LaneStatus</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <rule>
                        <action>
                            <action-name>IsNotHandheld</action-name>
                        </action>
                        <failure-transition>LaneStatus</failure-transition>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                        <failure-transition>LaneStatus</failure-transition>
                    </rule>
                    <success-transition>LaneInterventionDetail</success-transition>
                    <!-- -SR 720 -->
                </message-rule-list>
            </message>
            <message>
                <message-name>Normal Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>AddNormalItem</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button=LaneButton;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3;
                                       assist-mode-button=AssistModeButton;
                                       lane-status-button=LaneStatusButton;
                                       receipt-control=LaneReceipt;
                                       item-count-text=ItemAmount;
                                       total-amount-text=SMTotalAmount
                                </value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Exit Store Mode</message-name>
            </message>
            <message>
                <message-name>Transaction Begin</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearReceipt</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       item-count-static-text=ItemText;
                                       item-count-text=ItemAmount;
                                       total-amount-static-text=TotalText;
                                       total-amount-text=TotalAmount;
                                       visible=true
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>TransactionBegin</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>CheckAssistModeControl</action-name>
                            <parameter>
                                <value>valid-values=1,3</value>
                            </parameter>
                        </action>
                        <on-failure-action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <if expression="IsInterventionOutstanding()">
                        <rule>
                            <action>
                                <action-name>SetText</action-name>
                                <parameter>
                                    <value>control-name=LaneStatusButton;string-id=ExpandReceiptButtonText</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                </message-rule-list>
            </message>
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
<!-- TAR 311902                    <rule>
                        <action>
                            <action-name>ClearImmediateIntervention</action-name>
                        </action>
                    </rule>
-->
                    <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                    </rule>
                    
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>

                    <rule>
                        <action>
                            <action-name>ClearRAPDataNeededIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsNotImmediateInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  LaneDetail                                                       -->
        <!-- Function:  Transaction in progress                                       -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>LaneDetail</state-name>
            <entry-rule-list>
                <rule>
                    <action>
                        <action-name>SwitchContext</action-name>
                        <parameter>
                            <value>LaneDetail</value>
                        </parameter>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>AcquireExclusiveAccess</action-name>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>send-msg</action-name>
                        <parameter>
                            <value>Update Buttons</value>
                        </parameter>
                    </action>
                </rule>
            </entry-rule-list>
<!-- 402331 422721 -->
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearRAPDataNeededIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <if expression="IsCurrentInterventionInProgress()">
			<action>
			    <action-name>DisplayCurrentIntervention</action-name>
			    <parameter>
				<value>data-source=CMSMReceipt;
					lane-button-text=LaneButtonText;
					lane-status1-text=LaneStateWindow1;
					lane-status2-text=LaneStateWindow2;
					lane-status3-text=LaneStateWindow3
				</value>
			     </parameter>
			</action>
                    </if>
          	    <else>
			<action>
	                    <action-name>IsNotImmediateInterventionOutstanding</action-name>
			</action>
			<on-failure-action>
		            <action-name>DisplayNextImmediateIntervention</action-name>
			    <parameter>
				<value>data-source=CMSMReceipt;
					lane-button-text=LaneButtonText;
					lane-status1-text=LaneStateWindow1;
					lane-status2-text=LaneStateWindow2;
					lane-status3-text=LaneStateWindow3
				</value>
			   </parameter>
			</on-failure-action>
			<action>
			    <action-name>DisplayNextDelayedIntervention</action-name>
			    <parameter>
				<value>data-source=CMSMReceipt;
					lane-button-text=LaneButtonText;
					lane-status1-text=LaneStateWindow1;
					lane-status2-text=LaneStateWindow2;
					lane-status3-text=LaneStateWindow3
				</value>
		    	    </parameter>
			</action>
						
		</else>
                </message-rule-list>
            </message>

<!-- 402331 422721  -->

            <message>
                <message-name>Update Buttons</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=LaneButton</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <!-- Update the assist mode button.  There is a "function"
                         set up in the "*" state for doing just this. -->
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>Enable Assist Mode Button</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>LaneButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>CheckImmediateIntervention</action-name>
                        </action>
                        <failure-transition>Immediate Intervention</failure-transition>
                    </rule>
                    <!-- This action will select a state transition on the false leg -->
                    <rule>
                        <action>
                            <action-name>CheckDelayedIntervention</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>SwitchContextDelayedIntervention</action-name>
                            <parameter>
                                <value>DelayedInterventionsTable</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>evaluate-expression</action-name>
                            <parameter>
                                <value>suspend_in_progress==0</value>
                            </parameter>
                        </action>
                        <failure-transition>Allow Suspension</failure-transition>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>CheckImmediateIntervention</action-name>
                        </action>
                        <failure-transition>Immediate Intervention</failure-transition>
                    </rule>
                    <!-- This action will select a state transition on the false leg -->
                    <rule>
                        <action>
                            <action-name>CheckDelayedIntervention</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>SwitchContextDelayedIntervention</action-name>
                            <parameter>
                                <value>DelayedInterventionsTable</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsOutsideTransaction</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </on-failure-action>
                        <failure-transition>Assist Mode</failure-transition>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendUnsolicitedData</action-name>
                            <parameter>
                                <value>unsolicited-data=RAPInitiateTransaction</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Wait For Data Needed</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>LaneStatusButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>CheckImmediateIntervention</action-name>
                        </action>
                        <failure-transition>Immediate Intervention</failure-transition>
                    </rule>
                    <!-- This action will select a state transition on the false leg -->
                    <rule>
                        <action>
                            <action-name>CheckDelayedIntervention</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>SwitchContextDelayedIntervention</action-name>
                            <parameter>
                                <value>DelayedInterventionsTable</value>
                            </parameter>
                        </on-failure-action>
                    </rule>                
                    <rule>
                        <action>
                            <action-name>push-state</action-name>
                        </action>
                    </rule>
                    <success-transition>LaneStatus</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Normal Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>AddNormalItem</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button=LaneButton;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3;
                                       assist-mode-button=AssistModeButton;
                                       lane-status-button=LaneStatusButton;
                                       receipt-control=LaneReceipt;
                                       item-count-text=ItemAmount;
                                       total-amount-text=SMTotalAmount
                                </value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Exit Store Mode</message-name>
            </message>
            <message>
                <message-name>Transaction Begin</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearReceipt</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       item-count-static-text=ItemText;
                                       item-count-text=ItemAmount;
                                       total-amount-static-text=TotalText;
                                       total-amount-text=TotalAmount;
                                       visible=true
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>TransactionBegin</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>CheckAssistModeControl</action-name>
                            <parameter>
                                <value>valid-values=1,3</value>
                            </parameter>
                        </action>
                        <on-failure-action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disconnect</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>IsNotHandheld</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Disconnect Handheld;copy-plist=true</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisconnectCommand</action-name>
                        </action>
                        <failure-transition>Logged Off</failure-transition>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disconnect Handheld</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisconnectCommand</action-name>
                        </action>
                    </rule>
                    <failure-transition>Logged Off</failure-transition>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        
        <!-- +SR720 -->
        <!-- ======================================================================== -->
        <!-- State:  LaneInterventionDetail                                                       -->
        <!-- Function:  Transaction in progress                                       -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>LaneInterventionDetail</state-name>
            <entry-rule-list>
                <rule>
                    <action>
                        <action-name>SwitchContext</action-name>
                        <parameter>
                            <value>LaneInterventionDetail</value>
                        </parameter>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>AcquireExclusiveAccess</action-name>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>send-msg</action-name>
                        <parameter>
                            <value>Update Buttons</value>
                        </parameter>
                    </action>
                </rule>
            </entry-rule-list>
            <message>
                <message-name>Update Buttons</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=LaneButton</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <!-- Update the assist mode button.  There is a "function"
                         set up in the "*" state for doing just this. -->
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>Enable Assist Mode Button</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>LaneButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>CheckImmediateIntervention</action-name>
                        </action>
                        <failure-transition>Immediate Intervention</failure-transition>
                    </rule>
                    <!-- This action will select a state transition on the false leg -->
                    <rule>
                        <action>
                            <action-name>CheckDelayedIntervention</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>SwitchContextDelayedIntervention</action-name>
                            <parameter>
                                <value>DelayedInterventionsTable</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>evaluate-expression</action-name>
                            <parameter>
                                <value>suspend_in_progress==0</value>
                            </parameter>
                        </action>
                        <failure-transition>Allow Suspension</failure-transition>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>CheckImmediateIntervention</action-name>
                        </action>
                        <failure-transition>Immediate Intervention</failure-transition>
                    </rule>
                    <!-- This action will select a state transition on the false leg -->
                    <rule>
                        <action>
                            <action-name>CheckDelayedIntervention</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>SwitchContextDelayedIntervention</action-name>
                            <parameter>
                                <value>DelayedInterventionsTable</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsOutsideTransaction</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </on-failure-action>
                        <failure-transition>Assist Mode</failure-transition>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendUnsolicitedData</action-name>
                            <parameter>
                                <value>unsolicited-data=RAPInitiateTransaction</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Wait For Data Needed</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Normal Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>AddNormalItem</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button=LaneButton;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3;
                                       assist-mode-button=AssistModeButton;
                                       lane-status-button=LaneStatusButton;
                                       receipt-control=LaneReceipt;
                                       item-count-text=ItemAmount;
                                       total-amount-text=SMTotalAmount
                                </value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Exit Store Mode</message-name>
            </message>
            <message>
                <message-name>Transaction Begin</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearReceipt</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       item-count-static-text=ItemText;
                                       item-count-text=ItemAmount;
                                       total-amount-static-text=TotalText;
                                       total-amount-text=TotalAmount;
                                       visible=true
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>TransactionBegin</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>CheckAssistModeControl</action-name>
                            <parameter>
                                <value>valid-values=1,3</value>
                            </parameter>
                        </action>
                        <on-failure-action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disconnect</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>IsNotHandheld</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Disconnect Handheld;copy-plist=true</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisconnectCommand</action-name>
                        </action>
                        <failure-transition>Logged Off</failure-transition>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disconnect Handheld</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisconnectCommand</action-name>
                        </action>
                    </rule>
                    <failure-transition>Logged Off</failure-transition>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- -SR720 -->
        
        <!-- ======================================================================== -->
        <!-- State:  Allow Suspension                                                 -->
        <!-- Function:  Transaction in progress                                       -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>Allow Suspension</state-name>
            <entry-rule-list>
                <rule>
                    <action>
                        <action-name>SwitchContext</action-name>
                        <parameter>
                            <value>AllowSuspend</value>
                        </parameter>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>AcquireExclusiveAccess</action-name>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>send-msg</action-name>
                        <parameter>
                            <value>Update Buttons</value>
                        </parameter>
                    </action>
                </rule>
            </entry-rule-list>
            <exit-rule-list>
                <rule>
                    <action>
                        <action-name>ReleaseExclusiveAccess</action-name>
                    </action>
                </rule>
            </exit-rule-list>
            <message>
                <message-name>Update Buttons</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>suspend_in_progress</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>suspend_in_progress</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  Wait For Data Needed                                             -->
        <!-- Function:                                                                -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>Wait For Data Needed</state-name>
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SaveStartTransactionIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsNotStartTransactionView</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>Switch Context</value>
                            </parameter>
                        </on-failure-action>
                        <failure-transition>StartTransaction</failure-transition>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsNotStartTransactionAMView</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>Switch Context</value>
                            </parameter>
                        </on-failure-action>
                        <failure-transition>StartTransactionAM</failure-transition>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- +TAR 356716 -->
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- -TAR 356716 -->
        </state>
        <!-- ======================================================================== -->
        <!-- State:  Suspend In Progress                                              -->
        <!-- Function:  Suspend in progress                                           -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>Suspend In Progress</state-name>
        <entry-rule-list>
                <rule>
                    <action>
                        <action-name>DisableButton</action-name>
                        <parameter>
                            <value>context-name=all;button-name=LaneStatusButton</value>
                        </parameter>
                    </action>
                </rule>
            </entry-rule-list>
            <message>
                <message-name>Suspend Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>suspend_in_progress</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>pop-state</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Assist Mode Size To FullScreen</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>exit-store-mode</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Exit Assist Mode</message-name>
            </message>
            <message>
                <message-name>Enter Store Mode</message-name>
            </message>
            <message>
                <message-name>Exit Store Mode</message-name>
            </message>
            <message>
                <message-name>Switch Lane Context Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchLaneContextCommand</action-name>
                        </action>
                    </rule>
                    <if expression="MatchLaneContext(context=ScanAndBag)">
                        <rule>
                            <action>
                                <action-name>SendSuspendRequest</action-name>
                                <parameter>
                                    <value>reason=Transaction Suspended</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else-if expression="MatchLaneContext(context=ScanAndBagWithReward)">
                        <rule>
                            <action>
                                <action-name>SendSuspendRequest</action-name>
                                <parameter>
                                    <value>reason=Transaction Suspended</value>
                                </parameter>
                            </action>
                        </rule>

                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
                    </else-if>

          <else>
           <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>exit-store-mode</value>
                            </parameter>
                        </action>
                    </rule>
            <rule>
                            <action>
                                <action-name>SendSuspendRequest</action-name>
                                <parameter>
                                    <value>reason=Transaction Suspended</value>
                                </parameter>
                            </action>
                        </rule>

                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
        </else>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  LaneStatus                                                       -->
        <!-- Function:  Transaction in progress                                       -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>LaneStatus</state-name>
            <entry-rule-list>
                <rule>
                    <action>
                        <action-name>SwitchContext</action-name>
                        <parameter>
                            <value>LaneStatus</value>
                        </parameter>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>AcquireExclusiveAccess</action-name>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>send-msg</action-name>
                        <parameter>
                            <value>Update Buttons</value>
                        </parameter>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>send-msg</action-name>
                        <parameter>
                            <value>Check Handheld</value>
                        </parameter>
                    </action>
                </rule>
                <if expression="security_disabled!=1">
                <rule>
                    <action>
                        <action-name>SetText</action-name>
                        <parameter> <!-- Name of the transaction variable -->
                            <value>control-name=SecurityDisableStatusText;string-id=SecurityDisableStatusTextOn
                                   </value>
                        </parameter>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>SetText</action-name>
                        <parameter>
                            <value>control-name=SecurityDisableButton;string-id=SecurityDisableButtonOff</value>
                        </parameter>
                    </action>
                </rule>
                </if>
                <else>
               <rule>
                    <action>
                        <action-name>SetText</action-name>
                        <parameter>
                            <value>string-id=SecurityDisableButtonOn;
                                   control-name=SecurityDisableButton</value>
                        </parameter>
                    </action>
                </rule>
                <rule>
                    <action>
                        <action-name>SetText</action-name>
                        <parameter> <!-- Name of the transaction variable -->
                            <value>string-id=SecurityDisableStatusTextOff;
                                   control-name=SecurityDisableStatusText</value>
                        </parameter>
                    </action>
                </rule>
                </else>
            </entry-rule-list>
            <exit-rule-list>
                <if expression="is_handheld!=1">
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                </if>
            </exit-rule-list>
<!-- 402331 422721 -->
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearRAPDataNeededIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <if expression="IsCurrentInterventionInProgress()">
			<action>
			    <action-name>DisplayCurrentIntervention</action-name>
			    <parameter>
				<value>data-source=CMSMReceipt;
					lane-button-text=LaneButtonText;
					lane-status1-text=LaneStateWindow1;
					lane-status2-text=LaneStateWindow2;
					lane-status3-text=LaneStateWindow3
				</value>
			     </parameter>
			</action>
                    </if>
          	    <else>
			<action>
	                    <action-name>IsNotImmediateInterventionOutstanding</action-name>
			</action>
			<on-failure-action>
		            <action-name>DisplayNextImmediateIntervention</action-name>
			    <parameter>
				<value>data-source=CMSMReceipt;
					lane-button-text=LaneButtonText;
					lane-status1-text=LaneStateWindow1;
					lane-status2-text=LaneStateWindow2;
					lane-status3-text=LaneStateWindow3
				</value>
			   </parameter>
			</on-failure-action>
			<action>
			    <action-name>DisplayNextDelayedIntervention</action-name>
			    <parameter>
				<value>data-source=CMSMReceipt;
					lane-button-text=LaneButtonText;
					lane-status1-text=LaneStateWindow1;
					lane-status2-text=LaneStateWindow2;
					lane-status3-text=LaneStateWindow3
				</value>
		    	    </parameter>
			</action>
						
		</else>
                </message-rule-list>
            </message>

<!-- 402331 422721  -->

            <!--         +tar 385771         -->
            <message>
               <message-name>Exit Store Mode</message-name>
               <message-rule-list>
                   <rule>
                      <action>
                      <action-name>assign-variable</action-name>
                      <parameter>
                           <value>store_mode</value>
                      </parameter>
                      <parameter>
                           <value>0</value>
                      </parameter>
                      </action>
                  </rule>                  
              </message-rule-list>
              <!--      -tar 385771       -->
         </message>
            <message>
                <message-name>Transaction Begin</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>pop-state</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Update Buttons</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=LaneStatus;button-name=ButtonCommand2</value>
                            </parameter>
                            <parameter>
                                <value>context-name=LaneStatus;button-name=ButtonCommand3</value>
                            </parameter>
                            <!-- SR683 -->
                            <parameter>
                                <value>context-name=LaneStatus;button-name=SecurityDisableButton</value>
                            </parameter>
                            <!-- -SR683 -->
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsOutsideTransaction</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>Update Buttons In Lane Status</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=LaneStatus;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsNotImmediateInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=LaneStatus;button-name=ButtonCommand1</value>
                            </parameter>
                <parameter>
                                <value>context-name=LaneStatus;button-name=ButtonCommand2</value>
                            </parameter>
                            <parameter>
                                <value>context-name=LaneStatus;button-name=SecurityDisableButton</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=LaneStatus;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <!-- +TAR 356326 - If outside trx but inside lane in store mode, then disable Reporting button -->
                    <if expression="store_mode!=0">
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=LaneStatus;button-name=ButtonCommand2</value>
                            </parameter>
                        </action>
                    </rule>
                    </if>
                    <!-- -TAR356326 -->
                </message-rule-list>
            </message>
            <!-- TAR 290796 If inside trx, disable Close Lane button and enable Suspend Button -->
            <message>
                <message-name>Update Buttons In Lane Status</message-name>
                <message-rule-list>
                    <if expression="suspend_allowed!=0">
                        <rule>
                            <action>
                                <action-name>EnableButton</action-name>
                                <parameter>
                                    <value>context-name=LaneStatus;button-name=ButtonCommand0</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>DisableButton</action-name>
                                <parameter>
                                    <value>context-name=LaneStatus;button-name=ButtonCommand0</value>
                                </parameter>
                            </action>
                        </rule>
                    </else>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=LaneStatus;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
             <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=LaneStatus;button-name=ButtonCommand2</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Suspend transaction button pressed.  After this, RAP is waiting
                 for the COMMAND=AssistModeSizeToFullScreen from SCOTAPP -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
            <if expression="IsForceApprovalBeforeSuspend()">
                        <rule>
                            <action>
                                <action-name>CheckImmediateIntervention</action-name>
                            </action>
                            <failure-transition>Immediate Intervention</failure-transition>
                        </rule>
                        <!-- This action will select a state transition on the false leg -->
                        <rule>
                            <action>
                                <action-name>CheckDelayedIntervention</action-name>
                            </action>
                            <on-failure-action>
                                <action-name>SwitchContextDelayedIntervention</action-name>
                                <parameter>
                                    <value>DelayedInterventionsTable</value>
                                </parameter>
                            </on-failure-action>
                        </rule>
                    </if>
                    <if expression="IsInterventionTypeOutstanding(type=other-payment)">
                        <rule>
                            <action>
                                <action-name>MakeInterventionCurrent</action-name>
                                <parameter>
                                    <value>type=other-payment</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>ApproveIntervention</action-name>
                                <parameter>
                                    <value>button-command=1</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <if expression="IsNotConfirmSuspend()">
                        <rule>
                            <action>
                                <action-name>assign-variable</action-name>
                                <parameter>
                                    <value>remote_initiated_suspend</value>
                                </parameter>
                                <parameter>
                                    <value>1</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>SendSuspendRequest</action-name>
                                <parameter>
                                    <value>reason=Transaction Suspended</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>GenerateLocalButtonPress</action-name>
                                <parameter>
                                    <value>button-name=CMButton4LgFinish;
                                        context-name=local-context
                                    </value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>pop-state</action-name>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <!-- Suppress releasing the full screen mode -->
                        <rule>
                            <action>
                                <action-name>SetReleaseExclusiveAccessRequired</action-name>
                                <parameter>
                                    <value>release-needed=false</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>send-msg</action-name>
                                <parameter>
                                    <value>Confirm Suspend From Lane Status</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=ConfirmSuspendFromLaneStatus</value>
                                </parameter>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <!--SR683-->
            <message>
                <message-name>SecurityDisableButton</message-name>
                <message-rule-list>
                    <if expression="security_disabled!=1">
                    <rule>
                        <action>
                            <action-name>SendUnsolicitedData</action-name>
                            <parameter>
                                <value>unsolicited-data=DisableSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    </if>
                    <else>
                    <rule>
                        <action>
                            <action-name>SendUnsolicitedData</action-name>
                            <parameter>
                                <value>unsolicited-data=EnableSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    </else>
                    <rule>
                        <action>
                            <action-name>pop-state</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Close lane button pressed -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SendUnsolicitedData</action-name>
                            <parameter>
                                <value>unsolicited-data=RAPInitiateLaneClose</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>pop-state</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Reporting button pressed -->
            <message>
                <message-name>ButtonCommand2</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-reporting-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetReleaseExclusiveAccessRequired</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Reporting Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- GoBack button pressed -->
            <message>
                <message-name>ButtonCommand3</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>pop-state</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Transaction End</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>TransactionEnd</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearAllInterventions</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearReceipt</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       item-count-static-text=ItemText;
                                       item-count-text=ItemAmount;
                                       total-amount-static-text=TotalText;
                                       total-amount-text=TotalAmount;
                                       visible=false
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>suspend_in_progress</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>pop-state</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>pop-state</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  Immediate Intervention                                           -->
        <!-- Messages:  Initialize from FL to begin the initialization process        -->
        <!-- ======================================================================== -->
        <state>
            <state-name>Immediate Intervention</state-name>
            <message>
                <message-name>Immediate Intervention</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SwitchContextImmediateIntervention</action-name>
                            <parameter>
                                <value>ImmediateInterventionsTable</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>CheckDefaultButton</action-name>
                            <parameter>
                                <value>new_state</value>
                            </parameter>
                        </action>
                        <on-failure-action>
                            <action-name>goto-state</action-name>
                            <parameter>
                                <value>state-id=new_state</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SwitchContextRAPDataNeededIntervention</action-name>
                            <parameter>
                                <value>lookup-table-name=RAPDataNeededInterventionsTable</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  Store Mode                                                       -->
        <!-- Function:  Cashier has entered store mode.                               -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>Store Mode</state-name>
            <message>
                <message-name>Exit Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ExitStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogOutReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disconnect</message-name>
                <message-rule-list>
                    <if expression="IsCurrentRemoteConnection()">
                        <rule>
                            <action>
                                <action-name>ExitStoreMode</action-name>
                                <parameter> <!-- Data source name from xml file -->
                                    <value>data-source=CMSMReceipt;
                                        string-id=SMLogOutReceiptText</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>ReleaseExclusiveAccess</action-name>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>DisconnectCommand</action-name>
                            </action>
                            <failure-transition>Logged Off</failure-transition>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>DisconnectCommand</action-name>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>LaneStatusButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>push-state</action-name>
                        </action>
                    </rule>
                    <success-transition>LaneStatus</success-transition>
                </message-rule-list>
            </message>
            <!-- +TAR 359145 fix-->
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                <!-- TAR TAR371932 & TAR371918+
                    <rule>
                        <action>
                            <action-name>ClearImmediateIntervention</action-name>
                        </action>
                    </rule> 
                TAR371932 & TAR371918- -->
					<!-- TAR418797 -->
                    <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                    </rule>
                    
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>

                <!-- TAR371932 & TAR371918+ -->
                    <rule>
                        <action>
                            <action-name>ClearRAPDataNeededIntervention</action-name>
                        </action>
                    </rule>
                <!-- TAR371932 & TAR371918- -->                   
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                <!--  +TAR 363665     -->
                    <rule>
                             <action>
                                        <action-name>ClearRAPDataNeededIntervention</action-name>
                             </action>
                            </rule>
                <!--  -TAR 363665     -->
                    <rule>
                        <action>
                            <action-name>IsNotImmediateInterventionOutstanding</action-name>
                        </action>
                            <on-failure-action>
                                <action-name>DisplayNextImmediateIntervention</action-name>
                                <parameter>
                                    <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                    </value>
                                </parameter>
                            </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                        lane-button-text=LaneButtonText;
                                        lane-status1-text=LaneStateWindow1;
                                        lane-status2-text=LaneStateWindow2;
                                        lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- -TAR 359145 fix-->
        </state>
        <!-- ======================================================================== -->
        <!-- State:  Assist Mode                                                       -->
        <!-- Function:  Cashier has entered assist mode.                               -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>Assist Mode</state-name>
            <exit-rule-list>
                <rule>
                    <action>
                        <action-name>EnableInputEvents</action-name>
                        <parameter>
                            <value>enable=true</value>
                        </parameter>
                    </action>
                </rule>
            </exit-rule-list>
            <message>
                <message-name>Release Control For SCOTAPP</message-name>
            </message>
            <message>
                <message-name>Exit Assist Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>exit-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </on-failure-action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disconnect</message-name>
                <message-rule-list>
                    <if expression="IsCurrentRemoteConnection()">
                        <rule>
                            <action>
                                <action-name>NotifyAssistMode</action-name>
                                <parameter>
                                    <value>exit-assist-mode</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>ReleaseExclusiveAccess</action-name>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>DisconnectCommand</action-name>
                            </action>
                            <failure-transition>Logged Off</failure-transition>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>DisconnectCommand</action-name>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>exit-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disable Assist Mode Button</message-name>
            </message>
            <!-- +TAR 317268 -->
            <!-- This message received when a an intervention has been successfully
                 approved. -->
            <message>
                <message-name>Remote Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearRemoteIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- -TAR 317268 -->
        </state>
        <!-- ======================================================================== -->
        <!-- State:  Reporting Mode                                                   -->
        <!-- Function:  Cashier has requesting reporting operations.                  -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>Reporting Mode</state-name>
            <message>
                <message-name>Release Control For SCOTAPP</message-name>
            </message>
            <message>
                <message-name>Exit Assist Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>exit-reporting-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>LaneStatus</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disconnect</message-name>
                <message-rule-list>
                    <if expression="IsCurrentRemoteConnection()">
                        <rule>
                            <action>
                                <action-name>NotifyAssistMode</action-name>
                                <parameter>
                                    <value>exit-reporting-mode</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>ReleaseExclusiveAccess</action-name>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>DisconnectCommand</action-name>
                            </action>
                            <failure-transition>Logged Off</failure-transition>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>DisconnectCommand</action-name>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>exit-reporting-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveAgeCheck                                                  -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveAgeCheck</state-name>
            <entry-rule-list>
                <rule>
                    <action>
                        <action-name>DisableButton</action-name>
                        <parameter>
                            <value>button-name=NumericKeyPad4</value>
                        </parameter>
                        <parameter>
                            <value>button-name=NumericKeyPad3</value>
                        </parameter>
                        <parameter>
                            <value>context-name=all;button-name=LaneStatusButton</value>
                        </parameter>
                    </action>
                </rule>
            </entry-rule-list>
            <exit-rule-list>
                <rule>
                    <action>
                        <action-name>ClearEntryText</action-name>
                        <parameter> <!-- Name of the transaction variable -->
                            <value>transaction-variable=EchoInput</value>
                        </parameter>
                    </action>
                </rule>
            </exit-rule-list>
            <message>
                <message-name>Age Restriction Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SaveMinimumAge</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisplayAgeRestrictionInstructionText</action-name>
                            <parameter>
                                <value>instruction-text-variable=InstructionText;
                                       transaction-variable=InstructionText;
                                       context-name=ApproveAgeCheck</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveAgeCheck</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>CheckForDateNotNeededButtonOption</action-name>
                            <parameter>
                                <value>button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Clear button pressed -->
            <message>
                <message-name>NumericKeyPad3</message-name>
                <message-rule-list>
                    <!-- Returns False if the birthday is not valid -->
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Enter button pressed -->
            <message>
                <message-name>NumericKeyPad4</message-name>
                <message-rule-list>
                    <!-- Returns False if the birthday is not valid -->
                    <rule>
                        <action>
                            <action-name>ValidateBirthday</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>Invalid Birthday</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Invalid Birthday</message-name>
                <message-rule-list>
                    <!-- Returns False if the birthday is not valid -->
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>ShowMessage</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>string-id=InvalidBirthDateFormatLeadthru;
                                       transaction-variable=InstructionText</value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ShowMessage</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>string-id=HH_InvalidBirthDateFormatLeadthru;
                                       transaction-variable=InstructionText</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- DOB Not needed button pressed -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to enter assist mode -->
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- The operator wants to clear from the lane -->
            <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Age Restriction Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>number_of_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=age-restriction</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveCoupon                                                    -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveCoupon</state-name>
            <message>
                <message-name>Coupon Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveCoupon</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand2</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cApprove</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cApproveAndCollect;
                                       approval-code=verify-approved;
                                       category=ready-to-collect</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand2</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Coupon Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=coupon</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveVisualVerify                                              -->
        <!-- Function:                                                                -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveVisualVerify</state-name>
            <message>
                <message-name>Visual Validation Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveVisualVerify</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Approve -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to go back to the main menu -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Assist mode -->
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetReleaseExclusiveAccessRequired</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- The operator wants to clear from the lane -->
            <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Visual Validation Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=visual-validation</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  HopperSubstitution                                              -->
        <!-- Function:                                                                -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>HopperSubstitution</state-name>
            <message>
                <message-name>Hopper Substitution Event</message-name>
                <!-- <message-name>Visual Validation Event</message-name> -->
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>HopperSubstitution</value>
                            </parameter>
                        </action>
                    </rule>
                    <!--
                    <rule>
                        <action>
                            <action-name>DisplayAgeRestrictionInstructionText</action-name>
                            <parameter>
                                <value>instruction-text-variable=InstructionText;
                                       transaction-variable=InstructionText;
                                       context-name=ApproveAgeCheck</value>
                            </parameter>
                        </action>
                    </rule> -->
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Approve -->
             <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                             <parameter>
                                <value>button-command=cFixLater</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to go back to the main menu -->
            <!-- <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                    <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cFixLater</value>
                            </parameter>
                        </action>
                    </rule>

                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message> -->
            <!-- Operator wants to switch to Assist mode -->
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetReleaseExclusiveAccessRequired</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- The operator wants to clear from the lane -->
            <!-- <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message> -->

            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Hopper Substitution Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=hopper-substitution</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveUnknownItem                                               -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveUnknownItem</state-name>
            <message>
                <message-name>Unknown Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveUnknownItem</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Clear securtiy -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to go back to the main screen -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Assist mode -->
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cAssistMode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- The operator wants to clear from the lane -->
            <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Unknown Item Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=unknown-item</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveItemNotForSale                                            -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveItemNotForSale</state-name>
            <message>
                <message-name>Recalled Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveItemNotForSale</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Clear securtiy -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Assist mode -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- The operator wants to clear from the lane -->
            <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Recalled Item Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=recalled-item</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveQuantityRestrict                                          -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveQuantityRestrict</state-name>
            <message>
                <message-name>Quantity Restricted Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveQuantityRestrict</value>
                            </parameter>
                        </action>
                    </rule>

                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Clear securtiy -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Quantity Restricted Item Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=quantity-restricted-item</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveTimeRestrict                                              -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveTimeRestrict</state-name>
            <message>
                <message-name>Time Restricted Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveTimeRestrict</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Clear securtiy -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Time Restricted Item Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=time-restricted-item</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveHelp                                                      -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveHelp</state-name>
            <message>
                <message-name>Call For Help Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveHelp</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to cancel request -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to go back -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Assist mode -->
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cAssistMode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!--
            <message>
                <message-name>LaneStatusButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>push-state</action-name>
                        </action>
                    </rule>
                    <success-transition>LaneStatus</success-transition>
                </message-rule-list>
            </message>
-->
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Call For Help Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=call-for-help</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveHelpOutsideTrx                                            -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveHelpOutsideTrx</state-name>
            <message>
                <message-name>Call For Help Outside Transaction Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveHelpOutsideTrx</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to cancel request -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveDelaySecurity                                             -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveDelaySecurity</state-name>
            <message>
                <message-name>Security Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveDelaySecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to clear delayed security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveVoid                                                      -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveVoid</state-name>
            <message>
                <message-name>Void Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveVoid</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to approve the void -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cApproveVoid</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- + TAR 300093 operator cleared from lane give this message -->
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- - TAR 300093  -->
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Void Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=void</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
   <!--  +TAR 352409: Newly added  -->
    <!-- ======================================================================== -->
        <!-- State:  ApproveSuspensionDecline                          -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveSuspensionDecline</state-name>
             <message>
                <message-name>SuspensionDecline Event</message-name>
                <message-rule-list>
                  <rule>
                        <action>
                          <action-name>send-msg</action-name>
                           <parameter>
                             <value>message-name=Switch Context;copy-plist=true</value>
                         </parameter>
                        </action>
                   </rule>
                </message-rule-list>
           </message>
         <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveSuspensionDecline</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to approve the void -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cApprove;
                        category=suspension-decline
                      </value>
                            </parameter>
                        </action>
                    </rule>

                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- + TAR 300093 operator cleared from lane give this message -->
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- - TAR 300093  -->
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>SuspensionDecline Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=suspension-decline</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
<!--  -TAR 352409  -->
        <!-- ======================================================================== -->
        <!-- State:  ApproveOtherPayment                                              -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveOtherPayment</state-name>
            <message>
                <message-name>Other Payment Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveOtherPayment</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand2</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to suspend transaction -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <if expression="IsNotConfirmSuspend()">
                        <rule>
                            <action>
                                <action-name>assign-variable</action-name>
                                <parameter>
                                    <value>remote_initiated_suspend</value>
                                </parameter>
                                <parameter>
                                    <value>1</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>SendSuspendRequest</action-name>
                                <parameter>
                                    <value>reason=Transaction Suspended</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>send-msg</action-name>
                                <parameter>
                                    <value>Confirm Suspend From Other Payment</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=ConfirmSuspendFromOtherPayment</value>
                                </parameter>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to cancel request -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand2</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to enter assist mode -->
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cAssistMode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Other Payment Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=other-payment</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveUnDeActivatedItem                                         -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveUnDeActivatedItem</state-name>
            <message>
                <message-name>Undeactivated Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveUnDeActivatedItem</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Undeactivated Item Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=undeactivated-item</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveSignatureCapture                                          -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveSignatureCapture</state-name>
            <message>
                <message-name>Sig Cap Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveSignatureCapture</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand2</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to approve signature -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to require the customer to sign again -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cRedo</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand2</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Sig Cap Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=sig-cap</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveCollection                                                -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveCollection</state-name>
            <message>
                <message-name>Collection Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveCollection</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to approve -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>context-name=all</value>
                            </parameter>
                        </action>
                    </rule>
            <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=ready-to-collect</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  EnterPrice                                                       -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>EnterPrice</state-name>
            <exit-rule-list>
                <rule>
                    <action>
                        <action-name>ClearEntryText</action-name>
                        <parameter> <!-- Name of the transaction variable -->
                            <value>transaction-variable=EchoInput</value>
                        </parameter>
                    </action>
                </rule>
            </exit-rule-list>
            <message>
                <message-name>Price Required Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>EnterPrice</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <!-- TAR 318534 CLEAR CASH_AMOUNT_DIGIT VARIABLE-->
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>cash_amount_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>NumericKeyPad4</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <!-- TAR 288069 CLEAR CASH_AMOUNT_DIGIT VARIABLE-->
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>cash_amount_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <!-- TAR 288069 CLEAR CASH_AMOUNT_DIGIT VARIABLE-->
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- TAR 288069 CLEAR CASH_AMOUNT_DIGIT VARIABLE-->
            <message>
                <message-name>NumericKeyPad3</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>cash_amount_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>NumericKeyPad1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>increment-variable</action-name>
                            <parameter>
                                <value>cash_amount_digit</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>Append1To9</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>evaluate-expression</action-name>
                            <parameter>
                                <value>cash_amount_digit==1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>NumericKeyPad2</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>increment-variable</action-name>
                            <parameter>
                                <value>cash_amount_digit</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>Append0</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>evaluate-expression</action-name>
                            <parameter>
                                <value>cash_amount_digit==1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>NumericKeyPad5</message-name>
                <message-rule-list>
                <!--Delete action-name:increment-variable TAR 373128-->                    
                    <rule>
                        <action>
                            <action-name>AppendDot</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>evaluate-expression</action-name>
                            <parameter>
                                <value>cash_amount_digit==1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>button-name=NumericKeyPad4</value>
                            </parameter>
                            <parameter>
                                <value>button-name=NumericKeyPad3</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- TAR 288069 CLEAR CASH_AMOUNT_DIGIT VARIABLE-->
            <!-- Operator wants to switch to cancel request -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <!-- TAR 288069 CLEAR CASH_AMOUNT_DIGIT VARIABLE-->
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>cash_amount_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cReturn</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!--TAR 301020 Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>cash_amount_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- + TAR 300093 operator cleared from lane give this message -->
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- - TAR 300093  -->
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Price Required Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=price-required</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                   <rule>
                        <action>
                            <action-name>ClearEntryText</action-name>
                            <parameter> <!-- Name of the transaction variable -->
                                <value>transaction-variable=EchoInput</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>cash_amount_digit</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  CancelTransactionGeneric                                       -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>CancelTransactionGeneric</state-name>
            <message>
                <message-name>Cancel Transaction Generic Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>CancelTransactionGeneric</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Cancel Transaction Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>CancelTransactionGeneric</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Yes -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cYes</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- No -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cNo</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ConfirmSuspend                                                   -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ConfirmSuspend</state-name>
            <exit-rule-list>
                <if expression="is_handheld!=1">
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                </if>
            </exit-rule-list>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ConfirmSuspend</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Check Handheld</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Yes -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>GenerateLocalButtonPress</action-name>
                            <parameter>
                                <value>button-name=SMButton1;
                                       context-name=SmConfirmSuspendedTransaction
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>pop-state</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- No -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>GenerateLocalButtonPress</action-name>
                            <parameter>
                                <value>button-name=SMButton2;
                                       context-name=SmConfirmSuspendedTransaction
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>pop-state</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  IncorrectItemWeight                                              -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>IncorrectItemWeight</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>IncorrectItemWeight</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to approve update -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cApprove&amp;Update</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsNotImmediateInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand2</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  UnexpectedIncrease                                                -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>UnexpectedIncrease</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>UnexpectedIncrease</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!--SR085 + -->
        <!-- ======================================================================== -->
        <!-- State:  BagBoxNotValid                                                   -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>BagBoxNotValid</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>BagBoxNotValid</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!--SR085 - -->
        <!-- ======================================================================== -->
        <!-- State:  SkipBaggingBtnThreshold                                            -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>SkipBaggingBtnThreshold</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>SkipBaggingBtnThreshold</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ItemRemovedBtnThreshold                                              -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ItemRemovedBtnThreshold</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ItemRemovedBtnThreshold</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  BagBoxBtnThreshold                                               -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>BagBoxBtnThreshold</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>BagBoxBtnThreshold</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  NewWeightItem                                                   -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>NewWeightItem</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>NewWeightItem</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand2</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to approve with no update -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cApproveNoUpdate</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to approve with update -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cApprove&amp;Update</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand2</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  BagItemTimerExpires                                                 -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>BagItemTimerExpires</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>BagItemTimerExpires</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  TakeChangeTimerExpires                                           -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>TakeChangeTimerExpires</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>TakeChangeTimerExpires</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  EASNotActivated                                                  -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>EASNotActivated</state-name>
            <message>
                <message-name>Undeactivated Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>EASNotActivated</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  PickingUpItemsTimerExpires                                         -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>PickingUpItemsTimerExpires</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>PickingUpItemsTimerExpires</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
            <rule>
                        <action>
                            <action-name>IsInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsNotImmediateInterventionOutstanding</action-name>
                        </action>
                        <on-failure-action>
                            <action-name>DisplayNextImmediateIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </on-failure-action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisplayNextDelayedIntervention</action-name>
                            <parameter>
                                <value>data-source=CMSMReceipt;
                                       lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  DeviceFailure                                                   -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>DeviceFailure</state-name>
            <message>
                <message-name>Device Error Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>DeviceFailure</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Device Error Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=device-error</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  WLDBFailure                                                     -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>WLDBFailure</state-name>
            <message>
                <message-name>WLDB Failure Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>WLDBFailure</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  UnexpectedDecrease                                             -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>UnexpectedDecrease</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>UnexpectedDecrease</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  CloseLane                                                         -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>CloseLane</state-name>
            <message>
                <message-name>Close Lane Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>CloseLane</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- tar 386044 -->
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule> 
                    <rule>
                         <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                         </action>
                    </rule>
                </message-rule-list>
            </message>  
            <message>
                <message-name>LaneStatusButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>push-state</action-name>
                        </action>
                    </rule>
                    <success-transition>LaneStatus</success-transition>
                </message-rule-list>
            </message>
            <!-- tar 386044 -->
        </state>
        <!-- ======================================================================== -->
        <!-- State:  BagAreaBackup                                                      -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>BagAreaBackup</state-name>
            <message>
                <message-name>Bag Area Backup Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>BagAreaBackup</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                     <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  SafetyCoverOpen                                                  -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>SafetyCoverOpen</state-name>
            <message>
                <message-name>Safety Cover Open Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>SafetyCoverOpen</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  UnDeActivatedItemOnTABeltDetected                                  -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>UnDeActivatedItemOnTABeltDetected</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>UnDeActivatedItemOnTABeltDetected</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  VerifySignature                                                   -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>VerifySignature</state-name>
            <message>
                <message-name>Verify Signature Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>VerifySignature</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear verify signature -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cDone</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveAssistedTender                                            -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveAssistedTender</state-name>
            <message>
                <message-name>Assisted Tender Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveAssistedTender</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to enter assist mode -->
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cAssistMode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to go back -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  AssistedEndorsement                                              -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>AssistedEndorsement</state-name>
            <message>
                <message-name>Assisted Endorsement Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>AssistedEndorsement</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to enter assist mode -->
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cAssistMode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to go back -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  StartTransaction                                                  -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>StartTransaction</state-name>
            <exit-rule-list>
                <rule>
                    <action>
                        <action-name>ReleaseExclusiveAccess</action-name>
                    </action>
                </rule>
            </exit-rule-list>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>StartTransaction</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to start transaction -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cStartTransaction</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to enter assist mode -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  StartTransactionAM                                            -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>StartTransactionAM</state-name>
            <exit-rule-list>
                <rule>
                    <action>
                        <action-name>ReleaseExclusiveAccess</action-name>
                    </action>
                </rule>
            </exit-rule-list>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>StartTransactionAM</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand2</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to start transaction in assist mode -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cStartTransactionAM</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to start transaction in customer mode -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cStartTransaction</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Start transaction AM -->
            <message>
                <message-name>ButtonCommand2</message-name>
                <message-rule-list>
            <rule>
                        <action>
                            <action-name>SendUnsolicitedData</action-name>
                            <parameter>
                                <value>unsolicited-data=CancelRAPInitiateTransaction</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cAssistMode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- The customer scanned an item before the operator pressed a button.
                 This causes SCOTAPP to proceed to Scan&Bag -->
            <message>
                <message-name>Transaction Begin</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Start transaction AM -->
            <message>
                <message-name>Start Transaction Enter AM Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetReleaseExclusiveAccessRequired</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Remote Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearRemoteIntervention</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ItemsForgotten                                                   -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ItemsForgotten</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ItemsForgotten</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  InsertCouponTimerExpires                                         -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>InsertCouponTimerExpires</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>InsertCouponTimerExpires</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  CollectGiftCardRAP                                                   -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>CollectGiftCardRAP</state-name>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>CollectGiftCardRAP</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to clear security -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  HostOfflineRAP                                                     -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>HostOfflineRAP</state-name>
            <message>
                <message-name>Host Offline Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>HostOfflineRAP</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  MultiPackItem                                                     -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>MultiPackItem</state-name>
            <message>
                <message-name>Multipack Item Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>MultiPackItem</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                     <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  OutOfSyncNeedAssist                                             -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>OutOfSyncNeedAssist</state-name>
            <message>
                <message-name>Out Of Sync Assist Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>OutOfSyncNeedAssist</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  OutOfSyncStop                                                    -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>OutOfSyncStop</state-name>
            <message>
                <message-name>Out Of Sync Stop Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>OutOfSyncStop</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to Go Back to previous state -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ConfirmSuspendFromOtherPayment                                              -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ConfirmSuspendFromOtherPayment</state-name>
            <exit-rule-list>
                <rule>
                    <action>
                        <action-name>ReleaseExclusiveAccess</action-name>
                    </action>
                </rule>
            </exit-rule-list>
            <message>
                <message-name>Confirm Suspend From Other Payment</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ConfirmSuspendFromOtherPayment</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to suspend transaction -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cSuspend</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>remote_initiated_suspend</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendSuspendRequest</action-name>
                            <parameter>
                                <value>reason=Transaction Suspended</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to cancel request -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=1</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to enter assist mode -->
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cAssistMode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetReleaseExclusiveAccessRequired</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ConfirmSuspendFromLaneStatus                                                       -->
        <!-- Function:  Transaction in progress                                       -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ConfirmSuspendFromLaneStatus</state-name>
            <exit-rule-list>
                <rule>
                    <action>
                        <action-name>ReleaseExclusiveAccess</action-name>
                    </action>
                </rule>
            </exit-rule-list>
            <message>
                <message-name>Confirm Suspend From Lane Status</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ConfirmSuspendFromLaneStatus</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Confirm Suspend button pressed -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>remote_initiated_suspend</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-store-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Suspend In Progress</success-transition>
                </message-rule-list>
            </message>
            <!-- Cancel Request button pressed -->
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>pop-state</action-name>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Suspend button pressed.  This message completes the suspension. -->
            <message>
                <message-name>Assist Mode Size To FullScreen</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>GenerateLocalButtonPress</action-name>
                            <parameter>
                                <value>button-name=SMButton2;
                                       context-name=SmAuthorization
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>Switch Context</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>ConfirmSuspend</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  ApproveRestrictedNotAllowed                                      -->
        <!-- Function:  Main state for handling items                                 -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>ApproveRestrictedNotAllowed</state-name>
            <message>
                <message-name>Restricted Not Allowed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>ApproveRestrictedNotAllowed</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Clear securtiy -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                     <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- If the intervention is subsequently approved from the lane while this
                 context is being displayed, then we need to clear it and return to the
                 Main context, i.e. RapSinglexxx -->
            <message>
                <message-name>Restricted Not Allowed Approval</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearApprovedIntervention</action-name>
                            <parameter>
                                <value>type=restricted-not-allowed</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearLaneStatusWindows</action-name>
                            <parameter>
                                <value>lane-button-text=LaneButtonText;
                                       lane-status1-text=LaneStateWindow1;
                                       lane-status2-text=LaneStateWindow2;
                                       lane-status3-text=LaneStateWindow3
                                </value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
    <!-- ======================================================================== -->
        <!-- State:  StartTrainingModeTrans                                                      -->
        <!-- Function:                                                                  -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>StartTrainingModeTrans</state-name>
            <message>
                <message-name>Training Mode Transaction Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>StartTrainingModeTrans</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=AssistModeButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to approve the intervention -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cYes</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                    <!--<success-transition>Main</success-transition> -->
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand1</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cNo</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- + TAR 300093 operator cleared from lane give this message -->
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- - TAR 300093  -->
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  RAPDataNeededNotHandled                                          -->
        <!-- Function:                                                                -->
        <!-- Messages:                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>RAPDataNeededNotHandled</state-name>
            <message>
                <message-name>RAPDataNeeded Not Handled Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-data-needed-mode</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Exit Assist Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>exit-data-needed-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Exit Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>0</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <message>
                <message-name>Disconnect</message-name>
                <message-rule-list>
                    <if expression="IsCurrentRemoteConnection()">
                        <rule>
                            <action>
                                <action-name>NotifyAssistMode</action-name>
                                <parameter>
                                    <value>exit-data-needed-mode</value>
                                </parameter>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>ReleaseExclusiveAccess</action-name>
                            </action>
                        </rule>
                        <rule>
                            <action>
                                <action-name>DisconnectCommand</action-name>
                            </action>
                            <failure-transition>Logged Off</failure-transition>
                        </rule>
                        <rule>
                            <action>
                                <action-name>goto-state</action-name>
                                <parameter>
                                    <value>state-name=Main</value>
                                </parameter>
                            </action>
                        </rule>
                    </if>
                    <else>
                        <rule>
                            <action>
                                <action-name>DisconnectCommand</action-name>
                            </action>
                        </rule>
                    </else>
                </message-rule-list>
            </message>
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>exit-data-needed-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ReleaseExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
        </state>
                <!-- ======================================================================== -->
        <!-- State:  MaxCouponApproval  SR678                                                                 -->
        <!-- Function:                                                                                                -->
        <!-- Messages:                                                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>MaxCouponApproval</state-name>
            <message>
                <message-name>Max Coupon Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>MaxCouponApproval</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand2</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to approve the intervention -->
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cApproveCoupon</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                    <!--<success-transition>Main</success-transition> -->
                </message-rule-list>
            </message>
            <!-- Operator wants to go back to the main menu -->
            <message>
                <message-name>ButtonCommand2</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- Operator wants to switch to Assist mode -->
            <message>
                <message-name>AssistModeButton</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cApproveCoupon</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SendClientMachineNameEvent</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>NotifyAssistMode</action-name>
                            <parameter>
                                <value>enter-assist-mode</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>RequestFullScreenAssistMode</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>SetReleaseExclusiveAccessRequired</action-name>
                            <parameter>
                                <value>release-needed=false</value>
                            </parameter>
                        </action>
                    </rule>
                    <success-transition>Assist Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- + TAR 300093 operator cleared from lane give this message -->
            <message>
                <message-name>No RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ClearCurrentIntervention</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
            <!-- The operator wants to clear from the lane -->
            <message>
                <message-name>Enter Store Mode</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                        <action-name>assign-variable</action-name>
                            <parameter>
                                <value>store_mode</value>
                            </parameter>
                            <parameter>
                                <value>1</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnterStoreMode</action-name>
                            <parameter> <!-- Data source name from xml file -->
                                <value>data-source=CMSMReceipt;
                                       string-id=SMLogInReceiptText</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Store Mode</success-transition>
                </message-rule-list>
            </message>
            <!-- - TAR 300093  -->
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackImmediateIntervention</action-name>
                        </action>
                    </rule>
                     <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
        <!-- ======================================================================== -->
        <!-- State:  CouponWarningAtFinalization SR678                                                                    -->
        <!-- Function:  Main state for handling items                                                                   -->
        <!-- Messages:                                                                                                -->
        <!-- ======================================================================== -->
        <state>
            <state-name>CouponWarningAtFinalization</state-name>
            <message>
                <message-name>Max Coupon Finalization Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Switch Context;copy-plist=true</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>Switch Context</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>SwitchContext</action-name>
                            <parameter>
                                <value>CouponWarningAtFinalization</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>AcquireExclusiveAccess</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>DisableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=LaneStatusButton</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>EnableButton</action-name>
                            <parameter>
                                <value>context-name=all;button-name=ButtonCommand0</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <message>
                <message-name>ButtonCommand0</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>ApproveIntervention</action-name>
                            <parameter>
                                <value>button-command=cClearSecurity</value>
                            </parameter>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>send-msg</action-name>
                            <parameter>
                                <value>message-name=Transition From Intervention</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
            <!-- Possible immediate intervention detected -->
            <message>
                <message-name>RAP Data Needed Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>resend-msg</action-name>
                        </action>
                    </rule>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                     <rule>
                        <action>
                            <action-name>IsHandheld</action-name>
                        </action>
                        <failure-transition>Main</failure-transition>
                    </rule>
                    <success-transition>LaneDetail</success-transition>
                </message-rule-list>
            </message>
            <!-- One of the two alert buttons has been pressed and RAP is telling us
                 to release the exclusive access and return to RAPSinglexxx -->
            <message>
                <message-name>Release Exclusive Access Event</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>PushbackDelayedIntervention</action-name>
                        </action>
                    </rule>
                    <success-transition>Main</success-transition>
                </message-rule-list>
            </message>
        </state>
    </rules>
</state-machine>