//////////////////////////////////////////////////////////////////////////
///
/// \file BaseMHMSR.h
/// \brief interface for the CBaseMHMSR class.
///
///	@author: FastLane POSI
///
//////////////////////////////////////////////////////////////////////////
#if !defined(AFX_BASEMHMSR_H__INCLUDED_)
#define AFX_BASEMHMSR_H__INCLUDED_

#include "MsgHandler.h"

//////////////////////////////////////////////////////////////////////
///
/// CBaseMHMSR is an implementaion of CBaseMHMSR
///
///	@author: FastLane POSI
///
//////////////////////////////////////////////////////////////////////
class CBaseMHMSR  : public CMsgHandler
{
public:
	//////////////////////////////////////////////////////////////////////
	///
	/// Destructor
	///
	//////////////////////////////////////////////////////////////////////
	virtual ~CBaseMHMSR();

    // This is required functionality for all MH classes
	//////////////////////////////////////////////////////////////////////
	///
	/// ProcessMessage, Process the message posted by TB. TB analyzes the message 
	///	       and returns the state of the host application, based on the presentation 
	///        data in the message. 
	///
	///	@param CTBMsgObj *pMsg - Pointer to the TB message
	///	@return TBSTATE - the current state of the host application
	//////////////////////////////////////////////////////////////////////
    virtual TBSTATE ProcessMessage(CTBMsgObj *pMsgObj);

protected:
	//////////////////////////////////////////////////////////////////////
	///
	/// Constructor
	///
	//////////////////////////////////////////////////////////////////////
	CBaseMHMSR();

private:
	//////////////////////////////////////////////////////////////////////
	///
	/// Hide Copy Const
	///
	//////////////////////////////////////////////////////////////////////
    CBaseMHMSR(const CBaseMHMSR &);                    // hide copy const

	//////////////////////////////////////////////////////////////////////
	///
	/// Hide Assignment
	///
	//////////////////////////////////////////////////////////////////////
    CBaseMHMSR & operator =(const CBaseMHMSR &); // hide assignment
};

#endif 
