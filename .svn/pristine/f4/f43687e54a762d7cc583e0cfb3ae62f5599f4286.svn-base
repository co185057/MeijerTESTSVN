///////////////////////////////////////////////////////////////////////////
///
/// \file BaseTBConnectPos.h
/// \brief Declaration file for the CBaseTBConnectPos class
///
//////////////////////////////////////////////////////////////////////
#if !defined(AFX_BASETBCONNECTPOS_H__INCLUDED_)
#define AFX_BASETBCONNECTPOS_H__INCLUDED_

#include "transbroker.h"
#include "ATBEmulationBase.h"
#include "CustomerTBScotMsg.h"

//////////////////////////////////////////////////////////////////////
///
/// CBaseTBConnectPOS is ...
///
///	@author: FastLane POSI
///
//////////////////////////////////////////////////////////////////////
class CBaseTBConnectPOS : public AMessageSink

{
public:
		//////////////////////////////////////////////////////////////////////
		///
		/// SendSequence
		///
		///	@param CString
		/// @return bool
		//////////////////////////////////////////////////////////////////////
    BOOL SendSequence(CString &csData);

		//////////////////////////////////////////////////////////////////////
		///
		/// SendMsgToPOS
		///
		///	@param CTBMsgObj
		//////////////////////////////////////////////////////////////////////
		void SendMsgToPOS(CTBMsgObj &Msg);

		//////////////////////////////////////////////////////////////////////
		///
		/// Destructor
		///
		//////////////////////////////////////////////////////////////////////
    virtual ~CBaseTBConnectPOS();

		//////////////////////////////////////////////////////////////////////
		///
		/// CopyFileFromServer
		///
		///	@param LPCTSTR
		///	@param LPCTSTR
		///	@param bool
		///	@return TBRC
		//////////////////////////////////////////////////////////////////////    
    virtual TBRC CopyFileFromServer(LPCTSTR szFileName, 
                        LPCTSTR szDestinationFilePath, const BOOL fForce);

		//////////////////////////////////////////////////////////////////////
		///
		/// CopyFileToServer
		///
		///	@param LPCTSTR
		///	@param LPCTSTR
		/// @return TBRC
		//////////////////////////////////////////////////////////////////////
    virtual TBRC CopyFileToServer(LPCTSTR szFileName, LPCTSTR szSourceFilePath);

		//////////////////////////////////////////////////////////////////////
		///
		/// LogErrorToServer
		///
		///	@param LPCTSTR
		///	@param int
		///	@param int
		///	@param LPCTSTR
		///	@param LPCTSTR
		///	@param int
		///	@return TBRC
		//////////////////////////////////////////////////////////////////////
    virtual TBRC LogErrorToServer(LPCTSTR szErrorText, const int nSeverity,
                        const int nComponentID, LPCTSTR szComponentID,
                        LPCTSTR szModuleID, const int nModuleLineNumber);

		//////////////////////////////////////////////////////////////////////
		///
		/// InitHostAppExit
		///
		//////////////////////////////////////////////////////////////////////
    virtual TBRC InitHostAppExit(void);

		//////////////////////////////////////////////////////////////////////
		///
		/// SendMsg2Host
		///
		///	@param LPCTSTR
		///	@param int
		///	@param TBDEVICEID
		///	@param UCHAR
		///	@param long
		///	@param bool
		///	@param TBRC
		//////////////////////////////////////////////////////////////////////
    virtual TBRC SendMsg2Host(LPCTSTR szSend, const int iMsgLen,
					const TBDEVICEID nDeviceClass, const UCHAR nFunctionCode = 0,
					const long	lOptFileHandle = 0,	const bool fOriginatePipeMsg = true);
    
		//////////////////////////////////////////////////////////////////////
		///
		/// Shutdown
		///
		//////////////////////////////////////////////////////////////////////
    virtual void Shutdown();

		//////////////////////////////////////////////////////////////////////
		///
		/// InitEmulation
		///
		//////////////////////////////////////////////////////////////////////
		virtual bool InitEmulation();

		//////////////////////////////////////////////////////////////////////
		///
		/// ReceiveMsg
		///
		///	@param CTBMsgObj
		//////////////////////////////////////////////////////////////////////
		virtual void ReceiveMsg(CTBMsgObj * pMsg);

		//////////////////////////////////////////////////////////////////////
		///
		/// SendInput. 
		///	Must be implemented in CCustomerTBConnectPOS
		///
		///	@param LPARAM
		///	@return bool
		//////////////////////////////////////////////////////////////////////
 		virtual BOOL SendInput( LPARAM lparam);

		//////////////////////////////////////////////////////////////////////
		///
		/// SendData
		///	Must be implemented in CCustomerTBConnectPOS
		///
		///	@param LPARAM
		///	@return BOOL
		//////////////////////////////////////////////////////////////////////
    virtual BOOL SendData( LPARAM lparam); 

protected:
    //////////////////////////////////////////////////////////////////////
		///
		/// Constructor, shouldn't be called outside this class.
		///
		//////////////////////////////////////////////////////////////////////
    CBaseTBConnectPOS(); 
   
private:
		//////////////////////////////////////////////////////////////////////
		///
		/// Hide Copy Const
		///
		//////////////////////////////////////////////////////////////////////
    CBaseTBConnectPOS(const CBaseTBConnectPOS &);                  // hide copy const

		//////////////////////////////////////////////////////////////////////
		///
		/// Hide Assignment
		///
		//////////////////////////////////////////////////////////////////////
    CBaseTBConnectPOS& operator=(const CBaseTBConnectPOS &); // hide assignment
    
protected:
    ATBEmulationBase* m_pEmulationObj;	///< Pointer to Emulation Object
    CCustomerTBScotMsg* m_pTBScotMsg;		///< Pointer to TBScotMsg
};

#endif
