<state-machine library="SecureCamManager" version="2.2">
  <!-- ============================================================================ -->
  <!-- Section:  Library definitions                                                -->
  <!-- ============================================================================ -->
  <library-list>
    <library name="SecureCamManager">
      <comment>This library contains the actions for the SecureCam Manager</comment>
    </library>
    <library name="SecurityManager">
      <comment>This library contains the actions for the Security Manager</comment>
    </library>
    <library name="PipeServerConnect">
      <comment>This library contains the actions for the PipeServerConnect</comment>
    </library>
  </library-list>
  <!-- ============================================================================ -->
  <!-- Section:  Timer definitions                                                  -->
  <!-- ============================================================================ -->
  <timer-list>
    <timer name="db_lookup_timer" />
    <timer name="forgiveness_timer" />
    <timer name="delayed_timer" />
    <timer name="quiet_mode_timer" />
    <timer name="picking_up_items_timer" />
    <timer name="unexpected_decrease_timer" />
    <timer name="scale_initialization_timer" />
    <timer name="hb_frequency_timer" />
  </timer-list>
  <!-- ============================================================================ -->
  <!-- Section:  Constant definitions                                               -->
  <!-- ============================================================================ -->
  <constant-list>
    <constant name="default_state_timeout" value="2000" />
  </constant-list>
  <!-- ============================================================================ -->
  <!-- Section:  Variable definitions                                               -->
  <!-- ============================================================================ -->
  <variable-list>
    <variable name="RemoteAssistMode" initial-value="0" /> <!-- sscoadk-5295 -->
    <variable name="item_removed_flag" initial-value="0" />
    <variable name="application_state_parm_string" initial-value="" />
    <variable name="SMM_WLDB_wt_entry_max" initial-value="0" />
    <variable name="SMM_WLDB_wt_entry_counter" initial-value="0" />
    <variable name="attract_quiet_mode_timeout_value" initial-value="0" />
    <variable name="scale_initialization_timeout_value" initial-value="0" />
    <variable name="attract_quiet_mode_violation" initial-value="0" />
    <variable name="security_control_command_type" initial-value="0" />
    <variable name="picking_up_items_flag" initial-value="0" />
    <variable name="scan_and_bag_flag" initial-value="0" />
    <variable name="bag_and_eas_flag" initial-value="0" />
    <variable name="in_security_analysis" initial-value="0" />
    <variable name="not_finalize_flag" initial-value="1" />
    <variable name="not_complete_flag" initial-value="1" />
    <variable name="finalize_flag" initial-value="0" />
    <variable name="picking_up_items_timeout_value" initial-value="0" />
    <variable name="unexpected_decrease_timeout_value" initial-value="0" />
    <variable name="forgiveness_timeout_value" initial-value="0" />
    <variable name="delayed_timeout_value" initial-value="0" />
    <variable name="X" initial-value="0" max-value="" min-value="0" />
    <variable name="A" initial-value="0" max-value="" min-value="0" />
    <variable name="ItemCounter" initial-value="0" max-value="" min-value="0">
      <comment>This counter keeps track of the number of items</comment>
    </variable>
    <variable name="unexpected_decrease_flag" initial-value="0" />
    <variable name="balance_paid_flag" initial-value="0" />
    <variable name="last_state_thank_you_flag" initial-value="1" />
    <variable name="go_to_last_state" initial-value="0" />
    <variable name="tare_only_flag" initial-value="0" />
    <variable name="done_button_pressed_flag" initial-value="0" />
    <variable name="enter_AssistMode" initial-value="0" />
    <variable name="enter_AssistMode_From_Idle" initial-value="0" />
    <variable name="multi_pick_flag" initial-value="0" />
    <variable name="skip_bagging_in_multi_pick_flag" initial-value="0" />
    <!-- +SSCOP-1146 -->
    <variable name="IsFromClearDelayedIntervention" initial-value="0" />
    <!-- -SSCOP-1146 -->
    <variable name="security_disable_transaction_void" initial-value="0" />
    <variable name="security_disable_item_void" initial-value="0" />
    <variable name="receive_exit_disable_security_msg" initial-value="0" />
    <variable name="is_securecam_enable" initial-value="0" />
    <variable name="attendant_mode_state_flag" initial-value="0" />
    <variable name="security_disable" initial-value="0" />
    <variable name="stoplift_status" initial-value="0" />
    <variable name="hb_frequency" initial-value="0" />
    <variable name="hb_tolerance_counter" initial-value="0" />
    <variable name="hb_tolerance" initial-value="0" /> 
    <variable name="is_stoplift_analyzing" initial-value="0" />
    <!-- SSCOADK-1143 -->
    <variable name="Leaving_Item_Voided" initial-value="0" />
    <variable name="coreapp_at_thankyou_state" initial-value="0" />
  </variable-list>
  <!-- ============================================================================ -->
  <!-- Section:  State definitions                                                  -->
  <!-- ============================================================================ -->
  <state-list>
    <state-definition name="Uninitialized">
      <comment>This is the initial state entered</comment>
      <initial />
    </state-definition>
    <state-definition name="InitPhase1" />
    <state-definition name="InitPhase2" />
    <state-definition name="InitPhase3" />
    <state-definition name="InitPhase4" />
    <state-definition name="Idle">
      <comment>Nothing going on</comment>
    </state-definition>
    <state-definition name="Start">
      <comment>This state occurs after the user has scanned the first item or pressed Start</comment>
    </state-definition>
    <state-definition name="Wait DB" />
    <state-definition name="Wait Scale" />
    <state-definition name="Wait Scale - Skip Bagging Pressed" />
    <state-definition name="Wait Scale - New Item Entry Threshold" />
    <state-definition name="Item Entry" />
    <state-definition name="Invalid Bag">
      <comment>This state occurs if after CheckCustomerBag the bag is invalid</comment>
    </state-definition>
    <!-- 439866+ -->
    <state-definition name="Invalid Bag - wait scale">
      <comment>This state occurs if after CheckCustomerBag the bag is invalid when a weight is expected</comment>
    </state-definition>
    <!-- 439866- -->    
    <state-definition name="Put Bag On Scale">
      <comment>This state corresponds to SMPutBagOnScale state in app</comment>
    </state-definition>
    <state-definition name="Check Bag">
      <comment>This state is reached if there is weight on bag scale at Attract and "I brought my own bag" bttn pressed</comment>
    </state-definition>
    <state-definition name="Complete" />
    <state-definition name="Finalize" />
    <state-definition name="Security Maintenance" />
    <state-definition name="Security Maintenance - Add Weight" />
    <state-definition name="Security Maintenance - Add Tolerance" />
    <state-definition name="Security Maintenance - Add Substitution Check" />
    <state-definition name="Security Maintenance - Add Wt Required" />
    <state-definition name="Security Maintenance - Add Zero Wt" />
    <state-definition name="Security Maintenance - Delete All Wts" />
    <state-definition name="Security Maintenance - Delete Tolerance" />
    <state-definition name="Item Voided" />
    <state-definition name="Transaction Voided" />
    <state-definition name="Assist Mode" />
    <state-definition name="Assist Mode - Item In Progress" />
    <state-definition name="Picking Up Items" />
    <state-definition name="Wait Scale - Allow Late Bagging"/>
    <state-definition name="Disable Security Mode" />
    <state-definition name="Disable Security Mode - Item In Progress" />
    <state-definition name="Disable Security Mode - Idle" />
    <state-definition name="Disable Security Mode - Start" />
  </state-list>
  <lookup-table name="ApplicationControlCommandTable" key-type="string" value-type="string">
    <lookup-entry key="skip-bagging" value="Skip Bagging" />
    <lookup-entry key="item-removed" value="Item Removed" />
    <lookup-entry key="item-removed-pressed" value="Item Removed Pressed" />
    <lookup-entry key="bag-box" value="Bag Box Button Pressed" />
    <lookup-entry key="done-bttn" value="Done Button Pressed" />
    <lookup-entry key="customer-has-bag" value="Customer Has Bag" />
    <lookup-entry key="approve-wt" value="RAP Approved Wt" />
    <lookup-entry key="set-app-state" value="Set Application State" />
    <lookup-entry key="hold" value="Hold Weight Command" />
    <lookup-entry key="resume" value="Resume Weight Command" />
    <lookup-entry key="item-expired" value="Item Expired" />
    <lookup-entry key="start-picklist" value="Start Picklist" />
    <lookup-entry key="clear-allow-late-bagging" value="Clear Allow Late Bagging" />
    <lookup-entry key="enter-disable-security-mode" value="Enter Disable Security Mode" />
    <lookup-entry key="exit-disable-security-mode" value="Exit Disable Security Mode" />
    <lookup-entry key="exit-multipick-inside-disable-security-mode" value="Exit MultiPick Inside Disable Security Mode" />
    <lookup-entry key="enter-attendant-mode" value="Enter Attendant Mode" />
    <lookup-entry key="exit-attendant-mode" value="Exit Attendant Mode" />
    <lookup-entry key="enable-securecam" value="Enable SecureCam" />
    <lookup-entry key="disable-securecam" value="Disable SecureCam" />
    <lookup-entry key="bad-trust-level" value="SL Bad Trust Level" />
    <lookup-entry key="update-wldb" value="SL Update WLDB" />
    <lookup-entry key="send-loyalty-stoplift" value="Send Loyalty StopLift" />
    <lookup-entry key="reenter-assistmode-from-attract" value="ReEnter Assist Mode From Attract" />
  </lookup-table>
  <!-- ============================================================================ -->
  <!-- Section:  Message definitions                                                -->
  <!-- ============================================================================ -->
  <msg-list>
    <msg-definition name="Item Sold" value="0x00000001">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="DB Response" value="0x10000001">
      <comment>Received from DB (internal)</comment>
    </msg-definition>
    <msg-definition name="Matched Wt" value="0x10000002">
      <comment>Received from Scale (internal)</comment>
    </msg-definition>
    <msg-definition name="Unmatched Wt" value="0x10000003">
      <comment>Received from Scale (internal)</comment>
    </msg-definition>
    <msg-definition name="BackToLGW" value="0x10000004">
      <comment>Received from Scale (internal)</comment>
    </msg-definition>
    <msg-definition name="Dept Details" value="0x10000005">
      <comment>Received from DBMgr (internal)</comment>
    </msg-definition>
    <msg-definition name="Unmatched Increase" value="0x10000006">
      <comment>Received from Scale (internal)</comment>
    </msg-definition>
    <msg-definition name="Unmatched Decrease" value="0x10000007">
      <comment>Received from Scale (internal)</comment>
    </msg-definition>
    <msg-definition name="Device Failure" value="0x10000008">
      <comment>Received from Scale (internal)</comment>
    </msg-definition>
    <msg-definition name="Unmatched Decrease - Check Back To LGW" value="0x10000009">
      <comment>Generated to handle check for BackToLGW in Pickingup items state (internal)</comment>
    </msg-definition>
    <msg-definition name="Item Void" value="0x00000003">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction Voided" value="0x00000004">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Item Removed" value="0x00000005">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Skip Bagging" value="0x00000006">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Initialize" value="0x00000007">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Item Details" value="0x00000008">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Application Control" value="0x00000009">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Security Control" value="0x0000000a">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction Control" value="0x0000000b">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction Begin" value="0x0000000c">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction End" value="0x0000000d">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction Void" value="0x0000000e">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Override Exception" value="0x0000000f">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Clear Exception" value="0x00000010">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Ignore Exception" value="0x00000011">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Throw Exception" value="0x00000012">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Item Validated" value="0x00000013">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Abort" value="0x00000014">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Set Application State" value="0x00000015">
      <comment>Received from FastLane - Application Control - Set Application State</comment>
    </msg-definition>
    <msg-definition name="Clear Exception with Update" value="0x00000016">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Security Maintenance" value="0x00000017">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Query" value="0x00000018">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Update" value="0x00000019">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Begin" value="0x0000001a">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM End" value="0x0000001b">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Update - Add Weight" value="0x0000001c">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Update - Add Zero" value="0x0000001d">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Update - Add Tolerance" value="0x0000001e">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Update - Delete Tolerance" value="0x0000001f">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Update - Delete All Weights" value="0x00000020">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Update - Add Substitution Check" value="0x00000021">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Update - Add Wt Required" value="0x00000021">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="RAP Approved Wt" value="0x00000022">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Clear All Exceptions" value="0x00000023">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Bag Box Button Pressed" value="0x00000024">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Hold Weight Command" value="0x00000025">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Resume Weight Command" value="0x00000026">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Reload Options" value="0x00000027">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction Finalize" value="0x00000028">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction Continue" value="0x00000029">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Item Expired" value="0x0000002a">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Clear Exception - All Wt Changes" value="0x0000002b">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Cancel" value="0x0000002c">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Clear Delayed Exception" value="0x0000002d">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Attract Quiet Mode Violation" value="0x0000002e">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction Expired" value="0x0000002f">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Item Not Sellable" value="0x00000030">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Clear Exception if Item Match" value="0x00000031">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Item Void Begin" value="0x00000032">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Item Void End" value="0x00000033">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction Void Begin" value="0x00000034">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction Void End" value="0x00000035">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Void Item Late Correction" value="0x00000036">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Zero Wt" value="0x00000037">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Enter Assist Mode" value="0x00000038">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Exit Assist Mode" value="0x00000039">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Enter Scan And Bag" value="0x0000003a">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Transaction Balance Paid" value="0x0000003b">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Done Button Pressed" value="0x0000003c">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Customer Has Bag" value="0x0000003d">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Item Removed Pressed" value="0x0000003e">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Start Picklist" value="0x0000003f">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="SMM Working Status" value="0x20000001">
      <comment>Received from DBClientMgr</comment>
    </msg-definition>
    <msg-definition name="SMM WLDB Weight" value="0x20000002">
      <comment>Received from DBClientMgr</comment>
    </msg-definition>
    <msg-definition name="DB Mgr Status" value="0x20000003">
      <comment>Received from DBClientMgr</comment>
    </msg-definition>
    <msg-definition name="SMM Tolerance" value="0x20000004">
      <comment>Received from DBClientMgr</comment>
    </msg-definition>
    <msg-definition name="SMM WLDB Update Complete" value="0x20000005">
      <comment>Received from DBClientMgr</comment>
    </msg-definition>
    <msg-definition name="Skip Bagging2" value="0x20000006">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Set LGW From Authorization" value="0x20000007">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Matched Transition" value="0x20000008">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Exit Item Voided" value="0x20000009">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Check Customer Bag" value="0x2000000a">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Set LGW From AssistMode" value="0x2000000b">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Clear All Exceptions No Change State" value="0x2000000c">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="InValid BagBox in Mismatch" value="0x2000000d">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Go To Assist Mode" value="0x2000000e">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Skip Bagging3" value="0x2000000f">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Item Validated Not Send Item OK" value="0x20000011">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Only Clear Unexpected Increase Or Validate Item" value="0x20000012">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Check Mismatch Or New Item Entry Threshold Violation" value="0x20000013">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Late Bagging Not Allowed" value="0x20000014">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Clear Allow Late Bagging" value="0x20000015">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Enter Picking Up Items" value="0x20000016">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Enter Disable Security Mode" value="0x20000017">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Exit Disable Security Mode" value="0x20000018">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Exit MultiPick Inside Disable Security Mode" value="0x20000019">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <!-- TAR459768+ -->
    <msg-definition name="Check For Exceptions For Decrease" value="0x2000001a">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <!-- TAR459768- -->
        <msg-definition name="Send Loyalty StopLift" value="0x3000000a">
      <comment>Received from FastLane</comment>
    </msg-definition>    
      <msg-definition name="Received Good Weight from SL" value="0x3000000b">
      <comment>Received from Security Manager</comment>
    </msg-definition>
    <msg-definition name="Clear Exception - Data Needed" value="0x3000000c">
      <comment>Received from FastLane</comment>
     </msg-definition>
    <msg-definition name="Send PipeServerConnect Message" value="0x3000000d">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <msg-definition name="Received Response From PipeServer" value="0x3000000e">
      <comment>Received from PipeServerConnect</comment>
    </msg-definition>
    <msg-definition name="Enter Attendant Mode" value="0x3000000f">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Exit Attendant Mode" value="0x30000011">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Enable SecureCam" value="0x30000012">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Disable SecureCam" value="0x30000013">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <msg-definition name="Send Exception to StopLift" value="0x30000014">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <!-- SSCOADK-1143+ -->
    <msg-definition name="Item Void End 2" value="0x2000001c">
      <comment>Received from SecurityManager</comment>
    </msg-definition>
    <!-- SSCOADK-1143- -->
    <msg-definition name="ReEnter Assist Mode From Attract" value="0x2000001d">
      <comment>Received from FastLane</comment>
    </msg-definition>
    <!-- SSCOADK-6847 -->
    <msg-definition name="Enter UnexpectedDecrease" value="0x2000001e">
      <comment>Received from FastLane</comment>
    </msg-definition>    
	</msg-list>
  <!-- ============================================================================ -->
  <!-- Section:  Action definitions                                                 -->
  <!-- ============================================================================ -->
  <action-list>
    <action name="PicklistAssistSend" />
    <action name="SendDBRequest" />
    <action name="SendWtRequestToScale" />
    <action name="CheckTransactionComplete" />
    <action name="SendSecurityViolations" />
    <action name="SendSecurityViolation" />
    <action name="SCResetTransaction" />
    <action name="CheckScaleNotEmpty" />
    <action name="SendItemOK" />
    <action name="GlobalLog" />
    <action name="LoadConfiguration" />
    <action name="LoadWTInfo" />
    <action name="LoadDBMgrClient" />
    <action name="LoadSmartScale" />
    <action name="InitializationComplete" />
    <action name="AddItemToTransaction" />
    <action name="ItemNotScannedAdjustment" />
    <action name="SendLastChanceLookupDBRequest" />
    <action name="CheckItemDetails" />
    <action name="CheckDeptDetails" />
    <action name="HandleMatchedWt" />
    <action name="HandleUnmatchedWt" />
    <action name="HandleUnmatchedIncrease" />
    <action name="HandleUnmatchedDecrease" />
    <action name="TransactionControlCommand" />
    <action name="ApplicationControlCommand" />
    <action name="SecurityControlCommand" />
    <action name="StartTransaction" />
    <action name="CheckDBResponse" />
    <action name="CheckForExceptions" />
    <action name="ClearOutstandingExceptions" />
    <action name="SetLastGoodWeight" />
    <action name="SetBeginningTransLGW" />
    <action name="SetCurrentTotalWeight" />
    <action name="SetHoldWeight" />
    <action name="ClearHoldWeight" />
    <action name="SCOverrideExceptionCommand" />
    <action name="OverrideExceptionCommand" />
    <action name="ClearException" />
    <action name="ClearLastException" />
    <action name="IgnoreException" />
    <action name="ThrowException" />
    <action name="IsSCExceptionForgiven" />
    <action name="IsExceptionForgiven" />
    <action name="IsExceptionDelayed" />
    <action name="IsCurrentExceptionDelayed" />
    <action name="IsCurrentTransactionNotHasDeptDetails" />
    <action name="ClearForgivenException" />
    <action name="ClearDelayedException" />
    <action name="UnloadDBMgrClient" />
    <action name="UnloadSmartScale" />
    <action name="UnloadWTInfo" />
    <action name="UnloadConfiguration" />
    <action name="ValidateItem" />
    <action name="SetApplicationStateCommand" />
    <action name="ReadScaleForZero" />
    <action name="ClearAllExceptions" />
    <action name="UpdateWLDB" />
    <action name="HandleRAPApprovedWt" />
    <action name="SecurityMaintenanceCommand" />
    <action name="SMMBegin" />
    <action name="SMMUpdateAddWeight" />
    <action name="SMMUpdateAddZero" />
    <action name="SMMUpdateAddTolerance" />
    <action name="SMMUpdateDeleteTolerance" />
    <action name="SMMUpdateDeleteAllWts" />
    <action name="SMMCheckToleranceValue" />
    <action name="SendSMMUpdateAddToleranceResponse" />
    <action name="SendSMMServerFailure" />
    <action name="SetSMMCurrentWeight" />
    <action name="SMMEnd" />
    <action name="CheckSkipBagging" />
    <action name="CheckItemRemoved" />
    <action name="CheckBagBox" />
    <action name="CheckItemRemovedAutoAdvance" />
    <action name="VoidTransaction" />
    <action name="SMMQuery" />
    <action name="SMMDBResponse" />
    <action name="SaveSMMToleranceData" />
    <action name="GetSMMWLDBData" />
    <action name="SendSMMQueryResponse" />
    <action name="HandleSMMUnmatchedIncrease" />
    <action name="SMMAddWtToWLDB" />
    <action name="BuildSMMQueryResponse" />
    <action name="SMMUpdateAddSubstitutionCheck" />
    <action name="SMMUpdateAddWtRequired" />
    <action name="UpdateWLDBZeroWt" />
    <action name="IsItemRemovedAutoAdvanceEnabled" />
    <action name="IsRemoveItemViolationAutoAdvanceEnabled" />
    <action name="ClearUnexpectedDecrease" />
    <action name="CheckForgiveUnexpectedDecreaseDuringTendering" />
    <action name="CheckQuietModeAttract" />
    <action name="CheckRememberVirtualZero" />
    <action name="CheckQuietModeViolation" />
    <action name="SetInAttract" />
    <action name="GetCommand" />
    <action name="SetCommand" />
    <action name="SerializeCommand" />
    <action name="AbortCommand" />
    <action name="ReloadConfiguration" />
    <action name="ResetWeight" />
    <action name="HandleUnmatchedIncreaseLateCorrection" />
    <action name="HandleSmartScaleFailure" />
    <action name="HandleDBMgrClientFailure" />
    <action name="QueryDeviceStatusCommand" />
    <action name="SetForgivenessTimeout" />
    <action name="SetDelayedTimeout" />
    <action name="SetPickingUpItemsTimeout" />
    <action name="SetUnexpectedDecreaseTimeout" />
    <action name="SetScaleInitializationTimeout" />
    <action name="UpdateWLDBForgivenMismatch" />
    <action name="UpdateWLDBDelayedNewItemThreshold" />
    <action name="SaveInitializeParameters" />
    <action name="SendObservedWeight" />
    <action name="SendSMMObservedWeight" />
    <action name="ResetSmartScaleTimers" />
    <action name="ResetSMMObservedWeight" />
    <action name="SendTransactionComplete" />
    <action name="SaveLastRemovedWeight" />
    <action name="HandleShuffle" />
    <action name="IsTransactionEmpty" />
    <action name="RemoveItemFromTransaction" />
    <action name="IsExceptionInterventionReq" />
    <action name="ResetAtItemScan" />
    <action name="ClearLastWtException" />
    <action name="VoidItemCommand" />
    <action name="ClearAllWtExceptions" />
    <action name="DisableLateCorrection" />
    <action name="IsNoWtInterventionOutstanding" />
    <action name="SendItemPickFinish" />
    <action name="SetDeltaWt" />
    <action name="ItemHasApproveWt" />
    <action name="send-msg" />
    <action name="pop-state" />
    <action name="push-state" />
    <action name="increment-variable" />
    <action name="decrement-variable" />
    <action name="assign-variable" />
    <action name="start-timer" />
    <action name="stop-timer" />
    <action name="wait-timer" />
    <action name="resend-msg" />
    <action name="evaluate-expression" />
    <action name="set-return-code" />
    <action name="ClearAllMismatchesThisItem" />
    <action name="CheckCustomerBag" />
    <action name="IsDeltaWeightZero" />
    <action name="SendGoToScanAndBag" />
    <action name="LoadTrxPolicyMgr"/>
    <action name="UnloadTrxPolicyMgr"/>
    <action name="SendAttractIdleTimeToTransactionPolicy"/>
    <action name="SCUpdateTransactionID"/>
    <action name="CheckZeroWtReceived"/>
    <action name="CheckBagBoxCount" />
    <action name="AllowLateBaggingForThisItem"/>
    <action name="SendLateBaggingNotAllowed"/>
    <action name="SendTransactionEndMessage"/>
    <action name="IsZeroWeightItem" />
    <!-- SSCOP-988 -->
    <action name="SendPipeServerConnect"/>
    <action name="SendPipeServerMessage"/>
    <action name="SCHandlePipeServerResponse"/>
    <action name="SendSCLoyalty" />
    <action name="SendSC" />
    <action name="SCUpdateWLDB" />
    <action name="SendSCConfiguration" />
    <action name="LoadSCDefaultConfiguration" />
    <action name="IsSCStub"/>
    <action name="CheckSecureCamStatus"/>
    <action name="SCCheckCustomerBag"/>
	  <action name="SendSCSkipBagging" />
    <action name="IsConnectionName"/>
    <action name="SendSCStatusToApp"/>
    <action name="IsMessageName"/>
    <action name="SetScaleEvent"/>
  </action-list>
  <!-- ============================================================================ -->
  <!-- Section:  Application State definitions                                      -->
  <!-- Note:  This section must follow the <state-list>, <action-list>,             -->
  <!--        <message-list>, and <variable-list> sections.  DO NOT MOVE.           -->
  <!-- ============================================================================ -->
  <application-state-list>
    <!-- sscoadk-5295+ -->
    <application-state>
     <comment>This is SmRemoteAssistMode state</comment>
     <state-name>SmRemoteAssistMode</state-name>
     <hold-weight />
     <push-hold-weight />
     <entry-rule-list>
       <rule action-name="assign-variable" parameter="variable-name=RemoteAssistMode;expression=1" /> 
     </entry-rule-list>
    </application-state>
    <!-- sscoadk-5295- -->
    <application-state>
      <comment>This is VoidApproval and VoidTransApproval states</comment>
      <state-name>ApproveVoidedItem</state-name>
      <do-not-hold-weight />
    </application-state>
    <application-state>
      <comment>This is Attract state</comment>
      <state-name>Attract</state-name>
      <do-not-hold-weight />
      <entry-rule-list>
        <!-- 442691 -->
        <rule action-name="CheckRememberVirtualZero" parameter="virtual-zero" />
        <rule action-name="evaluate-expression" parameter="last_state_thank_you_flag!=0" />
        <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
        <rule action-name="SetCurrentTotalWeight" parameter="set-beginningtransctw-attract" />
        <rule action-name="SetInAttract" parameter="true" />
        <rule action-name="assign-variable" parameter="variable-name=balance_paid_flag;expression=0" />
        <rule action-name="assign-variable" parameter="variable-name=multi_pick_flag;expression=0" />
        <!--SSCOP-59-->
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="SetInAttract" parameter="false" />
        <rule action-name="assign-variable" parameter="variable-name=last_state_thank_you_flag;expression=0" />
      </exit-rule-list>
    </application-state>
    <application-state>
      <comment>This is PutBagOnScale state</comment>
      <state-name>PutBagOnScale</state-name>
      <do-not-hold-weight />
    </application-state>
    <application-state>
      <comment>This is SecBagBoxNotValid state</comment>
      <state-name>SecBagBoxNotValid</state-name>
      <do-not-hold-weight />
    </application-state>
    <application-state>
      <comment>This is EnterQuantity state</comment>
      <state-name>EnterQuantity</state-name>
    </application-state>
    <application-state>
      <comment>This is EnterWeight state</comment>
      <state-name>EnterWeight</state-name>
    </application-state>
    <application-state>
      <comment>This is SmRAPDataNeeded state</comment>
      <state-name>RAPDataNeeded</state-name>
	  <hold-weight/>
	  <push-hold-weight/>
    </application-state>
    <application-state>
      <comment>This is BagAndEAS state</comment>
      <state-name>BagAndEAS</state-name>
<!-- sscoadk-1692      <do-not-hold-weight />  do this at exit of wait DB state -->
      <entry-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=bag_and_eas_flag;expression=1" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=bag_and_eas_flag;expression=0" />
      </exit-rule-list>
    </application-state>
	<!-- Start CRD 280415 -->
    <application-state>
      <state-name>CustomMessage</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
	<!-- End CRD 280415 -->	
    <application-state>
      <state-name>SecurityAnalysis</state-name>
      <entry-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=in_security_analysis;expression=1" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=in_security_analysis;expression=0" />
      </exit-rule-list>
    </application-state>
    <application-state>
      <comment>This is EnterPin state</comment>
      <state-name>EnterPin</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
    <application-state>
      <comment>This is Finalize state</comment>
      <state-name>Finalize</state-name>
    </application-state>
    <application-state>
      <comment>This is GetFoodStamp state</comment>
      <state-name>GetFoodStamp</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
    <application-state>
      <state-name>CardProcessing</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
    <application-state>
      <comment>This is PickingUpItems state</comment>
      <state-name>PickingUpItems</state-name>
      <entry-rule-list>
        <rule action-name="send-msg" parameter="message-name=Enter Picking Up Items" />
        <if expression="!IsItemRemovedAutoAdvanceEnabled()">
          <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
        </if>
      </entry-rule-list>
    </application-state>
    <!-- +SSCOP-3556 -->
    <application-state>
      <comment>This is EnterCoupons state</comment>
      <state-name>EnterCoupons</state-name>
      <entry-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=scan_and_bag_flag;expression=1" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=scan_and_bag_flag;expression=0" />
      </exit-rule-list>
    </application-state>
    <!-- -SSCOP-3556 -->
    <application-state>
      <comment>This is ScanAndBag state</comment>
      <state-name>ScanAndBag</state-name>
      <entry-rule-list>
        <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
        <rule action-name="assign-variable" parameter="variable-name=scan_and_bag_flag;expression=1" />
        <!-- +SSCOP-1146 -->
        <rule action-name="assign-variable" parameter="variable-name=IsFromClearDelayedIntervention;expression=0" />
        <!-- -SSCOP-1146 -->
        <rule action-name="ClearHoldWeight" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=scan_and_bag_flag;expression=0" />
      </exit-rule-list>
    </application-state>
    <application-state>
      <comment>This is the Finish state</comment>
      <state-name>Finish</state-name>
      <do-not-hold-weight />
    </application-state>
    <application-state>
      <state-name>SecNewItemEntry</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
    <application-state>
      <state-name>SecUnexpectedIncrease</state-name>
      <do-not-hold-weight />
    </application-state>
    <application-state>
      <comment>This is SecUnexpectedDecrease state</comment>
      <state-name>SecUnexpectedDecrease</state-name>
      <entry-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=unexpected_decrease_flag;expression=1" />
        <rule action-name="send-msg" parameter="message-name=Enter UnexpectedDecrease" />
<!-- sscoadk-6847 
        <rule action-name="IsRemoveItemViolationAutoAdvanceEnabled" />
        <rule action-name="SetUnexpectedDecreaseTimeout" parameter="unexpected_decrease_timeout_value" />
        <rule action-name="start-timer" parameter="timer-name=unexpected_decrease_timer;duration=unexpected_decrease_timeout_value" />
        <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
 -->
	</entry-rule-list>
      <exit-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=unexpected_decrease_flag;expression=0" />
        <rule action-name="stop-timer" parameter="timer-name=unexpected_decrease_timer;duration=unexpected_decrease_timeout_value" />
      </exit-rule-list>
    </application-state>
    <application-state>
      <comment>This is SmmAddWeight state</comment>
      <state-name>SmmAddWeight</state-name>
      <push-hold-weight />
      <do-not-hold-weight />
    </application-state>
    <application-state>
      <comment>This is SmAssistMode state</comment>
      <state-name>SmAssistMode</state-name>
      <hold-weight />
      <push-hold-weight />
      <entry-rule-list>
        <rule action-name="send-msg" parameter="message-name=Enter Assist Mode" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="send-msg" parameter="message-name=Exit Assist Mode" />
        <if expression="(RemoteAssistMode==0)">  <!-- sscoadk-5295 -->
        <rule action-name="ResetSmartScaleTimers" parameter="all" />
        <if expression="!CheckForExceptions()">
          <rule action-name="send-msg" parameter="message-name=Set LGW From AssistMode" />
           </if>
        </if>
        <else>
           <rule action-name="assign-variable" parameter="variable-name=RemoteAssistMode;expression=0" />  <!-- sscoadk-5295 -->
        </else>
      </exit-rule-list>
    </application-state>
    <application-state>
      <comment>This is SmAuthorization state</comment>
      <state-name>SmAuthorization</state-name>
      <hold-weight />
      <exit-rule-list>
        <rule action-name="ClearHoldWeight" />
        <if expression="!CheckForExceptions()">
          <rule action-name="send-msg" parameter="message-name=Set LGW From Authorization" />
        </if>
      </exit-rule-list>
    </application-state>
    <application-state>
      <state-name>Suspend</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
    <application-state>
      <state-name>SystemMessage</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
    <application-state>
      <state-name>SystemMessageOpPass</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
    <application-state>
      <state-name>WaitForRemoteAssistance</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
    <application-state>
      <state-name>SmDataEntry</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
    <application-state>
      <comment>This is LaneClosed state</comment>
      <state-name>LaneClosed</state-name>
      <hold-weight />
      <push-hold-weight />
    </application-state>
    <application-state>
      <comment>This is the Thank You state</comment>
      <state-name>ThankYou</state-name>
      <exit-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=last_state_thank_you_flag;expression=1" />
      </exit-rule-list>
    </application-state>
    <application-state>
      <comment>This is MultiPick state</comment>
      <state-name>MultiPicklist</state-name>
      <entry-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=multi_pick_flag;expression=1" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=multi_pick_flag;expression=0" />
        <rule action-name="SendItemPickFinish" />
      </exit-rule-list>
    </application-state>
    <application-state>
      <comment>This is Degraded ContinueTrans state</comment>
      <state-name>DegradedContinueTrans</state-name>      
      <hold-weight />
    </application-state>
  </application-state-list>
  <!-- ============================================================================ -->
  <!-- Section:  Rules for state transitions                                        -->
  <!-- ============================================================================ -->
  <rules>
    <!-- ======================================================================== -->
    <!-- State:  Global                                                           -->
    <!-- Messages:  Initialize from FL to begin the initialization process        -->
    <!-- ======================================================================== -->
    <state>
      <global />
      <entry-rule-list>
        <rule action-name="GlobalLog" parameter="Global Entry" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="GlobalLog" parameter="Global Exit" />
      </exit-rule-list>
      <!--
            <message>
                <message-name>*</message-name>
                <message-rule-list>
                    <rule>
                        <action>
                            <action-name>GlobalLog</action-name>
                            <parameter>
                                <value>Message Received</value>
                            </parameter>
                            <parameter>
                                <value>Parameter 2 Value</value>
                            </parameter>
                        </action>
                    </rule>
                </message-rule-list>
            </message>
-->
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Any state                                                        -->
    <!-- Messages:  Initialize from FL to begin the initialization process        -->
    <!--                                                                          -->
    <!--                                                                          -->
    <!--      Message:                  Purpose:                                  -->
    <!--      _____________________     _________________________________________ -->
    <!--      Initialize                Begin the initialization process          -->
    <!--      Security Maintenance      Start SMM mode                            -->
    <!--      Transaction Control       FL requests an action regarding the xact  -->
    <!--      Transaction End           TC Internal - end the xact                -->
    <!--      Transaction Void          TC Internal - void the xact               -->
    <!--      Application Control       FL requests an action regarding the app   -->
    <!--      Set Application State     AC Internal - change the app state        -->
    <!--      Hold Weight Command       AC Internal - hold weight notifications   -->
    <!--      Resume Weight Command     AC Internal - resume weight notifications -->
    <!--      Security Control          FL requests an action affecting Sec.      -->
    <!--      Unmatched Wt              Scale reports an umatched weight          -->
    <!--      Unmatched Increase        Internal - increase detected on scale     -->
    <!--      Unmatched Decrease        Internal - decrease detected on scale     -->
    <!--      BackToLGW                 Scale reports a Back to LGW condition     -->
    <!--      Override Exception        FL requests an override of an exception   -->
    <!--      Clear Exception           Internal - clear the exception            -->
    <!--      Clear Exception With Update                                         -->
    <!--                                Internal - clear the exception; update    -->
    <!--                                WLDB                                      -->
    <!--      Device Failure            Internal - Smart Scale has reported error -->
    <!--      DB Mgr Status             Internal - DB Mgr Client has error        -->
    <!-- ======================================================================== -->
    <state name="*">
<!-- SSCOADK-6847+ -->
      <message name="Enter UnexpectedDecrease">
        <message-rule-list>
          <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
        </message-rule-list>
      </message>
<!-- SSCOADK-6847- -->
<!-- sscoadk-1692+ -->
      <message name="DB Response">
        <message-rule-list>
        </message-rule-list>
      </message>
<!-- sscoadk-1692- -->
      <message name="Enter Picking Up Items">
        <message-rule-list>
          <transition state-name="Picking Up Items" />
        </message-rule-list>
      </message>
      <message name="Start Picklist">
        <message-rule-list>
          <rule action-name="PicklistAssistSend" parameter="type=5" />
        </message-rule-list>
      </message>
      <message name="Clear All Exceptions No Change State">
        <message-rule-list>
          <rule action-name="ClearDelayedException" parameter="flags-clear-remove-exception" />
        </message-rule-list>
      </message>
      <message name="Exit Item Voided">
        <message-rule-list>
          <rule action-name="IsNoWtInterventionOutstanding" /> <!--SSCOP-817--> <!--SSCOP-2545 move this here--> 
          <rule action-name="SetLastGoodWeight" parameter="set-lgw-no-expectation" />
        </message-rule-list>
      </message>
      <message name="Exit Assist Mode">
        <message-rule-list>
          <rule action-name="ClearHoldWeight" />
          <!-- TAR 445215-->
            <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode;expression=0" />
            <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode_From_Idle;expression=0" />
        </message-rule-list>
      </message>
      <message name="Security Maintenance">
        <message-rule-list>
          <rule action-name="SecurityMaintenanceCommand" />
        </message-rule-list>
      </message>
      <message name="Transaction Control">
        <message-rule-list>
          <rule action-name="TransactionControlCommand" />
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag" />
      <message name="Transaction End">
        <message-rule-list>
          <if expression="!CheckTransactionComplete()">
<!--SSCOP-702
                                 <rule action-name="SendSecurityViolations" />
-->
            <transition state-name="Complete" />
          </if>
          <else>
            <rule action-name="SendTransactionEndMessage" />
            <rule action-name="PicklistAssistSend" parameter="type=6" />
            <transition state-name="Complete" />
          </else>
        </message-rule-list>
      </message>
      <message name="Transaction Void Begin">
        <message-rule-list>
          <transition state-name="Transaction Voided" />
        </message-rule-list>
      </message>
      <message name="Application Control">
        <message-rule-list>
          <rule action-name="ApplicationControlCommand" parameter="lookup-table-name=ApplicationControlCommandTable" />
        </message-rule-list>
      </message>
      <message name="Set Application State">
        <message-rule-list>
         <rule action-name="assign-variable" parameter="variable-name=application_state_parm_string;expression=$(parameter[set-app-state])" />
         <if expression="find($(application_state_parm_string), 'begin,ThankYou') != -1">                      
             <rule action-name="assign-variable" parameter="variable-name=coreapp_at_thankyou_state;expression=1" />
         </if>
         <if expression="find($(application_state_parm_string), 'end,ThankYou') != -1">                        
            <rule action-name="assign-variable" parameter="variable-name=coreapp_at_thankyou_state;expression=0" />
         </if>
         <if expression="find($(application_state_parm_string), 'AssistMode') != -1">
            <rule action-name="SetApplicationStateCommand" />
         </if>
         <else>
            <if expression="(enter_AssistMode==0)">
                <rule action-name="SetApplicationStateCommand" />
            </if>
         </else>
        </message-rule-list>
      </message>
      <message name="Hold Weight Command">
        <message-rule-list>
          <rule action-name="SetHoldWeight" />
        </message-rule-list>
      </message>
      <message name="ReEnter Assist Mode From Attract">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode_From_Idle;expression=1" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Resume Weight Command">
        <message-rule-list>
          <rule action-name="ClearHoldWeight" />
        </message-rule-list>
      </message>
      <message name="Security Control">
        <message-rule-list>
          <rule action-name="SecurityControlCommand" parameter="security_control_command_type" />
          <if expression="!(security_control_command_type!=1)">
            <rule action-name="GetCommand" />
          </if>
          <else>
            <if expression="!(security_control_command_type!=2)">
              <rule action-name="SetCommand" />
            </if>
            <else>
              <if expression="!(security_control_command_type!=3)">
                <rule action-name="ReloadConfiguration" />
              </if>
              <else>
                <if expression="!(security_control_command_type!=4)">
                  <rule action-name="SerializeCommand" />
                </if>
                <else>
                  <if expression="!(security_control_command_type!=5)">
                    <rule action-name="AbortCommand" />
                  </if>
                  <else>
                    <if expression="!(security_control_command_type!=6)">
                      <rule action-name="QueryDeviceStatusCommand" />
                    </if>
                  </else>
                </else>
              </else>
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Item Void">
        <message-rule-list>
          <rule action-name="VoidItemCommand" />
        </message-rule-list>
      </message>
      <message name="Unmatched Wt">
        <message-rule-list>
          <rule action-name="HandleUnmatchedWt" />
        </message-rule-list>
      </message>
      <message name="Transaction Balance Paid">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=balance_paid_flag;expression=1" />
        </message-rule-list>
      </message>
      <message name="Unmatched Increase">
        <message-rule-list>
          <rule action-name="HandleUnmatchedIncrease" parameter="scan_and_bag_flag;bag_and_eas_flag" />
          <rule action-name="SetLastGoodWeight" />
          <if expression="picking_up_items_flag!=0">
            <rule action-name="send-msg" parameter="message-name=BackToLGW" />
          </if>
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease">
        <message-rule-list>
          <if expression="!HandleUnmatchedIncreaseLateCorrection()">
            <rule action-name="SetLastGoodWeight" />
          </if>
          <else>
            <rule action-name="HandleUnmatchedDecrease" parameter="scan_and_bag_flag;bag_and_eas_flag" />
            <rule action-name="SetLastGoodWeight" />
          </else>
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease - Check Back To LGW">
        <message-rule-list>
          <if expression="picking_up_items_flag!=0">
            <rule action-name="send-msg" parameter="message-name=BackToLGW" />
          </if>
        </message-rule-list>
      </message>
      <message name="BackToLGW">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=item_removed_flag;expression=1" />
          <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
          <rule action-name="stop-timer" parameter="timer-name=forgiveness_timer" />
          <rule action-name="stop-timer" parameter="timer-name=unexpected_decrease_timer" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="ResetWeight" />
          <if expression="!IsCurrentExceptionDelayed()">
            <rule action-name="ClearLastWtException" />
          </if>
          <else>
            <rule action-name="CheckForExceptions" />
            <rule action-name="ClearAllWtExceptions" />
            <rule action-name="SetLastGoodWeight" parameter="set-lgw-no-expectation" />
          </else>
          <if expression="IsZeroWeightItem()"><!--SSCOP-4164-->
                <rule action-name="SendWtRequestToScale"/>
          </if>
        </message-rule-list>
      </message>
      <message name="Override Exception">
        <message-rule-list>
          <rule action-name="SCOverrideExceptionCommand" />
          <rule action-name="OverrideExceptionCommand" />
        </message-rule-list>
      </message>
      <message name="Clear Exception">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ClearException" />
        </message-rule-list>
      </message>
      <message name="Clear Exception - All Wt Changes">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ClearException" />
        </message-rule-list>
      </message>
      <message name="Clear All Exceptions">
        <message-rule-list>
          <rule action-name="ClearAllExceptions" />
          <rule action-name="SetLastGoodWeight" /> <!--SSCOADK-1143 -->
        </message-rule-list>
      </message>
      <message name="Throw Exception">
        <message-rule-list>
          <rule action-name="SetForgivenessTimeout" parameter="forgiveness_timeout_value" />
          <if expression="IsSCExceptionForgiven(is_stoplift_analyzing)">
            <rule action-name="send-msg" parameter="message-name=Send Exception to StopLift" />
          </if>
          <else>
              <if expression="!IsExceptionForgiven(finalize_flag;bag_and_eas_flag;scan_and_bag_flag)"> 
                <rule action-name="start-timer" parameter="timer-name=forgiveness_timer;duration=forgiveness_timeout_value" />
              </if>
              <else>
                <rule action-name="IsExceptionInterventionReq" parameter="scan_and_bag_flag;bag_and_eas_flag" />
                <rule action-name="SetDelayedTimeout" parameter="delayed_timeout_value" />
                <if expression="!IsExceptionDelayed(not_finalize_flag;not_complete_flag)">
                  <rule action-name="start-timer" parameter="timer-name=delayed_timer;duration=delayed_timeout_value" />
                </if>
                <else>
                  <rule action-name="ThrowException" />
                </else>
              </else>
          </else>
        </message-rule-list>
      </message>
      <message name="forgiveness_timer_timeout">
        <message-rule-list>
            <rule action-name="ClearForgivenException" />
            <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="Send Exception to StopLift">
        <message-rule-list>
            <rule action-name="SendSC" parameter="unexpected-increase" />
            <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="delayed_timer_timeout">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Clear Delayed Exception" />
        </message-rule-list>
      </message>
      <message name="Clear Delayed Exception">
        <message-rule-list>
          <rule action-name="ClearDelayedException" parameter="flags-clear-report-only" />
          <rule action-name="SetLastGoodWeight" />
          <!-- +SSCOP-1146 -->
          <rule action-name="assign-variable" parameter="variable-name=IsFromClearDelayedIntervention;expression=1" />
          <!-- -SSCOP-1146 -->
        </message-rule-list>
      </message>
      <message name="Item Validated">
        <message-rule-list>
          <!-- 429692+ -->
          <rule action-name="ResetSmartScaleTimers" />
          <!-- 429692- -->
          <rule action-name="SetLastGoodWeight" />
          <if expression="!(skip_bagging_in_multi_pick_flag==0)">
            <rule action-name="send-msg" parameter="message-name=Item Validated Not Send Item OK" />
          </if>
          <else>
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="SendItemOK" parameter="send-item-ok" />
            <rule action-name="increment-variable" parameter="variable-name=ItemCounter" />
          </else>
		   <!-- 449894+ -->
            <rule action-name="stop-timer" parameter="timer-name=unexpected_decrease_timer;duration=unexpected_decrease_timeout_value" />    
          <!-- 449894- -->
        </message-rule-list>
      </message>
      <message name="Item Validated Not Send Item OK">
        <message-rule-list>
          <rule action-name="CheckSkipBagging" parameter="not-check-skip-bagging-threshold" />
          <rule action-name="SendItemOK" parameter="not-send-item-ok" />
          <rule action-name="assign-variable" parameter="variable-name=skip_bagging_in_multi_pick_flag;expression=0" />
          <rule action-name="increment-variable" parameter="variable-name=ItemCounter" />
        </message-rule-list>
      </message>
      <message name="Abort">
        <message-rule-list>
          <rule action-name="stop-timer" parameter="timer-name=quiet_mode_timer" />
          <rule action-name="stop-timer" parameter="timer-name=scale_initialization_timer" />  
          <!--rule action-name="SendSLDisconnect"/-->
          <rule action-name="UnloadDBMgrClient" />
          <rule action-name="UnloadSmartScale" />
          <rule action-name="UnloadWTInfo" />
          <rule action-name="UnloadTrxPolicyMgr"/>
          <rule action-name="UnloadConfiguration" />
          <transition state-name="Uninitialized" />
        </message-rule-list>
      </message>
      <message name="Item Removed">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=item_removed_flag;expression=1" />
          <rule action-name="SendGoToScanAndBag" />
        </message-rule-list>
      </message>
       <message name="Item Removed Pressed">
        <message-rule-list>
          <if expression="IsItemRemovedAutoAdvanceEnabled()">
            <rule action-name="stop-timer" parameter="timer-name=picking_up_items_timer" />
          </if>
          <rule action-name="CheckItemRemoved" />
        </message-rule-list>
       </message>
      <message name="picking_up_items_timer_timeout">
        <message-rule-list>
          <rule action-name="CheckItemRemovedAutoAdvance" parameter="variable-name=item_removed_flag" />
          <rule action-name="assign-variable" parameter="variable-name=item_removed_flag;expression=0" />
        </message-rule-list>
      </message>
      <message name="unexpected_decrease_timer_timeout">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="assign-variable" parameter="variable-name=unexpected_decrease_flag;expression=0" />
          <rule action-name="ClearAllWtExceptions" />
          <rule action-name="CheckSkipBagging" parameter="check-skip-bagging-threshold">
            <failure-transition>Wait Scale - Skip Bagging Pressed</failure-transition>
          </rule>
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Device Failure">
        <message-rule-list>
          <rule action-name="HandleSmartScaleFailure" />
        </message-rule-list>
      </message>
      <message name="DB Mgr Status">
        <message-rule-list>
          <rule action-name="HandleSmartScaleFailure" />
        </message-rule-list>
      </message>
      <message name="scale_initialization_timer_timeout" />
      <message name="Enter Assist Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode;expression=1" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
	  <!-- SSCOADK-3054+ --> 
      <message name="Set LGW From Authorization">
        <message-rule-list>
          <rule action-name="ResetWeight"/> 
           <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-storemode" /> 
           <rule action-name="ResetSmartScaleTimers" parameter="all" />
          <rule action-name="SetLastGoodWeight" parameter="set-lgw" /> 
          <!--SSCOP-512-->
          <if expression="(attract_quiet_mode_violation!=0)"> 
              <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_timeout_value;expression=0" /> 
              <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" /> 
              <rule action-name="SendTransactionComplete" /> 
              <rule action-name="SetDeltaWt" /> 
           </if>
          <!--SSCOP-512-->
        </message-rule-list>
      </message>
	  <!-- SSCOADK-3054- --> 
      <message name="Set LGW From AssistMode">
        <message-rule-list>
          <!--SSCOP-1184-->
          <rule action-name="SetLastGoodWeight" parameter="set-lgw" />
          <rule action-name="ResetSmartScaleTimers" parameter="all" />
          <rule action-name="SetLastGoodWeight" parameter="set-lgw" />
          <!--SSCOP-1184-->
        </message-rule-list>
      </message>
      <message name="Matched Transition">
        <message-rule-list>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="push-state" />
          <rule action-name="assign-variable" parameter="variable-name=item_removed_flag;expression=1" />
          <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
          <rule action-name="stop-timer" parameter="timer-name=forgiveness_timer" />
          <rule action-name="stop-timer" parameter="timer-name=unexpected_decrease_timer" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
			<rule action-name="SendSCStatusToApp" parameter="offline" />
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <rule action-name="ResetWeight" />
          <if expression="CheckForExceptions()">
            <rule action-name="ClearAllWtExceptions" />
          </if>
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
        <message name="Send Loyalty StopLift">
        <message-rule-list>
            <if expression="CheckSecureCamStatus()">
                <rule action-name="SendSCLoyalty" />
            </if>
        </message-rule-list>
      </message>
      <message name="Received Good Weight from SL">
       <message-rule-list>
          <rule action-name="SCUpdateWLDB"/>
       </message-rule-list>
       </message>
      <message name="Clear Exception - Data Needed">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ClearException" />
        </message-rule-list>
      </message>
      <message name="Send PipeServerConnect Message">
        <message-rule-list>
            <rule action-name="SendPipeServerMessage"/>
        </message-rule-list>
      </message>
      <message name="Received Response From PipeServer">
        <message-rule-list>
            <rule action-name="IsConnectionName" parameter="SecureCam" />
            <if expression="IsMessageName(heartBeat)"> 
                <if expression="(stoplift_status==0)">
                    <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                </if>
            </if>
            <rule action-name="SCHandlePipeServerResponse" />
            <if expression="IsMessageName(heartBeat)"> 
                <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
                <rule action-name="assign-variable" parameter="variable-name=hb_tolerance_counter;expression=0" />
                <if expression="(stoplift_status==1)">
                    <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
                </if>
            </if>
        </message-rule-list>
      </message>      
      <message name="Enter Attendant Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=attendant_mode_state_flag;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
        </message-rule-list>
      </message>
      <message name="Exit Attendant Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=attendant_mode_state_flag;expression=0" />
          <if expression="(is_securecam_enable==1)">
            <if expression="(security_disable==0)">
              <if expression="(stoplift_status==0)">
                <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
              </if>
            </if>
          </if>
        </message-rule-list>
      </message>
        <message name="Enable SecureCam">
            <message-rule-list>
                <if expression="IsSCStub()">
                    <rule action-name="assign-variable" parameter="variable-name=is_securecam_enable;expression=0" />
                </if>
                <else>
                    <rule action-name="assign-variable" parameter="variable-name=is_securecam_enable;expression=1" />
                    <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                    <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
                </else>
            </message-rule-list>
        </message>
        <message name="Disable SecureCam">
            <message-rule-list>
				<if expression="(is_securecam_enable==1)">
					<rule action-name="assign-variable" parameter="variable-name=is_securecam_enable;expression=0" />
					<if expression="(stoplift_status==1)">
						<rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
                        <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
                        <rule action-name="SendSCStatusToApp" parameter="offline" />						
						<rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
					</if>
				</if>
            </message-rule-list>
        </message>
        <message name="hb_frequency_timer_timeout">
            <message-rule-list>
                <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
                <rule action-name="increment-variable" parameter="variable-name=hb_tolerance_counter" />
                <if expression="(hb_tolerance_counter>hb_tolerance)">
                    <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
                    <rule action-name="SendSCStatusToApp" parameter="offline" />
                    <rule action-name="assign-variable" parameter="variable-name=hb_tolerance_counter;expression=0" />
                </if>
                <else>
                    <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
                </else>
            </message-rule-list>
        </message>
      </state>
    <!-- ======================================================================== -->
    <!-- State:  Uninitialized                                                      -->
    <!-- Messages:  Initialize from FL to begin the initialization process        -->
    <!-- ======================================================================== -->
    <state name="Uninitialized">
      <message name="Initialize">
        <message-rule-list>
          <rule action-name="SaveInitializeParameters" />
          <rule action-name="LoadConfiguration" />
          <rule action-name="LoadTrxPolicyMgr"/>
          <rule action-name="LoadSCDefaultConfiguration" parameter="hb_frequency;hb_tolerance"/>
          <rule action-name="SendPipeServerConnect" parameter="connection-name=SecureCam" />
          <transition state-name="InitPhase1" />
        </message-rule-list>
      </message>
      <message name="Unmatched Increase"/>
      <message name="Unmatched Wt"/>
      <message name="BackToLGW"/>
      <message name="Unmatched Decrease"/>
      <message name="Item Expired"/>
      <message name="Item Sold"/>
      <message name="unexpected_decrease_timer_timeout"/>
      <message name="picking_up_items_timer_timeout"/>
      <message name="Item Removed"/>
      <message name="forgiveness_timer_timeout"/>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  InitPhase1                                                       -->
    <!-- Messages:  Initialize from FL to begin the initialization process        -->
    <!-- ======================================================================== -->
    <state name="InitPhase1">
      <message name="Initialize">
        <message-rule-list>
          <rule action-name="LoadWTInfo" />
          <transition state-name="InitPhase2" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  InitPhase2                                                       -->
    <!-- Messages:  Initialize from FL to begin the initialization process        -->
    <!-- ======================================================================== -->
    <state name="InitPhase2">
      <message name="Initialize">
        <message-rule-list>
          <rule action-name="LoadSmartScale" />
          <rule action-name="SetScaleInitializationTimeout" parameter="scale_initialization_timeout_value" />
          <rule action-name="start-timer" parameter="timer-name=scale_initialization_timer;duration=scale_initialization_timeout_value" />
          <transition state-name="InitPhase3" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  InitPhase3                                                       -->
    <!-- Messages:  Initialize from FL to begin the initialization process        -->
    <!-- ======================================================================== -->
    <state name="InitPhase3">
      <message name="Initialize">
        <message-rule-list>
          <rule action-name="LoadDBMgrClient" />
          <transition state-name="InitPhase4" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  InitPhase4                                                       -->
    <!-- Messages:  Initialize from FL to begin the initialization process        -->
    <!-- ======================================================================== -->
    <state name="InitPhase4">
      <message name="Initialize">
        <message-rule-list>
          <rule action-name="wait-timer" parameter="timer-name=scale_initialization_timer" />
          <rule action-name="InitializationComplete" />
          <transition state-name="Idle" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Idle                                                             -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Idle">
      <entry-rule-list>
        <if expression="CheckSecureCamStatus()">
            <rule action-name="SendSC" parameter="state-data" />
        </if>
        <rule action-name="ClearHoldWeight" />
      </entry-rule-list>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1">
          </rule>          
          <if expression="!CheckBagBox()">
            <rule action-name="push-state">
            </rule>
            <transition state-name="Invalid Bag">
            </transition>
          </if>
        </message-rule-list>
      </message>
      <message name="Item Details">
        <message-rule-list>
               <rule action-name="CheckItemDetails" />
           <rule action-name="PicklistAssistSend" parameter="type=5" />
            </message-rule-list>
      </message>
      <message name="Customer Has Bag">
        <message-rule-list>
          <rule action-name="IsDeltaWeightZero">
            <failure-transition>Check Bag</failure-transition>
          </rule>
          <transition state-name="Put Bag On Scale" />
        </message-rule-list>
      </message>
      <message name="BackToLGW">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=item_removed_flag;expression=1" />
          <rule action-name="stop-timer" parameter="timer-name=quiet_mode_timer" />
          <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
          <rule action-name="stop-timer" parameter="timer-name=forgiveness_timer" />
          <rule action-name="stop-timer" parameter="timer-name=unexpected_decrease_timer" />
          <!-- 431082+ -->
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <!-- 431082- -->
          <rule action-name="ResetWeight" />
          <!-- 430657+ -->
          <rule action-name="SendTransactionComplete" />
          <!-- 430657- -->          
          <rule action-name="CheckForExceptions" />
          <rule action-name="ClearAllWtExceptions" />
          <rule action-name="SetLastGoodWeight" parameter="set-lgw-no-expectation" />
        </message-rule-list>
      </message>
      <message name="Unmatched Increase">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="CheckRememberVirtualZero" parameter="virtual-zero-increase" />
          <if expression="!CheckQuietModeAttract(variable-name=attract_quiet_mode_timeout_value)">
            <rule action-name="HandleUnmatchedIncrease" />
          </if>
          <else>
            <rule action-name="SendObservedWeight" />
            <rule action-name="stop-timer" parameter="timer-name=quiet_mode_timer" />
            <rule action-name="start-timer" parameter="timer-name=quiet_mode_timer;duration=attract_quiet_mode_timeout_value" />
            <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=1" />
          </else>
        </message-rule-list>
      </message>
      <message name="Clear Exception">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
          <rule action-name="ClearException" />
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease">
        <message-rule-list>
          <rule action-name="CheckRememberVirtualZero" parameter="virtual-zero-decrease" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
          <rule action-name="SendTransactionComplete" />
          <rule action-name="CheckForExceptions" />
          <rule action-name="ClearAllWtExceptions" />
        </message-rule-list>
      </message>
      <message name="quiet_mode_timer_timeout">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_timeout_value;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
          <rule action-name="SendTransactionComplete" />
        </message-rule-list>
      </message>
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="SendAttractIdleTimeToTransactionPolicy"/>
          <rule action-name="SCUpdateTransactionID"/>
          <if expression="(is_securecam_enable==1)">
              <if expression="(stoplift_status==0)" >
                  <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                  <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
              </if>
          </if>
          <if expression="!CheckQuietModeAttract(variable-name=attract_quiet_mode_timeout_value)">
            <rule action-name="StartTransaction" />
            <transition state-name="Start" />
          </if>
          <else>
            <rule action-name="CheckQuietModeViolation" />
            <rule action-name="stop-timer" parameter="timer-name=quiet_mode_timer" />
            <rule action-name="StartTransaction" />
            <rule action-name="PicklistAssistSend" parameter="type=6" />
            <transition state-name="Start" />
          </else>
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag">
        <message-rule-list>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="SMM Begin">
        <message-rule-list>
          <rule action-name="push-state" />
          <if expression="!SMMBegin()">
            <rule action-name="SendSMMServerFailure" />
            <transition state-name="Security Maintenance" />
          </if>
          <else>
            <transition state-name="Security Maintenance" />
          </else>
        </message-rule-list>
      </message>
      <message name="Transaction Finalize">
        <message-rule-list>
          <transition state-name="Finalize" />
        </message-rule-list>
      </message>
      <message name="Transaction End" >
    <message-rule-list>
           <rule action-name="SendTransactionEndMessage" />
		   <transition state-name="Complete" />  <!-- SSCOI-46799, SSCOI-45872- -->
    </message-rule-list>
       </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=item_removed_flag;expression=1" />
          <rule action-name="stop-timer" parameter="timer-name=quiet_mode_timer" />
          <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
          <rule action-name="stop-timer" parameter="timer-name=forgiveness_timer" />
          <rule action-name="stop-timer" parameter="timer-name=unexpected_decrease_timer" />
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <if expression="!(attract_quiet_mode_violation==0)">
            <rule action-name="SendTransactionComplete" />
            <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
            <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
          </if>
          <else>
            <rule action-name="ResetWeight" />
            <if expression="CheckForExceptions()">
                <rule action-name="ClearAllWtExceptions" />
            </if>
          </else>
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Disable Security Mode - Idle" />
        </message-rule-list>
      </message>
      <message name="Enter Assist Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode_From_Idle;expression=1" />
          <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode;expression=1" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Exit Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=0" />
          <if expression="(is_securecam_enable==1)">
            <if expression="(attendant_mode_state_flag==0)">
              <if expression="(stoplift_status==0)">
                <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
              </if>
            </if>
          </if>
        </message-rule-list>
      </message>
      <message name="Set LGW From Authorization">
      <message-rule-list>
          <rule action-name="ResetWeight"/>
          <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-storemode" />
          <rule action-name="ResetSmartScaleTimers" parameter="all" />
          <rule action-name="SetLastGoodWeight" parameter="set-lgw" />
          <if expression="(attract_quiet_mode_violation!=0)">
              <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_timeout_value;expression=0" />
              <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
              <rule action-name="SendTransactionComplete" />
              <rule action-name="SetDeltaWt" />
          </if>
        </message-rule-list>
     </message>	  
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Start                                                            -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Start">
      <entry-rule-list>
        <if expression="CheckSecureCamStatus()">
            <rule action-name="SendSC" parameter="state-data" />
        </if>
        <rule action-name="assign-variable" parameter="variable-name=is_stoplift_analyzing;expression=1" />
      </entry-rule-list>
<!-- sscoadk-5553+ -->
      <message name="Clear Exception - All Wt Changes">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="ClearException" />
        </message-rule-list>
      </message>
<!-- sscoadk-5553- -->
      <message name="Item Details">
        <message-rule-list>
            <rule action-name="send-msg" parameter="message-name=Item Not Sellable" />
        </message-rule-list>
      </message>
      <message name="Item Not Sellable">
        <message-rule-list>
          <rule action-name="ClearHoldWeight" />
          <rule action-name="SendGoToScanAndBag" />
        </message-rule-list>
      </message>
      <message name="Customer Has Bag">
        <message-rule-list>
          <rule action-name="IsDeltaWeightZero">
            <failure-transition>Check Bag</failure-transition>
          </rule>
          <transition state-name="Put Bag On Scale" />
        </message-rule-list>
      </message>
      <message name="Item Sold">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=skip_bagging_in_multi_pick_flag;expression=0" />
          <rule action-name="ResetAtItemScan" />
          <rule action-name="SetHoldWeight" />
          <if expression="!AddItemToTransaction()">
            <rule action-name="ItemNotScannedAdjustment" />
            <transition state-name="Wait DB" />
          </if>
          <else>
            <if expression="CheckForExceptions()">
              <rule action-name="ClearLastWtException" />
              <rule action-name="SetScaleEvent" />
            </if>            
            <rule action-name="SendDBRequest" />
            <rule action-name="start-timer" parameter="timer-name=db_lookup_timer;duration=1000" />
            <transition state-name="Wait DB" />
          </else>
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="CheckBagBox">
            <failure-transition>Invalid Bag</failure-transition>
          </rule>
        </message-rule-list>
      </message>
      <message name="SMM Begin">
        <message-rule-list>
          <rule action-name="push-state" />
          <if expression="!SMMBegin()">
            <rule action-name="SendSMMServerFailure" />
            <transition state-name="Security Maintenance" />
          </if>
          <else>
            <transition state-name="Security Maintenance" />
          </else>
        </message-rule-list>
      </message>
      <message name="Clear Exception">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" parameter="last-exception-weight" /> <!-- TAR 450833 - Added parameter -->
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="ClearException" />
        </message-rule-list>
      </message>
      <message name="Clear All Exceptions">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" parameter="last-exception-weight" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="ClearAllExceptions" />
        </message-rule-list>
      </message>
      <message name="delayed_timer_timeout">
        <message-rule-list>
          <if expression="!(attract_quiet_mode_violation!=0)">
            <rule action-name="send-msg" parameter="message-name=Clear Delayed Exception" />
          </if>
          <else>
            <rule action-name="SetLastGoodWeight" />
            <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
            <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
            <rule action-name="send-msg" parameter="message-name=Clear Delayed Exception" />
          </else>
        </message-rule-list>
      </message>
      <message name="Transaction Finalize">
        <message-rule-list>
          <transition state-name="Finalize" />
        </message-rule-list>
      </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="push-state" />
          <rule action-name="assign-variable" parameter="variable-name=item_removed_flag;expression=1" />
          <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
          <rule action-name="stop-timer" parameter="timer-name=forgiveness_timer" />
          <rule action-name="stop-timer" parameter="timer-name=unexpected_decrease_timer" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <rule action-name="ResetWeight" />
          <if expression="CheckForExceptions()">
            <rule action-name="ClearAllWtExceptions" />
          </if>
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Disable Security Mode - Start" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Wait DB                                                          -->
    <!-- Function:  Database request has been sent and we are awaiting a response -->
    <!-- Messages:                                                                -->
    <!--      DB Response                                                         -->
    <!-- ======================================================================== -->
    <state name="Wait DB">
<!-- sscoadk-1692+ -->
      <exit-rule-list>
        <rule action-name="stop-timer" parameter="timer-name=db_lookup_timer" />
        <rule action-name="ClearHoldWeight" />
      </exit-rule-list>
<!-- sscoadk-1692- -->
<!-- sscoadk-5663+ -->
      <message name="Item Expired">
       <message-rule-list>
         <rule action-name="SetLastGoodWeight" />
         <rule action-name="ValidateItem" />
         <transition state-name="Item Entry" />
       </message-rule-list>
      </message>
<!-- sscoadk-5663- -->

<!-- SSCOADK-5372+ -->
      <message name="unexpected_decrease_timer_timeout">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=unexpected_decrease_flag;expression=0" />
        </message-rule-list>
      </message>
<!-- SSCOADK-5372- -->
      <message name="DB Response">
        <message-rule-list>
          <if expression="!CheckDBResponse()">
            <rule action-name="stop-timer" parameter="timer-name=db_lookup_timer" />
          </if>
          <else>
            <rule action-name="SendWtRequestToScale" />
            <!-- sscoadk-1692        <rule action-name="ClearHoldWeight" /> -->
            <rule action-name="stop-timer" parameter="timer-name=db_lookup_timer">
              <failure-transition>Wait Scale</failure-transition>
            </rule>
            <if expression="AllowLateBaggingForThisItem()">
              <transition state-name="Wait Scale - Allow Late Bagging" />
            </if>
            <transition state-name="Wait Scale" />
          </else>
        </message-rule-list>
      </message>
      <message name="db_lookup_timer_timeout">
        <message-rule-list>
          <rule action-name="GlobalLog" parameter="db_lookup_timer timeout received" />
          <rule action-name="SendLastChanceLookupDBRequest" />
        </message-rule-list>
      </message>
      <message name="Item Details">
        <message-rule-list>
          <if expression="!CheckItemDetails()">
            <rule action-name="send-msg" parameter="message-name=Item Not Sellable;immediate=1" />
          </if>
          <else>
            <if expression="CheckSecureCamStatus()">
                <rule action-name="SendSC" parameter="item-detail" />
            </if>
            <rule action-name="PicklistAssistSend" parameter="type=5" />
            <rule action-name="SendWtRequestToScale" />
            <!-- sscoadk-1692        <rule action-name="ClearHoldWeight" /> -->
            <if expression="AllowLateBaggingForThisItem()">
              <transition state-name="Wait Scale - Allow Late Bagging" />
            </if>
            <transition state-name="Wait Scale" />
          </else>
        </message-rule-list>
      </message>
      <message name="Item Not Sellable">
        <message-rule-list>
          <!-- sscop-3321+ -->
          <if expression="(multi_pick_flag==0)">          
          <!-- sscoadk-1692        <rule action-name="ClearHoldWeight" /> -->
          <rule action-name="SendGoToScanAndBag" />
          <rule action-name="IsTransactionEmpty">
            <failure-transition>Item Entry</failure-transition>
          </rule>
          <transition state-name="Start" />
          </if>
          <!-- sscop-3321+ -->
        </message-rule-list>
      </message>
      <message name="Dept Details">
        <message-rule-list>
          <rule action-name="CheckDeptDetails" />
          <rule action-name="SendWtRequestToScale" />
          <!-- sscoadk-1692        <rule action-name="ClearHoldWeight" /> -->
          <if expression="AllowLateBaggingForThisItem()">
            <transition state-name="Wait Scale - Allow Late Bagging" />
          </if>
          <transition state-name="Wait Scale" />
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag">
        <message-rule-list>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Skip Bagging">
        <message-rule-list>
	  <if expression="!(multi_pick_flag==0)">
            <rule action-name="assign-variable" parameter="variable-name=skip_bagging_in_multi_pick_flag;expression=1" />
            <rule action-name="IsNoWtInterventionOutstanding" />
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
          </if>		  
	  <if expression="CheckSecureCamStatus()">
            <rule action-name="SendSCSkipBagging" />
          </if>	
          <if expression="!(unexpected_decrease_flag!=0)">
            <rule action-name="send-msg" parameter="message-name=Skip Bagging2" />
          </if>
          <else>
            <if expression="!CheckSkipBagging(check-skip-bagging-threshold)">
              <rule action-name="SetLastGoodWeight" parameter="set-lgw" />
              <transition state-name="Wait Scale - Skip Bagging Pressed" />
            </if>
            <else>
              <rule action-name="ValidateItem" />
              <transition state-name="Item Entry" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Skip Bagging2">
        <message-rule-list>
          <if expression="!(multi_pick_flag==0)">
            <rule action-name="send-msg" parameter="message-name=Skip Bagging3" />
          </if>
          <else>
            <rule action-name="IsNoWtInterventionOutstanding" />
            <if expression="!CheckSkipBagging(check-skip-bagging-threshold)">
              <rule action-name="SetLastGoodWeight" parameter="set-lgw" />
              <transition state-name="Wait Scale - Skip Bagging Pressed" />
            </if>
            <else>
              <rule action-name="UpdateWLDBZeroWt" />
              <rule action-name="ValidateItem" />
              <transition state-name="Item Entry" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Skip Bagging3">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=skip_bagging_in_multi_pick_flag;expression=1" />
          <rule action-name="IsNoWtInterventionOutstanding" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1" />
          <if expression="!CheckBagBox()">
            <rule action-name="push-state" />
            <transition state-name="Invalid Bag" />
          </if>
        </message-rule-list>
      </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <rule action-name="ClearHoldWeight" />
          <rule action-name="SendGoToScanAndBag" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Wait Scale                                                       -->
    <!-- Function:  The scale has been requested to read a weight.                -->
    <!-- Messages:                                                                -->
    <!--      Matched Wt                                                          -->
    <!--      Unmatched Wt                                                        -->
    <!-- ======================================================================== -->
    <state name="Wait Scale">
      <entry-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=tare_only_flag;expression=0" />
      </entry-rule-list>
<!-- SSCOADK-6847+ -->
      <message name="Enter UnexpectedDecrease">
        <message-rule-list>
          <rule action-name="IsRemoveItemViolationAutoAdvanceEnabled" />
          <rule action-name="SetUnexpectedDecreaseTimeout" parameter="unexpected_decrease_timeout_value" />
          <rule action-name="start-timer" parameter="timer-name=unexpected_decrease_timer;duration=unexpected_decrease_timeout_value" />
          <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
        </message-rule-list>
      </message>
<!-- SSCOADK-6847- -->
<!-- SSCOADK-888+ -->
      <message name="Unmatched Decrease">
        <message-rule-list>
          <if expression="!HandleUnmatchedIncreaseLateCorrection()">
            <rule action-name="SetLastGoodWeight" />
          </if>
          <else>
            <rule action-name="HandleUnmatchedDecrease" parameter="scan_and_bag_flag;bag_and_eas_flag" />
          </else>
        </message-rule-list>
      </message>
<!-- SSCOADK-888- -->
<!-- SSCOP-608+ -->
        <message name="Clear Delayed Exception">
          <message-rule-list>
            <rule action-name="ClearDelayedException" parameter="flags-clear-report-only" />
            <rule action-name="SetLastGoodWeight" />
            <!-- The following action will check to see if an item is
            outstanding.  If so , then it will send an OnItemOK
            event to the application -->
            <rule action-name="SendItemOK" parameter="send-item-ok" />
          </message-rule-list>
        </message>
<!-- SSCOP-608- -->
      <message name="Clear All Exceptions No Change State">
        <message-rule-list>
          <rule action-name="ClearDelayedException" parameter="flags-clear-remove-exception" />
          <rule action-name="evaluate-expression" parameter="tare_only_flag==0" />
        </message-rule-list>
      </message>
      <message name="Matched Wt">
        <message-rule-list>
            <rule action-name="HandleMatchedWt" />
            <rule action-name="ValidateItem" />
            <if expression="CheckSecureCamStatus()">
                <rule action-name="SendSC" parameter="item-detail-goodweight" />
            </if>
            <if expression="unexpected_decrease_flag!=0">
                <rule action-name="ClearUnexpectedDecrease" />
                <rule action-name="send-msg" parameter="message-name=Matched Transition" />
            </if>
            <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Unmatched Increase">
        <message-rule-list>
          <rule action-name="evaluate-expression" parameter="attract_quiet_mode_violation==0" />
          <if expression="!HandleUnmatchedIncrease(scan_and_bag_flag;bag_and_eas_flag)">
            <rule action-name="send-msg" parameter="message-name=Check Mismatch Or New Item Entry Threshold Violation" />
            <transition state-name="Wait Scale - New Item Entry Threshold" />
          </if>
          <else>
            <rule action-name="ClearAllWtExceptions" />
            <rule action-name="ValidateItem" />
            <if expression="CheckSecureCamStatus()">
                <rule action-name="SendSC" parameter="item-detail-goodweight" />
            </if>
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
      </message>
      <message name="forgiveness_timer_timeout">
        <message-rule-list>
            <rule action-name="ClearForgivenException" />
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Send Exception to StopLift">
        <message-rule-list>
            <rule action-name="SendSC" parameter="item-detail-mismatch" />
            <rule action-name="UpdateWLDBForgivenMismatch" />
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="delayed_timer_timeout">
        <message-rule-list>
          <rule action-name="UpdateWLDBDelayedNewItemThreshold" />
          <rule action-name="ClearDelayedException" parameter="flags-clear-report-only" />
          <if expression="!(attract_quiet_mode_violation==0)">
            <rule action-name="send-msg" parameter="message-name=Attract Quiet Mode Violation" />
          </if>
<!--SSCOP-608+ -->
          <else>
            <if expression="!ValidateItem()">
                <rule action-name="send-msg" parameter="message-name=Item Validated" />
            </if>
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
<!--SSCOB-611- -->        
      </message>
      <message name="Clear Exception">
        <!-- SSCOP-988+ -->
          <if expression="IsZeroWeightItem()">
            <rule action-name="SendWtRequestToScale"/>
          </if>
        <!-- SSCOP-988+ -->
        <message-rule-list>
          <rule action-name="ClearException" />
          <if expression="!(attract_quiet_mode_violation==0)">
            <rule action-name="send-msg" parameter="message-name=Attract Quiet Mode Violation" />
          </if>
          <else>
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
      </message>
      <message name="Attract Quiet Mode Violation">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
          <rule action-name="SetLastGoodWeight" parameter="set-lgw-no-expectation" />
          <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
        </message-rule-list>
      </message>
      <message name="Clear Exception - All Wt Changes">
        <message-rule-list>
          <rule action-name="ClearException" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Clear All Exceptions">
        <message-rule-list>
          <rule action-name="ClearAllExceptions" />
          <rule action-name="evaluate-expression" parameter="tare_only_flag==0" />
        </message-rule-list>
      </message>
      <message name="Clear Exception with Update">
        <message-rule-list>
          <rule action-name="UpdateWLDB" />
          <rule action-name="ClearAllExceptions" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Skip Bagging">
        <message-rule-list>
		  <if expression="CheckSecureCamStatus()">
            <rule action-name="SendSCSkipBagging" />
          </if>	
          <if expression="!(unexpected_decrease_flag!=0)">
            <rule action-name="send-msg" parameter="message-name=Skip Bagging2" />
          </if>
          <else>
            <rule action-name="stop-timer" parameter="timer-name=unexpected_decrease_timer;duration=unexpected_decrease_timeout_value" />
            <rule action-name="ClearUnexpectedDecrease" />
            <if expression="!CheckSkipBagging(check-skip-bagging-threshold)">
              <rule action-name="SetLastGoodWeight" parameter="set-lgw" />
              <transition state-name="Wait Scale - Skip Bagging Pressed" />
            </if>
            <else>
              <rule action-name="ValidateItem" />
              <transition state-name="Item Entry" />
<!--SSCOP-625+ -->
              <if expression="!ValidateItem()">
                <rule action-name="send-msg" parameter="message-name=Item Validated" />
              </if>
              <transition state-name="Item Entry" />
<!--SSCOP-625- -->
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Skip Bagging2">
        <message-rule-list>
          <if expression="!(multi_pick_flag==0)">
            <rule action-name="send-msg" parameter="message-name=Skip Bagging3" />
          </if>
          <else>
            <rule action-name="IsNoWtInterventionOutstanding" />
            <if expression="!CheckSkipBagging(check-skip-bagging-threshold)">
              <rule action-name="SetLastGoodWeight" parameter="set-lgw" />
              <transition state-name="Wait Scale - Skip Bagging Pressed" />
            </if>
            <else>
              <rule action-name="UpdateWLDBZeroWt" />
              <!--sscob-3257+ -->
              <rule action-name="SendItemOK" parameter="send-item-ok" />
              <rule action-name="ValidateItem">
                  <failure-transition>Item Entry</failure-transition>
              </rule>
              <!--sscob-3257+ -->
              <transition state-name="Item Entry" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Skip Bagging3">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=skip_bagging_in_multi_pick_flag;expression=1" />
          <rule action-name="IsNoWtInterventionOutstanding" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
<!--SSCOP-625+  -->
          <if expression="!ValidateItem()">
            <rule action-name="send-msg" parameter="message-name=Item Validated" />
          </if>
          <transition state-name="Item Entry" />
<!--SSCOP-625-  -->
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1" />
          <if expression="!CheckBagBox()">
            <rule action-name="send-msg" parameter="message-name=InValid BagBox in Mismatch" />
          </if>
          <else>
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
      </message>
      <message name="InValid BagBox in Mismatch">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=tare_only_flag;expression=1" />
          <rule action-name="push-state" />
          <transition state-name="Invalid Bag - wait scale" />
        </message-rule-list>
      </message>
      <message name="RAP Approved Wt">
        <message-rule-list>
          <rule action-name="HandleRAPApprovedWt" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Item Expired">
        <message-rule-list>
		  <if expression="CheckSecureCamStatus()">
            <rule action-name="SendSCSkipBagging" />
          </if>		
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="HandleRAPApprovedWt" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <if expression="!ClearAllMismatchesThisItem()">
            <rule action-name="ClearAllExceptions" />
          </if>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="SendItemOK" parameter="send-item-ok" />
          <rule action-name="ValidateItem" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
      <message name="Item Details">
        <message-rule-list>
          <if expression="!CheckItemDetails()">
            <rule action-name="send-msg" parameter="message-name=Item Not Sellable;immediate=1" />
          </if>
        </message-rule-list>
      </message>
      <message name="Item Not Sellable">
        <message-rule-list>
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Wait Scale - Skip Bagging Pressed                                -->
    <!-- Function:  The Skip Bagging button has been pressed and we have exceeded -->
    <!--            the threshold.  We are now waiting for the attendant to clear -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Wait Scale - Skip Bagging Pressed">
      <message name="Clear Exception">
        <message-rule-list>
          <rule action-name="UpdateWLDBZeroWt" />
          <if expression="!ClearException()">
            <rule action-name="ClearAllExceptions" />
            <transition state-name="Item Entry" />
          </if>
          <else>
            <!--<rule action-name="ClearAllWtExceptions" />--> <!-- TAR 440437 -->
            <rule action-name="SetLastGoodWeight" />
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
      </message>
      <message name="Clear Exception - All Wt Changes">
        <message-rule-list>
          <rule action-name="ClearException" />
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="delayed_timer_timeout">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Clear Delayed Exception" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease">
        <message-rule-list>
          <rule action-name="HandleUnmatchedDecrease" />
        </message-rule-list>
      </message>
      <message name="unexpected_decrease_timer_timeout">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=unexpected_decrease_flag;expression=0" />
        </message-rule-list>
      </message>
      <message name="Unmatched Increase">
        <message-rule-list>
          <rule action-name="HandleUnmatchedIncrease" parameter="scan_and_bag_flag;bag_and_eas_flag" />
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1" />
          <if expression="!CheckBagBox()">
            <rule action-name="push-state" />
            <transition state-name="Invalid Bag" />
          </if>
          <else>
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
          </else>
        </message-rule-list>
      </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <rule action-name="ClearAllExceptions" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="SendItemOK" parameter="send-item-ok" />
          <rule action-name="ValidateItem" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
       </message>
	  <message name="Clear All Exceptions">
        <message-rule-list>
          <rule action-name="ClearAllExceptions" />  
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ValidateItem" /> 
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Wait Scale - New Item Entry Threshold                            -->
    <!-- Function:  New Item count have exceeded                                  -->
    <!--            the threshold.  We are now waiting for the attendant to clear -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Wait Scale - New Item Entry Threshold">
      <message name="Check Mismatch Or New Item Entry Threshold Violation">
        <message-rule-list>
          <if expression="AllowLateBaggingForThisItem()">
            <transition state-name="Wait Scale - Allow Late Bagging" />
          </if>
          <rule action-name="CheckZeroWtReceived">
            <failure-transition>Wait Scale</failure-transition>
          </rule>
          <if expression="!ItemHasApproveWt()">
            <rule action-name="SetLastGoodWeight" parameter="set-lgw" />
          </if>
          <else>
            <transition state-name="Wait Scale" />
          </else>
        </message-rule-list>
      </message>
      <message name="Clear Exception">
        <message-rule-list>
          <rule action-name="ClearException" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Clear Exception - All Wt Changes">
        <message-rule-list>
          <rule action-name="ClearException" />
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="Clear Exception with Update">
        <message-rule-list>
          <rule action-name="UpdateWLDB" />
          <rule action-name="ClearException" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="delayed_timer_timeout">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Clear Delayed Exception" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="CheckBagBox">
            <failure-transition>Invalid Bag - wait scale</failure-transition>
          </rule>
        </message-rule-list>
      </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <rule action-name="ClearException" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="SendItemOK" parameter="send-item-ok" />
          <rule action-name="ValidateItem" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>      
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Item Entry                                                       -->
    <!-- Function:  The scale has been requested to read a weight.                -->
    <!-- Messages:                                                                -->
    <!--      Matched Wt                                                          -->
    <!-- ======================================================================== -->
    <state name="Item Entry">
      <entry-rule-list>
        <if expression="CheckSecureCamStatus()">
          <rule action-name="SendSC" parameter="state-data" />
        </if>
        <rule action-name="assign-variable" parameter="variable-name=is_stoplift_analyzing;expression=1" />
        <if expression="enter_AssistMode!=0">
        <!-- TAR 445215  
    <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode;expression=0" />
    -->
          <rule action-name="push-state" />
          <rule action-name="send-msg" parameter="message-name=Go To Assist Mode" />
        </if>
      </entry-rule-list>
      <!-- +SSCOP-3566 -->
	  <!-- sscoadk-2901+ -->
      <message name="Clear Allow Late Bagging">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Late Bagging Not Allowed" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
	  <!-- sscoadk-2901- -->	  
      <message name="Item Details">
        <message-rule-list>
            <rule action-name="send-msg" parameter="message-name=Item Not Sellable" />
        </message-rule-list>
      </message>
      <message name="Item Not Sellable">
        <message-rule-list>      
          <if expression="(RemoteAssistMode==0)">  <!-- sscoadk-5713 -->
            <rule action-name="ClearHoldWeight" />
            <rule action-name="SendGoToScanAndBag" />
          </if>
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease">
        <message-rule-list>
          <if expression="!HandleUnmatchedIncreaseLateCorrection()">
            <rule action-name="SetLastGoodWeight" />
          </if>
          <else>
            <rule action-name="HandleUnmatchedDecrease" parameter="scan_and_bag_flag;bag_and_eas_flag" />
            <rule action-name="SetLastGoodWeight" />
          </else>
          <rule action-name="send-msg" parameter="message-name=BackToLGW" />
        </message-rule-list>
      </message>
      <message name="Throw Exception">
        <message-rule-list>
          <rule action-name="SetForgivenessTimeout" parameter="forgiveness_timeout_value" />
          <if expression="IsSCExceptionForgiven(is_stoplift_analyzing)">
            <rule action-name="send-msg" parameter="message-name=Send Exception to StopLift" />
          </if>
          <else>
            <if expression="!IsExceptionForgiven(scan_and_bag_flag)">
                <rule action-name="start-timer" parameter="timer-name=forgiveness_timer;duration=forgiveness_timeout_value" />
            </if>
            <else>
                <rule action-name="IsExceptionInterventionReq" parameter="scan_and_bag_flag;bag_and_eas_flag" />
				<rule action-name="SetDelayedTimeout" parameter="delayed_timeout_value" />
				<if expression="!IsExceptionDelayed(not_finalize_flag;not_complete_flag)">
				  <rule action-name="start-timer" parameter="timer-name=delayed_timer;duration=delayed_timeout_value" />
				</if>
				<else>
				  <rule action-name="ThrowException" />
				</else>
            </else>
          </else>
        </message-rule-list>
      </message>
      <!-- -SSCOP-3566 -->
      <!-- +SR078 -->
      <message name="Skip Bagging">
        <message-rule-list>
 		  <if expression="CheckSecureCamStatus()">
            <rule action-name="SendSCSkipBagging" />
          </if>
          <if expression="!(multi_pick_flag==0)">
            <rule action-name="assign-variable" parameter="variable-name=skip_bagging_in_multi_pick_flag;expression=1" />
            <rule action-name="CheckSkipBagging" parameter="not-check-skip-bagging-threshold" />
            <rule action-name="assign-variable" parameter="variable-name=skip_bagging_in_multi_pick_flag;expression=0" />
            <rule action-name="increment-variable" parameter="variable-name=ItemCounter" />            
          </if> 
         </message-rule-list>
      </message>
      <message name="Late Bagging Not Allowed">
        <message-rule-list>
          <if expression="!(multi_pick_flag==0)">
            <rule action-name="send-msg" parameter="message-name=Skip Bagging" />
          </if>
          <else>
            <rule action-name="SendLateBaggingNotAllowed" />
          </else>
        </message-rule-list>
      </message>
      <!-- -SR078 -->
      <message name="Go To Assist Mode">
        <message-rule-list>
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="Item Sold">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=skip_bagging_in_multi_pick_flag;expression=0" />
          <rule action-name="increment-variable" parameter="variable-name=X" />
          <rule action-name="ResetAtItemScan" />
          <if expression="!AddItemToTransaction()">
            <rule action-name="ItemNotScannedAdjustment" />
            <transition state-name="Wait DB" />
          </if>
          <else>
            <rule action-name="SetHoldWeight" />
            <if expression="CheckForExceptions()"> 
               <rule action-name="ClearLastWtException" />
               <rule action-name="SetScaleEvent" />
            </if>
            <rule action-name="SendDBRequest" />
            <rule action-name="start-timer" parameter="timer-name=db_lookup_timer;duration=1000" />
            <transition state-name="Wait DB" />
          </else>
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="CheckBagBox">
            <failure-transition>Invalid Bag</failure-transition>
          </rule>
        </message-rule-list>
      </message>
      <message name="Transaction Finalize">
        <message-rule-list>
          <transition state-name="Finalize" />
        </message-rule-list>
      </message>
      <message name="Item Expired">
        <message-rule-list>
		  <if expression="CheckSecureCamStatus()">
            <rule action-name="SendSCSkipBagging" />
          </if>			
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="Item Void Begin">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=Leaving_Item_Voided;expression=0" />
          <transition state-name="Item Voided" />
        </message-rule-list>
      </message>
      <message name="SMM Begin">
        <message-rule-list>
          <rule action-name="push-state" />
          <if expression="!SMMBegin()">
            <rule action-name="SendSMMServerFailure" />
            <transition state-name="Security Maintenance" />
          </if>
          <else>
            <transition state-name="Security Maintenance" />
          </else>
        </message-rule-list>
      </message>
      <!-- +TAR 450833 -->
      <!-- sscop-3382+ -->
      <message name="Clear Exception">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" parameter="last-exception-weight" />
          <if expression="!(attract_quiet_mode_violation!=0)">
          <rule action-name="ClearException" />
          </if>
          <else>
            <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
            <rule action-name="ClearException" />
          </else>
        </message-rule-list>
      </message>
      <!-- sscop-3382- -->
      <!-- -TAR 450833 -->
      <message name="Clear Exception with Update">
        <message-rule-list>
          <rule action-name="UpdateWLDB" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ClearException" />
        </message-rule-list>
      </message>
      <message name="Customer Has Bag">
        <message-rule-list>
          <!--<rule action-name="send-msg" parameter="message-name=Customer Has Bag" />-->
          <transition state-name="Put Bag On Scale" />
        </message-rule-list>
      </message>
      <message name="Exit Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=0" />
          <if expression="(is_securecam_enable==1)">
            <if expression="(attendant_mode_state_flag==0)">
              <if expression="(stoplift_status==0)">
                <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
              </if>
            </if>
          </if>
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Item Voided                                                      -->
    <!-- Function:  State for handling voided item                                -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Item Voided">
      <exit-rule-list>
        <rule action-name="send-msg" parameter="message-name=Exit Item Voided" />
      </exit-rule-list>
<!-- SSCOADK-1143+ -->
      <message name="Unmatched Decrease">
        <message-rule-list>
          <if expression="Leaving_Item_Voided ==1">
            <rule action-name="assign-variable" parameter="variable-name=Leaving_Item_Voided;expression=0" />
            <rule action-name="ClearAllExceptions" />
            <rule action-name="send-msg" parameter="message-name=Item Void End 2" />
          </if> 
          <else> 
            <if expression="!HandleUnmatchedIncreaseLateCorrection()">
              <rule action-name="SetLastGoodWeight" />
            </if>
            <else>
              <rule action-name="HandleUnmatchedDecrease" parameter="scan_and_bag_flag;bag_and_eas_flag" />
              <rule action-name="SetLastGoodWeight" />
            </else>
          </else>
        </message-rule-list>
      </message>
<!-- SSCOADK-1143- -->
      <message name="Enter Scan And Bag">
        <message-rule-list>
           <if expression="Leaving_Item_Voided ==0"> <!-- SSCOADK-1143 -->
               <transition state-name="Item Entry" />
           </if>
           <!-- sscoadk-5105+ -->
           <else>
               <if expression="!CheckForExceptions()">
                   <rule action-name="assign-variable" parameter="variable-name=Leaving_Item_Voided;expression=0" />
                   <rule action-name="send-msg" parameter="message-name=Item Void End 2" />
               </if>
          </else>
          <!-- sscoadk-5105- -->
        </message-rule-list>
      </message>
      <message name="Item Details">
        <message-rule-list>
        <if expression="Leaving_Item_Voided ==0">   <!-- SSCOADK-1143 -->
          <rule action-name="RemoveItemFromTransaction" />
          <rule action-name="send-msg" parameter="message-name=Void Item Late Correction" /> <!-- SSCOP-631 -->
        </if>
        </message-rule-list>
      </message>
      <!-- commented for SSCOP-631
      <message name="Unmatched Decrease">
        <message-rule-list>
          <if expression="!HandleUnmatchedIncreaseLateCorrection()">
            <rule action-name="send-msg" parameter="message-name=Void Item Late Correction" />
          </if>
        </message-rule-list>
      </message>
      -->
      <message name="Void Item Late Correction">
        <message-rule-list>
          <rule action-name="ClearLastWtException" />
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="Item Void End">
        <message-rule-list>
      <!-- SSCOADK-1143+ -->
          <if expression="!CheckForExceptions()">
              <rule action-name="send-msg" parameter="message-name=Item Void End 2" />
          </if>
          <rule action-name="assign-variable" parameter="variable-name=Leaving_Item_Voided;expression=1" />
      <!-- SSCOADK-1143- -->
        </message-rule-list>
      </message>
      <!-- SSCOADK-1143+ -->
      <message name="Item Void End 2">
        <message-rule-list>
          <rule action-name="IsTransactionEmpty">
            <failure-transition>Item Entry</failure-transition>
          </rule>
          <transition state-name="Start" />
        </message-rule-list>
      </message>
      <!-- SSCOADK-1143- -->
       <message name="Transaction Continue"/>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Transaction Voided                                                      -->
    <!-- Function:  State for handling voided item                                -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Transaction Voided">
      <message name="Unmatched Decrease" />
      <message name="Transaction Continue">
        <message-rule-list>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Transaction Void End">
        <message-rule-list>
          <rule action-name="VoidTransaction" />
          <rule action-name="ClearOutstandingExceptions" />
          <transition state-name="Complete" />
        </message-rule-list>
      </message>
      <message name="Item Void Begin">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=Leaving_Item_Voided;expression=0" />
          <transition state-name="Item Voided" />
        </message-rule-list>
      </message>
	  <message name="forgiveness_timer_timeout">
        <message-rule-list>
            <rule action-name="ClearForgivenException" />
            <rule action-name="SetLastGoodWeight" />
            <transition state-name="Item Entry"/>
        </message-rule-list>
      </message>
    </state>
    <!-- SR085 + -->
    <!-- ======================================================================== -->
    <!-- State:  Put Bag On Scale                                                 -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                                          -->
    <!-- ======================================================================== -->
    <state name="Put Bag On Scale">
      <message name="Transaction Begin">
        <message-rule-list>
		  <rule action-name="SendAttractIdleTimeToTransactionPolicy"/>
          <rule action-name="StartTransaction" />
          <rule action-name="SCUpdateTransactionID"/>
          <if expression="(is_securecam_enable==1)">
              <if expression="(stoplift_status==0)" >
                  <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                  <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
              </if>
          </if>
         </message-rule-list>
      </message>
      <message name="Transaction Finalize">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="Unmatched Increase">
        <message-rule-list>
          <rule action-name="SetDeltaWt" />
          <if expression="done_button_pressed_flag==1">
            <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
            <rule action-name="send-msg" parameter="message-name=delayed_timer_timeout" />
          </if>
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease">
        <message-rule-list>
            <rule action-name="SetLastGoodWeight" parameter="last-exception-weight " />
            <rule action-name="SetDeltaWt" />
            <if expression="done_button_pressed_flag==1">
                <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
                <rule action-name="send-msg" parameter="message-name=delayed_timer_timeout" />
            </if>
            <rule action-name="HandleUnmatchedIncrease" parameter="scan_and_bag_flag;bag_and_eas_flag" />			
        </message-rule-list>
      </message>
      <message name="Done Button Pressed">
        <message-rule-list>
          <rule action-name="SetDeltaWt" />
          <rule action-name="assign-variable" parameter="variable-name=done_button_pressed_flag;expression=1" />
          <rule action-name="start-timer" parameter="timer-name=delayed_timer;duration=1500" />
        </message-rule-list>
      </message>
      <message name="delayed_timer_timeout">
        <message-rule-list>
            <rule action-name="assign-variable" parameter="variable-name=done_button_pressed_flag;expression=0" />
            <if expression="!SCCheckCustomerBag()">
              <rule action-name="CheckCustomerBag">
                <failure-transition>Invalid Bag</failure-transition>
              </rule>
              <rule action-name="CheckBagBoxCount">
                <failure-transition>Invalid Bag</failure-transition>
              </rule>
            </if>
            <rule action-name="SetLastGoodWeight" />
            <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag">
        <message-rule-list>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Check Bag                                                        -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                                          -->
    <!-- ======================================================================== -->
    <state name="Check Bag">
      <entry-rule-list>
      <!-- 441559+ -->
        <rule action-name="stop-timer" parameter="timer-name=quiet_mode_timer" />
        <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
      <!-- 441559- -->
        <rule action-name="send-msg" parameter="message-name=Check Customer Bag" />
      </entry-rule-list>
      <message name="Check Customer Bag">
        <message-rule-list>
          <if expression="!SCCheckCustomerBag()">
            <rule action-name="CheckCustomerBag">
              <failure-transition>Invalid Bag</failure-transition>
            </rule>
          </if>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ClearAllExceptions" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
			<rule action-name="SendSCStatusToApp" parameter="offline" />
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1" />          
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Invalid Bag                                                      -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                                          -->
    <!-- ======================================================================== -->
    <state name="Invalid Bag">
      <!-- +SSCOP-1146 -->
      <entry-rule-list>
        <if expression="IsFromClearDelayedIntervention!=0">
          <rule action-name="assign-variable" parameter="variable-name=IsFromClearDelayedIntervention;expression=0" />
          <rule action-name="send-msg" parameter="Enter Scan And Bag" />
        </if>
      </entry-rule-list>
      <!-- -SSCOP-1146 -->
      <message name="Unmatched Increase">
        <message-rule-list>
          <if expression="!IsTransactionEmpty()">
            <rule action-name="send-msg" parameter="message-name=Bag Box Button Pressed" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Check Customer Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Check Customer Bag">
        <message-rule-list>
          <if expression="!SCCheckCustomerBag()">
            <rule action-name="CheckCustomerBag" />
          </if>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ClearLastWtException" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <if expression="go_to_last_state!=0">
            <rule action-name="pop-state" />
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="CheckBagBox" />
          <if expression="!IsCurrentTransactionNotHasDeptDetails()">
            <rule action-name="ValidateItem" />
          </if>
          <else>
            <if expression="go_to_last_state!=0">
              <rule action-name="pop-state" />
              <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
              <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
            </if>
            <else>
              <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease">
        <message-rule-list>
          <!-- SSCOP-3566
          <rule action-name="ClearLastWtException" />-->
          <if expression="!HandleUnmatchedDecrease()">
            <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
          </if>
        </message-rule-list>
      </message>
      <message name="Unmatched Wt">
        <message-rule-list>
          <if expression="!CheckScaleNotEmpty()">
            <rule action-name="send-msg" parameter="message-name=BackToLGW" />
          </if>
          <else>
            <rule action-name="HandleUnmatchedWt" />
          </else>
        </message-rule-list>
      </message>
      <message name="BackToLGW">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="ClearAllWtExceptions" />
		  <rule action-name="ResetWeight" /> <!-- SSCOADK-926 -->
          <if expression="go_to_last_state!=0">
            <rule action-name="pop-state" />
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Clear Exception">
        <message-rule-list>
          <rule action-name="ClearException" />
          <rule action-name="SetLastGoodWeight" parameter="set-lgw-no-expectation" />
          <if expression="!IsCurrentTransactionNotHasDeptDetails()">
            <rule action-name="send-msg" parameter="message-name=Only Clear Unexpected Increase Or Validate Item" />
          </if>
          <else>
            <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
            <if expression="go_to_last_state!=0">
              <rule action-name="pop-state" />
              <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
              <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
            </if>
            <else>
              <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Clear All Exceptions">
        <message-rule-list>
          <rule action-name="ClearAllExceptions" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <if expression="go_to_last_state!=0">
            <rule action-name="pop-state" />
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Clear Exception - All Wt Changes">
        <message-rule-list>
          <rule action-name="ClearException" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <if expression="go_to_last_state!=0">
            <rule action-name="pop-state" />
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
    <!-- SSCOP-731+  -->
      <message name="Clear Delayed Exception">  
        <message-rule-list>
          <rule action-name="ClearDelayedException" parameter="flags-clear-report-only" />
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
    <!-- SSCOP-731- -->
      <message name="Only Clear Unexpected Increase Or Validate Item">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
          <if expression="!(attract_quiet_mode_violation==0)">
            <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
            <transition state-name="Wait Scale" />
          </if>
          <else>
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
      </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1" />          
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
          <if expression="!IsCurrentTransactionNotHasDeptDetails()">
            <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
            <rule action-name="SendItemOK" parameter="send-item-ok" />
            <rule action-name="ValidateItem" />
          </if>
          <else>
            <rule action-name="SendGoToScanAndBag" />
          </else>
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
	  <message name="Done Button Pressed">
        <message-rule-list>
		  <rule action-name="SetDeltaWt" />
          <rule action-name="assign-variable" parameter="variable-name=done_button_pressed_flag;expression=1" />
          <rule action-name="start-timer" parameter="timer-name=delayed_timer;duration=1500" />
        </message-rule-list>
      </message>
      <message name="delayed_timer_timeout">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=done_button_pressed_flag;expression=0" />
          <rule action-name="CheckCustomerBag">
            <failure-transition>Invalid Bag</failure-transition>
          </rule>
		  <rule action-name="CheckBagBoxCount">
                <failure-transition>Invalid Bag</failure-transition>
          </rule>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ClearAllExceptions" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
    </state>
    <!-- SR085 - -->
    <!-- ======================================================================== -->
    <!-- State:  Finalize                                                         -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--      Unmatched Wt                                                        -->
    <!-- ======================================================================== -->
    <state name="Finalize">
      <entry-rule-list>
        <if expression="CheckSecureCamStatus()">
            <rule action-name="SendSC" parameter="state-data" />
        </if>
        <rule action-name="assign-variable" parameter="variable-name=is_stoplift_analyzing;expression=0" />
        <rule action-name="assign-variable" parameter="variable-name=finalize_flag;expression=1" />
        <rule action-name="assign-variable" parameter="variable-name=not_finalize_flag;expression=0" />
        <rule action-name="DisableLateCorrection" />
		<if expression="(attendant_mode_state_flag==0)">
            <rule action-name="ClearHoldWeight"/>        
        </if>
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=finalize_flag;expression=0" />
        <rule action-name="assign-variable" parameter="variable-name=not_finalize_flag;expression=1" />
      </exit-rule-list>
      <message name="Transaction Continue">
        <message-rule-list>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Throw Exception">
        <message-rule-list>
          <rule action-name="SetForgivenessTimeout" parameter="forgiveness_timeout_value" />
          <if expression="IsSCExceptionForgiven(in_security_analysis)">
            <rule action-name="send-msg" parameter="message-name=Send Exception to StopLift" />
          </if>
          <else>
              <if expression="!IsExceptionForgiven(finalize_flag)">
                  <rule action-name="start-timer" parameter="timer-name=forgiveness_timer;duration=forgiveness_timeout_value" />
              </if>
              <else>
                  <rule action-name="ThrowException" />
              </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease">
        <message-rule-list>
          <if expression="balance_paid_flag!=1">
            <if expression="!CheckForgiveUnexpectedDecreaseDuringTendering()">
              <rule action-name="HandleUnmatchedDecrease" />
            </if>
          </if>
          <rule action-name="SaveLastRemovedWeight" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ClearAllWtExceptions" />
        </message-rule-list>
      </message>
      <message name="Unmatched Increase">
        <message-rule-list>
          <if expression="balance_paid_flag!=1">
            <if expression="!CheckForgiveUnexpectedDecreaseDuringTendering()">
              <rule action-name="HandleUnmatchedIncrease" />
            </if>
          </if>
          <if expression="!HandleShuffle()">
            <rule action-name="SetLastGoodWeight" />
          </if>
          <else>
            <rule action-name="HandleUnmatchedIncrease" parameter="scan_and_bag_flag;bag_and_eas_flag" />
            <rule action-name="SetLastGoodWeight" />
          </else>
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1" />
          <if expression="!CheckBagBox()">
            <rule action-name="push-state" />
            <transition state-name="Invalid Bag" />
          </if>
          <else>
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
          </else>
        </message-rule-list>
      </message>
      <message name="SMM Begin">
        <message-rule-list>
          <rule action-name="push-state" />
          <if expression="!SMMBegin()">
            <rule action-name="SendSMMServerFailure" />
            <transition state-name="Security Maintenance" />
          </if>
          <else>
            <transition state-name="Security Maintenance" />
          </else>
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Complete                                                         -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--      Unmatched Wt                                                        -->
    <!-- ======================================================================== -->
    <state name="Complete">
      <entry-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=not_complete_flag;expression=0" />
        <rule action-name="ClearHoldWeight" />
        <if expression="ReadScaleForZero()">
           <rule action-name="send-msg" parameter="message-name=Zero Wt;immediate=1" />
        </if>
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=not_complete_flag;expression=1" />
      </exit-rule-list>
	  <!-- SSCOADK-6797+ //removed to fix SSCOADK-4389; SSCOADK-4062 fixes bug for SSCOADK-2469
      <message name="BackToLGW">
        <message-rule-list>
          <if expression="!CheckScaleNotEmpty()">
            <rule action-name="send-msg" parameter="message-name=Zero Wt;immediate=1" />
          </if>
          <else>
            <rule action-name="HandleUnmatchedWt" />
          </else>
        </message-rule-list>
      </message>
	  SSCOADK-6797- //removed to fix SSCOADK-4389; SSCOADK-4062 fixes bug for SSCOADK-2469-->
      <message name="Unmatched Wt">
        <message-rule-list>
          <if expression="ReadScaleForZero()">
		    <rule action-name="SetLastGoodWeight" />
            <rule action-name="send-msg" parameter="message-name=Zero Wt;immediate=1" />
          </if>
          <else>
            <rule action-name="HandleUnmatchedWt" />
          </else>
        </message-rule-list>
      </message>
      <message name="Zero Wt">
        <message-rule-list>
            <rule action-name="ClearAllExceptions" />
            <rule action-name="SCResetTransaction" />
            <rule action-name="SendTransactionComplete" />
            <if expression="CheckSecureCamStatus()">
                <rule action-name="SendSC" parameter="state-data" />
            </if>
            <transition state-name="Idle" />
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease">
        <message-rule-list>
          <rule action-name="SaveLastRemovedWeight" />
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="Unmatched Increase">
        <message-rule-list>
          <if expression="!HandleShuffle()">
            <rule action-name="SetLastGoodWeight" />
          </if>
          <else>
            <rule action-name="HandleUnmatchedIncrease" />
            <rule action-name="SetLastGoodWeight" />
          </else>
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1" />
          <if expression="!CheckBagBox()">
            <rule action-name="push-state" />
            <transition state-name="Invalid Bag" />
          </if>
          <else>
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
          </else>
        </message-rule-list>
      </message>
      <message name="Transaction Expired">
        <message-rule-list>
          <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
          <rule action-name="send-msg" parameter="message-name=Zero Wt" />
        </message-rule-list>
      </message>
      <message name="Clear Exception">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ClearException" />
          <rule action-name="send-msg" parameter="message-name=Zero Wt" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Security Maintenance                                             -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--      Unmatched Wt                                                        -->
    <!-- ======================================================================== -->
    <state name="Security Maintenance">
      <entry-rule-list>
        <rule action-name="SetSMMCurrentWeight" />
      </entry-rule-list>
      <message name="SMM Query">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <if expression="!SMMQuery()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="SMM Tolerance">
        <message-rule-list>
          <rule action-name="SaveSMMToleranceData" />
          <if expression="!GetSMMWLDBData()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="DB Response">
        <message-rule-list>
          <rule action-name="SMMDBResponse" />
        </message-rule-list>
      </message>
      <message name="SMM WLDB Weight">
        <message-rule-list>
          <rule action-name="increment-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter" />
          <rule action-name="BuildSMMQueryResponse" />
          <rule action-name="SendSMMQueryResponse" />
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
        </message-rule-list>
      </message>
      <message name="SMM Update - Add Weight">
        <message-rule-list>
          <transition state-name="Security Maintenance - Add Weight" />
        </message-rule-list>
      </message>
      <message name="SMM Update - Add Zero">
        <message-rule-list>
          <if expression="!SMMUpdateDeleteAllWts()">
            <rule action-name="SendSMMServerFailure" />
            <transition state-name="Security Maintenance" />
          </if>
          <else>
            <if expression="!SMMUpdateAddZero()">
              <rule action-name="SendSMMServerFailure" />
              <transition state-name="Security Maintenance" />
            </if>
            <else>
              <transition state-name="Security Maintenance - Add Zero Wt" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="SMM Update - Add Tolerance">
        <message-rule-list>
          <if expression="!SMMCheckToleranceValue()">
            <rule action-name="SendSMMUpdateAddToleranceResponse" />
            <transition state-name="Security Maintenance" />
          </if>
          <else>
            <if expression="!SMMUpdateAddTolerance()">
              <rule action-name="SendSMMServerFailure" />
              <transition state-name="Security Maintenance" />
            </if>
            <else>
              <transition state-name="Security Maintenance - Add Tolerance" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="SMM Update - Delete Tolerance">
        <message-rule-list>
          <if expression="!SMMUpdateDeleteTolerance()">
            <rule action-name="SendSMMServerFailure" />
            <transition state-name="Security Maintenance" />
          </if>
          <else>
            <transition state-name="Security Maintenance - Delete Tolerance" />
          </else>
        </message-rule-list>
      </message>
      <message name="SMM Update - Delete All Weights">
        <message-rule-list>
          <if expression="!SMMUpdateDeleteAllWts()">
            <rule action-name="SendSMMServerFailure" />
            <transition state-name="Security Maintenance" />
          </if>
          <else>
            <transition state-name="Security Maintenance - Delete All Wts" />
          </else>
        </message-rule-list>
      </message>
      <message name="SMM Update - Add Substitution Check">
        <message-rule-list>
          <if expression="!SMMUpdateAddSubstitutionCheck()">
            <rule action-name="SendSMMServerFailure" />
            <transition state-name="Security Maintenance" />
          </if>
          <else>
            <transition state-name="Security Maintenance - Add Substitution Check" />
          </else>
        </message-rule-list>
      </message>
      <message name="SMM Update - Add Wt Required">
        <message-rule-list>
          <if expression="!SMMUpdateAddWtRequired()">
            <rule action-name="SendSMMServerFailure" />
            <transition state-name="Security Maintenance" />
          </if>
          <else>
            <transition state-name="Security Maintenance - Add Wt Required" />
          </else>
        </message-rule-list>
      </message>
      <message name="SMM End">
        <message-rule-list>
          <rule action-name="SMMEnd" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="SetDeltaWt" />
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease" />
      <message name="Unmatched Increase">
        <message-rule-list>
          <rule action-name="HandleSMMUnmatchedIncrease" />
          <rule action-name="SendSMMObservedWeight" />
        </message-rule-list>
      </message>
      <message name="BackToLGW">
        <message-rule-list>
          <rule action-name="ResetWeight" />
          <rule action-name="ResetSMMObservedWeight" />
          <rule action-name="SendSMMObservedWeight" parameter="read-from-scale" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Security Maintenance - Add Weight                                -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--      Unmatched Wt                                                        -->
    <!-- ======================================================================== -->
    <state name="Security Maintenance - Add Weight">
      <entry-rule-list>
        <rule action-name="SetSMMCurrentWeight" />
        <rule action-name="SetLastGoodWeight" />
      </entry-rule-list>
      <message name="Unmatched Increase">
        <message-rule-list>
          <rule action-name="HandleSMMUnmatchedIncrease" />
          <if expression="!SMMAddWtToWLDB()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="SMM WLDB Update Complete">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <if expression="!SMMQuery()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="SMM Tolerance">
        <message-rule-list>
          <rule action-name="SaveSMMToleranceData" />
          <if expression="!GetSMMWLDBData()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="DB Response">
        <message-rule-list>
          <rule action-name="SMMDBResponse" />
        </message-rule-list>
      </message>
      <message name="SMM WLDB Weight">
        <message-rule-list>
          <rule action-name="increment-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter" />
          <rule action-name="BuildSMMQueryResponse" />
          <rule action-name="SendSMMQueryResponse" />
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="SMM Cancel">
        <message-rule-list>
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease" />
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Security Maintenance - Add Tolerance                                -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                              -->
    <!-- ======================================================================== -->
    <state name="Security Maintenance - Add Tolerance">
      <entry-rule-list>
        <rule action-name="SetHoldWeight" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="ClearHoldWeight" />
      </exit-rule-list>
      <message name="SMM Tolerance">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <if expression="!GetSMMWLDBData()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="DB Response">
        <message-rule-list>
          <rule action-name="SMMDBResponse" />
        </message-rule-list>
      </message>
      <message name="SMM WLDB Weight">
        <message-rule-list>
          <rule action-name="increment-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter" />
          <rule action-name="BuildSMMQueryResponse" />
          <rule action-name="SendSMMQueryResponse" />
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="SMM Cancel">
        <message-rule-list>
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="Unmatched Wt" />
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Security Maintenance - Add Substitution Check                                -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                              -->
    <!-- ======================================================================== -->
    <state name="Security Maintenance - Add Substitution Check">
      <entry-rule-list>
        <rule action-name="SetHoldWeight" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="ClearHoldWeight" />
      </exit-rule-list>
      <message name="SMM Tolerance">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <if expression="!GetSMMWLDBData()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="DB Response">
        <message-rule-list>
          <rule action-name="SMMDBResponse" />
        </message-rule-list>
      </message>
      <message name="SMM WLDB Weight">
        <message-rule-list>
          <rule action-name="increment-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter" />
          <rule action-name="BuildSMMQueryResponse" />
          <rule action-name="SendSMMQueryResponse" />
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="SMM Cancel">
        <message-rule-list>
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="Unmatched Wt" />
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Security Maintenance - Add Wt Required                                -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                              -->
    <!-- ======================================================================== -->
    <state name="Security Maintenance - Add Wt Required">
      <entry-rule-list>
        <rule action-name="SetHoldWeight" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="ClearHoldWeight" />
      </exit-rule-list>
      <message name="SMM Tolerance">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <if expression="!GetSMMWLDBData()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="DB Response">
        <message-rule-list>
          <rule action-name="SMMDBResponse" />
        </message-rule-list>
      </message>
      <message name="SMM WLDB Weight">
        <message-rule-list>
          <rule action-name="increment-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter" />
          <rule action-name="BuildSMMQueryResponse" />
          <rule action-name="SendSMMQueryResponse" />
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="SMM Cancel">
        <message-rule-list>
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="Unmatched Wt" />
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Security Maintenance - Add Zero Wt                                -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                             -->
    <!-- ======================================================================== -->
    <state name="Security Maintenance - Add Zero Wt">
      <entry-rule-list>
        <rule action-name="SetHoldWeight" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="ClearHoldWeight" />
      </exit-rule-list>
      <message name="SMM WLDB Update Complete">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <if expression="!SMMQuery()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="SMM Tolerance">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <if expression="!GetSMMWLDBData()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="DB Response">
        <message-rule-list>
          <rule action-name="SMMDBResponse" />
        </message-rule-list>
      </message>
      <message name="SMM WLDB Weight">
        <message-rule-list>
          <rule action-name="increment-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter" />
          <rule action-name="BuildSMMQueryResponse" />
          <rule action-name="SendSMMQueryResponse" />
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="SMM Cancel">
        <message-rule-list>
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="Unmatched Wt" />
      <message name="SMM End">
        <message-rule-list>
          <rule action-name="SMMEnd" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Security Maintenance - Delete All Wts                                -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                            -->
    <!-- ======================================================================== -->
    <state name="Security Maintenance - Delete All Wts">
      <entry-rule-list>
        <rule action-name="SetHoldWeight" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="ClearHoldWeight" />
      </exit-rule-list>
      <message name="SMM WLDB Update Complete">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <if expression="!SMMQuery()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="SMM Tolerance">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <if expression="!GetSMMWLDBData()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="DB Response">
        <message-rule-list>
          <rule action-name="SMMDBResponse" />
        </message-rule-list>
      </message>
      <message name="SMM WLDB Weight">
        <message-rule-list>
          <rule action-name="increment-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter" />
          <rule action-name="BuildSMMQueryResponse" />
          <rule action-name="SendSMMQueryResponse" />
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="SMM Cancel">
        <message-rule-list>
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="Unmatched Wt" />
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Security Maintenance - Delete Tolerance                                -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                            -->
    <!-- ======================================================================== -->
    <state name="Security Maintenance - Delete Tolerance">
      <entry-rule-list>
        <rule action-name="SetHoldWeight" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="ClearHoldWeight" />
      </exit-rule-list>
      <message name="SMM Tolerance">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <if expression="!GetSMMWLDBData()">
            <rule action-name="SendSMMServerFailure" />
          </if>
        </message-rule-list>
      </message>
      <message name="DB Response">
        <message-rule-list>
          <rule action-name="SMMDBResponse" />
        </message-rule-list>
      </message>
      <message name="SMM WLDB Weight">
        <message-rule-list>
          <rule action-name="increment-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter" />
          <rule action-name="BuildSMMQueryResponse" />
          <rule action-name="SendSMMQueryResponse" />
          <rule action-name="assign-variable" parameter="variable-name=SMM_WLDB_wt_entry_counter;expression=0" />
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="SMM Cancel">
        <message-rule-list>
          <transition state-name="Security Maintenance" />
        </message-rule-list>
      </message>
      <message name="Unmatched Wt" />
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Assist Mode                                                      -->
    <!-- Function:  State for handling items in assist mode                       -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Assist Mode">
      <entry-rule-list>
        <rule action-name="SetHoldWeight" />
      </entry-rule-list>
      <message name="Clear Allow Late Bagging">
        <message-rule-list>
          <if expression="!(multi_pick_flag==0)">
            <rule action-name="send-msg" parameter="message-name=Skip Bagging" />
          </if>
          <else>
            <rule action-name="SendLateBaggingNotAllowed" />
          </else>
        </message-rule-list>
      </message>      
      <message name="Skip Bagging">
        <message-rule-list>
          <rule action-name="CheckSkipBagging" parameter="not-check-skip-bagging-threshold" />
        </message-rule-list>
      </message>
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="StartTransaction" />
          <rule action-name="SendAttractIdleTimeToTransactionPolicy"/>
          <rule action-name="SCUpdateTransactionID"/>
          <rule action-name="SetBeginningTransLGW" />
          <rule action-name="CheckForExceptions" />
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="Dept Details" />
      <message name="Item Sold">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=skip_bagging_in_multi_pick_flag;expression=0" />
          <rule action-name="ResetAtItemScan" />
          <if expression="!AddItemToTransaction()">
            <rule action-name="ItemNotScannedAdjustment" />
            <transition state-name="Assist Mode - Item In Progress" />
          </if>
          <else>
            <transition state-name="Assist Mode - Item In Progress" />
          </else>
        </message-rule-list>
      </message>
      <message name="Exit Assist Mode">
        <message-rule-list>
          <rule action-name="pop-state" />
          <rule action-name="ClearHoldWeight" />
          <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode;expression=0" />
          <if expression="enter_AssistMode_From_Idle!=0">
              <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode_From_Idle;expression=0" />
              <transition state-name="Idle" />
          </if>
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag">
        <message-rule-list>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Transaction End">
        <message-rule-list>
          <if expression="!CheckTransactionComplete()">
            <rule action-name="SendSecurityViolations" />
            <transition state-name="Assist Mode" />
          </if>
          <else>
            <rule action-name="SendTransactionEndMessage" />
            <transition state-name="Assist Mode" />
          </else>
        </message-rule-list>
      </message>
      <message name="Transaction Void Begin">
        <message-rule-list>
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="Resume Weight Command">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
          <rule action-name="send-msg" parameter="message-name=Zero Wt" />
        </message-rule-list>
      </message>
      <message name="Zero Wt">
        <message-rule-list>
          <rule action-name="ClearAllExceptions" />
          <rule action-name="SCResetTransaction" />
          <rule action-name="SendTransactionComplete" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="Transaction Finalize">
        <message-rule-list>
          <transition state-name="Finalize" />
        </message-rule-list>
      </message>
      <message name="Transaction Expired">
        <message-rule-list>
          <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
          <rule action-name="send-msg" parameter="message-name=Zero Wt" />
        </message-rule-list>
      </message>
      <message name="Resume Weight Command">
        <message-rule-list>
          <rule action-name="SetHoldWeight" />
        </message-rule-list>
      </message>
      <message name="Item Details">
        <message-rule-list>
          <if expression="!CheckItemDetails()">
            <rule action-name="send-msg" parameter="message-name=Item Not Sellable" />
          </if>
          <else>
            <rule action-name="PicklistAssistSend" parameter="type=5" />
          </else>
        </message-rule-list>
      </message>
      <message name="Item Not Sellable">
        <message-rule-list>
          <rule action-name="SendGoToScanAndBag" />
        </message-rule-list>
      </message>
      <message name="Exit Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=0" />
          <if expression="(is_securecam_enable==1)">
            <if expression="(attendant_mode_state_flag==0)">
              <if expression="(stoplift_status==0)">
                <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
              </if>
            </if>
          </if>
        </message-rule-list>
      </message>
       <message name="Set Application State">
        <message-rule-list>
         <rule action-name="assign-variable" parameter="variable-name=application_state_parm_string;expression=$(parameter[set-app-state])" />
         <if expression="find($(application_state_parm_string), 'end,MultiPicklist') != -1">
            <rule action-name="assign-variable" parameter="variable-name=multi_pick_flag;expression=0" />
            <rule action-name="SendItemPickFinish" />
         </if>
         <if expression="find($(application_state_parm_string), 'AssistMode') != -1">
            <rule action-name="SetApplicationStateCommand" />
         </if>
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Assist Mode - Item In Progress                                   -->
    <!-- Function:  ItemSold has been received and we are waiting on the details  -->
    <!-- Messages:                                                                -->
    <!--      DB Response                                                         -->
    <!-- ======================================================================== -->
    <state name="Assist Mode - Item In Progress">
      <message name="Item Details">
        <message-rule-list>
          <rule action-name="CheckItemDetails">
            <failure-transition>Assist Mode</failure-transition>
          </rule>
         <rule action-name="PicklistAssistSend" parameter="type=5" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag">
        <message-rule-list>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
    </state>
    <!-- TAR416823+ -->
    <!-- ======================================================================== -->
    <!-- State:  Picking Up Items                                                 -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--      Unmatched Wt                                                        -->
    <!-- ======================================================================== -->
    <state name="Picking Up Items">
      <entry-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=item_removed_flag;expression=0" />
        <rule action-name="assign-variable" parameter="variable-name=picking_up_items_flag;expression=1" />
        <rule action-name="SetPickingUpItemsTimeout" parameter="picking_up_items_timeout_value" />
        <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
    <if expression="IsItemRemovedAutoAdvanceEnabled()">
       <rule action-name="start-timer" parameter="timer-name=picking_up_items_timer;duration=picking_up_items_timeout_value" />
        </if>
      </entry-rule-list>
      <exit-rule-list>
        <if expression="IsItemRemovedAutoAdvanceEnabled()">
        <rule action-name="stop-timer" parameter="timer-name=picking_up_items_timer" />
        </if>
        <rule action-name="assign-variable" parameter="variable-name=picking_up_items_flag;expression=0" />
      </exit-rule-list>
      <message name="Unmatched Increase">
        <message-rule-list>
         <if expression="IsItemRemovedAutoAdvanceEnabled()">
          <rule action-name="stop-timer" parameter="timer-name=picking_up_items_timer" />
         </if>  
          <rule action-name="HandleUnmatchedIncrease" parameter="scan_and_bag_flag;bag_and_eas_flag" />
          <rule action-name="SetLastGoodWeight" />
          <if expression="picking_up_items_flag!=0">
            <rule action-name="send-msg" parameter="message-name=BackToLGW" />
          </if>
        </message-rule-list>
      </message>
      <message name="ScanAndBag_entry_msg">
        <message-rule-list>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease">
        <message-rule-list>
<!-- sscop-1515+ -->
      <if expression="IsItemRemovedAutoAdvanceEnabled()">
        <rule action-name="stop-timer" parameter="timer-name=picking_up_items_timer;duration=picking_up_items_timeout_value" /> 
          <rule action-name="start-timer" parameter="timer-name=picking_up_items_timer;duration=picking_up_items_timeout_value" />
      </if>
<!-- sscop-1515- -->
          <if expression="!HandleUnmatchedIncreaseLateCorrection()">
            <rule action-name="SetLastGoodWeight" />
          </if>
          <else>
            <rule action-name="HandleUnmatchedDecrease" parameter="scan_and_bag_flag;bag_and_eas_flag" />
            <rule action-name="SetLastGoodWeight" />
          </else>
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="CheckBagBox">
            <failure-transition>Invalid Bag</failure-transition>
          </rule>
        </message-rule-list>
      </message>
      <message name="BackToLGW">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=item_removed_flag;expression=1" />
          <rule action-name="stop-timer" parameter="timer-name=delayed_timer" />
          <rule action-name="stop-timer" parameter="timer-name=forgiveness_timer" />
          <rule action-name="stop-timer" parameter="timer-name=unexpected_decrease_timer" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="ResetWeight" />
          <if expression="!IsCurrentExceptionDelayed()">
            <rule action-name="ClearLastWtException" />
          </if>
          <else>
            <rule action-name="CheckForExceptions" />
            <rule action-name="ClearAllWtExceptions" />
            <!-- sscop-2795 <rule action-name="SetLastGoodWeight" parameter="last-exception-weight" /> -->
            <rule action-name="SetLastGoodWeight" />
          </else>
        </message-rule-list>
      </message>
    <!-- +SSCOP-1011 -->  
      <message name="Item Expired"> 
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>  
       </message>
    <!-- -SSCOP-1011 -->

    <!-- SSCOP-3548+ -->
      <message name="Clear All Exceptions">
        <message-rule-list>
            <rule action-name="ClearAllExceptions" /> 
            <rule action-name="SetLastGoodWeight" parameter="last-exception-weight" /> 
        </message-rule-list>
      </message>
      <message name="Clear Exception - All Wt Changes">
        <message-rule-list>
            <rule action-name="ClearException" /> 
            <rule action-name="SetLastGoodWeight" parameter="last-exception-weight" /> 
        </message-rule-list>
      </message>
       <!--<message name="Item Removed">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=item_removed_flag;expression=1" />
          <rule action-name="SendGoToScanAndBag" />
        </message-rule-list>
       </message>-->
      <!-- SSCOP-3548- -->
      <message name="Clear Allow Late Bagging">
        <message-rule-list>
            <rule action-name="send-msg" parameter="message-name=Late Bagging Not Allowed" />
        </message-rule-list>
      </message>
       <message name="Late Bagging Not Allowed">
        <message-rule-list>
          <rule action-name="SendLateBaggingNotAllowed" />
        </message-rule-list>
      </message>
    </state>
    <!-- TAR416823- -->
    <!-- 439866+ -->
    <!-- ======================================================================== -->
    <!-- State:  Invalid Bag - wait scale                                         -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                                          -->
    <!-- ======================================================================== -->
    <state name="Invalid Bag - wait scale">
    <!-- SSCOP-608+ -->  
        <message name="Clear Delayed Exception">
            <message-rule-list>
                <rule action-name="ClearDelayedException" parameter="flags-clear-report-only" />
                <rule action-name="SetLastGoodWeight" />
                    <!-- The following action will check to see if an item is
                        outstanding.  If so , then it will send an OnItemOK
                        event to the application -->
                <rule action-name="SendItemOK" parameter="send-item-ok" />
            </message-rule-list>
        </message>    
    <!-- SSCOP-608- -->
    <!-- SSCOB-321+ -->  
      <message name="forgiveness_timer_timeout">
        <message-rule-list>
            <rule action-name="ClearForgivenException" />
            <!-- This rule will "call" a set of rules in the Any section.  These rules are common to handling a valid item -->
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
    <!-- SSCOB-321- -->
      <message name="Send Exception to StopLift">
        <message-rule-list>
            <rule action-name="SendSC" parameter="item-detail-mismatch" />
            <rule action-name="UpdateWLDBForgivenMismatch" />
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Unmatched Increase">
        <message-rule-list>
          <if expression="!IsTransactionEmpty()">
            <rule action-name="send-msg" parameter="message-name=Bag Box Button Pressed" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Check Customer Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Check Customer Bag">
        <message-rule-list>
          <if expression="!SCCheckCustomerBag()">
            <rule action-name="CheckCustomerBag" />
          </if>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="ClearLastWtException" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <if expression="go_to_last_state!=0">
            <rule action-name="pop-state" />
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="CheckBagBox" />
          <if expression="!IsCurrentTransactionNotHasDeptDetails()">
            <rule action-name="ValidateItem" />
          </if>
          <else>
            <if expression="go_to_last_state!=0">
              <rule action-name="pop-state" />
              <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
              <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
            </if>
            <else>
              <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Unmatched Decrease">
        <message-rule-list>
          <rule action-name="ClearLastWtException" />
          <!-- TAR459768+ -->
          <if expression="!HandleUnmatchedDecrease()">
            <rule action-name="send-msg" parameter="message-name=Check For Exceptions For Decrease" />
          </if>
          <!-- TAR459768- -->
        </message-rule-list>
      </message>
      <!-- TAR459768+ -->
      <message name="Check For Exceptions For Decrease">
        <message-rule-list>
          <if expression="!CheckForExceptions()">
            <rule action-name="send-msg" parameter="message-name=BackToLGW" />
          </if>
        </message-rule-list>
      </message>
      <!-- TAR459768- -->
      <message name="BackToLGW">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="ClearAllWtExceptions" />
          <if expression="go_to_last_state!=0">
            <rule action-name="pop-state" />
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Clear Exception">
        <message-rule-list>
          <rule action-name="ClearException" />
          <rule action-name="SetLastGoodWeight" parameter="set-lgw-no-expectation" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <if expression="go_to_last_state!=0">
            <rule action-name="pop-state" />
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Clear All Exceptions">
        <message-rule-list>
          <rule action-name="ClearAllExceptions" />
          <rule action-name="SetLastGoodWeight" parameter="last-exception-weight" />  <!-- SSCOADK-1165 - added parameter:last-exception-weight -->
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <if expression="go_to_last_state!=0">
            <rule action-name="pop-state" />
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Clear Exception - All Wt Changes">
        <message-rule-list>
          <rule action-name="ClearException" />
          <rule action-name="SetLastGoodWeight"  parameter="set-lgw-no-expectation" />
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <if expression="go_to_last_state!=0">
            <rule action-name="pop-state" />
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="send-msg" parameter="message-name=db_lookup_timer_timeout" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Enter Scan And Bag" />
          </else>
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Only Clear Unexpected Increase Or Validate Item">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
          <if expression="!(attract_quiet_mode_violation==0)">
            <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
            <transition state-name="Wait Scale" />
          </if>
          <else>
              <!--sscob-3257+ -->
              <rule action-name="SendItemOK" parameter="send-item-ok" />
              <rule action-name="ValidateItem">
                  <failure-transition>Item Entry</failure-transition>
              </rule>
              <!--sscob-3257+ -->
          </else>
        </message-rule-list>
      </message>
      <!--sscob-3257+ -->
      <message name="unexpected_decrease_timer_timeout">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="assign-variable" parameter="variable-name=unexpected_decrease_flag;expression=0" />
          <rule action-name="ClearAllWtExceptions" />
          <rule action-name="CheckSkipBagging" parameter="check-skip-bagging-threshold">
            <failure-transition>Wait Scale - Skip Bagging Pressed</failure-transition>
          </rule>
              <rule action-name="SendItemOK" parameter="send-item-ok" />
              <rule action-name="ValidateItem">
                  <failure-transition>Item Entry</failure-transition>
          </rule>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <!--sscob-3257+ -->
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" />
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1" />          
          <rule action-name="ClearAllExceptions" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="SendItemOK" parameter="send-item-ok" />
          <rule action-name="ValidateItem" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
	  <message name="Matched Wt">
        <message-rule-list>
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="HandleMatchedWt" />
            <rule action-name="ValidateItem" />
            <if expression="CheckSecureCamStatus()">
                <rule action-name="SendSC" parameter="item-detail-goodweight" />
            </if>
            <if expression="unexpected_decrease_flag!=0">
                <rule action-name="ClearUnexpectedDecrease" />
                <rule action-name="send-msg" parameter="message-name=Matched Transition" />
            </if>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
    </state>
    <!-- 439866- -->
    <!-- ======================================================================== -->
    <!-- State:  Wait Scale - Allow Late Bagging                                  -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!--                                                                          -->
    <!-- ======================================================================== -->
    <state name="Wait Scale - Allow Late Bagging">
      <entry-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=tare_only_flag;expression=0" />
      </entry-rule-list>
      <message name="Clear All Exceptions No Change State">
        <message-rule-list>
          <rule action-name="ClearDelayedException" parameter="flags-clear-remove-exception" />
          <rule action-name="evaluate-expression" parameter="tare_only_flag==0" />
        </message-rule-list>
      </message>
      <message name="Matched Wt">
        <message-rule-list>
            <rule action-name="HandleMatchedWt" />
            <rule action-name="ValidateItem" />
            <if expression="CheckSecureCamStatus()">
                <rule action-name="SendSC" parameter="item-detail-goodweight" />
             </if>
            <if expression="unexpected_decrease_flag!=0">
                <rule action-name="ClearUnexpectedDecrease" />
                <rule action-name="send-msg" parameter="message-name=Matched Transition" />
            </if>
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Unmatched Increase">
        <message-rule-list>
          <rule action-name="evaluate-expression" parameter="attract_quiet_mode_violation==0" />
          <if expression="!HandleUnmatchedIncrease(scan_and_bag_flag;bag_and_eas_flag)">
            <rule action-name="send-msg" parameter="message-name=Check Mismatch Or New Item Entry Threshold Violation" />
            <transition state-name="Wait Scale - New Item Entry Threshold" />
          </if>
          <else>
            <rule action-name="ClearAllWtExceptions" />
            <rule action-name="ValidateItem" />
            <if expression="CheckSecureCamStatus()">
                <rule action-name="SendSC" parameter="item-detail-goodweight" /> 
            </if>
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
      </message>
      <message name="forgiveness_timer_timeout">
        <message-rule-list>
            <rule action-name="ClearForgivenException" />
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Send Exception to StopLift">
        <message-rule-list>
            <rule action-name="SendSC" parameter="item-detail-mismatch" />
            <rule action-name="UpdateWLDBForgivenMismatch" />
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="delayed_timer_timeout">
        <message-rule-list>
          <rule action-name="UpdateWLDBDelayedNewItemThreshold" />
          <rule action-name="ClearDelayedException" parameter="flags-clear-report-only" />
          <if expression="!(attract_quiet_mode_violation==0)">
            <rule action-name="send-msg" parameter="message-name=Attract Quiet Mode Violation" />
          </if>
          <else>
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
      </message>
      <message name="Clear Exception">
        <message-rule-list>
          <rule action-name="ClearException" />
          <if expression="!(attract_quiet_mode_violation==0)">
            <rule action-name="send-msg" parameter="message-name=Attract Quiet Mode Violation" />
          </if>
          <else>
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
      </message>
      <message name="Attract Quiet Mode Violation">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=attract_quiet_mode_violation;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
          <rule action-name="SetLastGoodWeight" parameter="set-lgw-no-expectation" />
          <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
        </message-rule-list>
      </message>
      <message name="Clear Exception - All Wt Changes">
        <message-rule-list>
          <rule action-name="ClearException" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Clear All Exceptions">
        <message-rule-list>
          <rule action-name="ClearAllExceptions" />
          <rule action-name="evaluate-expression" parameter="tare_only_flag==0" />
        </message-rule-list>
      </message>
      <message name="Clear Exception with Update">
        <message-rule-list>
          <rule action-name="UpdateWLDB" />
          <if expression="!ClearAllMismatchesThisItem()">
            <rule action-name="ClearAllExceptions" />
          </if>
          <else>
            <rule action-name="SetLastGoodWeight" />
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
      </message>
      <message name="Bag Box Button Pressed">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1" />
          <if expression="!CheckBagBox()">
            <rule action-name="send-msg" parameter="message-name=InValid BagBox in Mismatch" />
          </if>
          <else>
            <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=0" />
            <rule action-name="ValidateItem" />
            <transition state-name="Item Entry" />
          </else>
        </message-rule-list>
      </message>
      <message name="InValid BagBox in Mismatch">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=tare_only_flag;expression=1" />
          <rule action-name="push-state" />
          <transition state-name="Invalid Bag - wait scale" />
        </message-rule-list>
      </message>
      <message name="Clear Allow Late Bagging">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Late Bagging Not Allowed" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Skip Bagging">
        <message-rule-list>
		  <if expression="CheckSecureCamStatus()">
            <rule action-name="SendSCSkipBagging" />
          </if>	
          <rule action-name="assign-variable" parameter="variable-name=skip_bagging_in_multi_pick_flag;expression=1" />
          <rule action-name="IsNoWtInterventionOutstanding" />
          <rule action-name="ValidateItem" />
          <transition state-name="Item Entry" />
        </message-rule-list>
      </message>
      <message name="Enter Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=1" /> 
          <if expression="CheckSecureCamStatus()">
            <rule action-name="assign-variable" parameter="variable-name=stoplift_status;expression=0" />
            <rule action-name="stop-timer" parameter="timer-name=hb_frequency_timer" />
            <rule action-name="SendSCStatusToApp" parameter="offline" />			
            <rule action-name="SendSCConfiguration" parameter="slSecurityOff"/>
          </if>
          <rule action-name="assign-variable" parameter="variable-name=go_to_last_state;expression=1" />          
          <rule action-name="ClearAllExceptions" />
          <rule action-name="SetLastGoodWeight" />
          <rule action-name="SendItemOK" parameter="send-item-ok" />
          <rule action-name="ValidateItem" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Disable Security Mode                                            -->
    <!-- Function:  State for handling items in Disable Security mode             -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Disable Security Mode">
      <entry-rule-list>
          <if expression="(receive_exit_disable_security_msg==1)">
            <rule action-name="assign-variable" parameter="variable-name=receive_exit_disable_security_msg;expression=0" />
            <rule action-name="send-msg" parameter="message-name=Exit Disable Security Mode" />
          </if>
      </entry-rule-list>
      <message name="Enter Assist Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode;expression=1" /> 
        </message-rule-list>
      </message>
      <message name="Exit Assist Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=enter_AssistMode;expression=0" /> 
        </message-rule-list>
      </message>
      <message name="Skip Bagging">
        <message-rule-list>
          <if expression="!(multi_pick_flag==0)">
            <rule action-name="send-msg" parameter="message-name=Skip Bagging3" />
          </if>
        </message-rule-list>
      </message>
      <message name="Skip Bagging3">
        <message-rule-list>
          <rule action-name="CheckSkipBagging" parameter="not-check-skip-bagging-threshold" />
          <rule action-name="SendItemOK" parameter="not-send-item-ok" />
        </message-rule-list>
      </message>
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="StartTransaction" />
          <rule action-name="SendAttractIdleTimeToTransactionPolicy"/>
          <rule action-name="SCUpdateTransactionID"/>
          <rule action-name="SetBeginningTransLGW" />
          <rule action-name="CheckForExceptions" />
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Disable Security Mode - Start" />
        </message-rule-list>
      </message>
      <message name="Dept Details" />
      <message name="Item Sold">
        <message-rule-list>
            <transition state-name="Disable Security Mode - Item In Progress" />
        </message-rule-list>
      </message>
      <message name="Exit Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=0" />
          <if expression="(is_securecam_enable==1)">
            <if expression="(attendant_mode_state_flag==0)">
              <if expression="(stoplift_status==0)">
                <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
              </if>
            </if>
          </if>
          <rule action-name="SetLastGoodWeight" />
          <if expression="!(finalize_flag==0)">
            <transition state-name="Finalize" />
          </if>
          <else>
            <if expression="!(not_complete_flag==1) || (coreapp_at_thankyou_state==1)">
              <transition state-name="Complete" />
            </if>
            <else>
              <if expression="!(security_disable_transaction_void==0)">
                <rule action-name="assign-variable" parameter="variable-name=security_disable_transaction_void;expression=0" />
                <transition state-name="Transaction Void" />
              </if>
              <else>
                <if expression="!(security_disable_item_void==0)">
                  <rule action-name="assign-variable" parameter="variable-name=security_disable_transaction_void;expression=0" />
                  <transition state-name="Item Voided" />
                </if>
                <else>
                    <transition state-name="Item Entry" />
                </else>
              </else>
            </else>
          </else>
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag"/>
      <message name="Transaction End">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=finalize_flag;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=not_finalize_flag;expression=1" />
          <rule action-name="assign-variable" parameter="variable-name=not_complete_flag;expression=0" />
          <rule action-name="send-msg" parameter="message-name=Zero Wt" />
        </message-rule-list>
      </message>
      <message name="Transaction Void Begin">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable_transaction_void;expression=1" />
        </message-rule-list>
      </message>
      <message name="Transaction Void End">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable_transaction_void;expression=0" />
        </message-rule-list>
      </message>
      <message name="Item Void Begin">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable_item_void;expression=1" />
        </message-rule-list>
      </message>
      <message name="Item Void End">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable_item_void;expression=0" />
        </message-rule-list>
      </message>
      <message name="Zero Wt">
        <message-rule-list>
            <rule action-name="ClearAllExceptions" />
            <rule action-name="SCResetTransaction" />
            <rule action-name="SendTransactionComplete" />
            <rule action-name="assign-variable" parameter="variable-name=not_complete_flag;expression=1" />
            <if expression="CheckSecureCamStatus()">
                <rule action-name="SendSC" parameter="state-data" />
            </if>
            <transition state-name="Idle" />
        </message-rule-list>
      </message>
      <message name="Transaction Finalize">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=finalize_flag;expression=1" />
          <rule action-name="assign-variable" parameter="variable-name=not_finalize_flag;expression=0" />
        </message-rule-list>
      </message>
       <message name="Transaction Expired">
        <message-rule-list>
          <rule action-name="SetBeginningTransLGW" parameter="set-beginningtranslgw-attract" />
          <rule action-name="send-msg" parameter="message-name=Zero Wt" />
        </message-rule-list>
      </message>
      <message name="Item Details">
        <message-rule-list>
           <rule action-name="send-msg" parameter="message-name=Item Not Sellable" />
        </message-rule-list>
      </message>
      <message name="Item Not Sellable">
        <message-rule-list>
          <rule action-name="SendGoToScanAndBag" />
        </message-rule-list>
      </message>
      <message name="Unmatched Wt">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="BackToLGW"/>
      <message name="Exit MultiPick Inside Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=multi_pick_flag;expression=0" />
          <rule action-name="SendItemPickFinish" />
        </message-rule-list>
      </message>
      <message name="Done Button Pressed">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="Transaction Continue">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=finalize_flag;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=not_finalize_flag;expression=1" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Disable Security Mode - Item In Progress                         -->
    <!-- Function:  ItemSold has been received and we are waiting on the details  -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Disable Security Mode - Item In Progress">
      <message name="Item Details">
        <message-rule-list>
          <rule action-name="SendGoToScanAndBag" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
      <message name="Item Not Sellable">
        <message-rule-list>
          <rule action-name="SendGoToScanAndBag" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>      
      <message name="Enter Scan And Bag">
        <message-rule-list>
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
      <message name="Unmatched Wt">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="BackToLGW"/>
      <message name="Exit MultiPick Inside Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=multi_pick_flag;expression=0" />
          <rule action-name="SendItemPickFinish" />
        </message-rule-list>
      </message>
      <message name="Exit Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=receive_exit_disable_security_msg;expression=1" />
        </message-rule-list>
      </message>
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="StartTransaction" />
          <rule action-name="SendAttractIdleTimeToTransactionPolicy"/>
          <rule action-name="SCUpdateTransactionID"/>
          <rule action-name="SetBeginningTransLGW" />
          <rule action-name="CheckForExceptions" />
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Disable Security Mode - Start" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Disable Security Mode - Idle                                     -->
    <!-- Function:  State for handling outside of transaction in Disable Security mode             -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Disable Security Mode - Idle">
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="StartTransaction" />
          <rule action-name="SendAttractIdleTimeToTransactionPolicy"/>
          <rule action-name="SCUpdateTransactionID"/>
          <rule action-name="SetBeginningTransLGW" />
          <if expression="CheckForExceptions()">
            <rule action-name="ClearAllWtExceptions" />
          </if>
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Disable Security Mode - Start" />
        </message-rule-list>
      </message>
      <message name="Exit Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=0" />
          <if expression="(is_securecam_enable==1)">
            <if expression="(attendant_mode_state_flag==0)">
              <if expression="(stoplift_status==0)">
                <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
              </if>
            </if>
          </if>
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Idle" />
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag"/>
      <message name="Unmatched Wt">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="BackToLGW"/>
      <message name="Done Button Pressed">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="Transaction Continue"/>
      <message name="Item Sold">
        <message-rule-list>
            <transition state-name="Disable Security Mode - Item In Progress" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Disable Security Mode - Start                                    -->
    <!-- Function:  State for handling starting transction in Disable Security mode -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Disable Security Mode - Start">
      <message name="Dept Details" />
      <message name="Item Sold">
        <message-rule-list>
          <transition state-name="Disable Security Mode - Item In Progress" />
        </message-rule-list>
      </message>
      <message name="Exit Disable Security Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disable;expression=0" />
          <if expression="(is_securecam_enable==1)">
            <if expression="(attendant_mode_state_flag==0)">
              <if expression="(stoplift_status==0)">
                <rule action-name="SendSCConfiguration" parameter="slSecurityOn"/>
                <rule action-name="start-timer" parameter="timer-name=hb_frequency_timer;duration=hb_frequency" />
              </if>
            </if>
          </if>
          <rule action-name="SetLastGoodWeight" />
          <transition state-name="Start" />
        </message-rule-list>
      </message>
      <message name="Enter Scan And Bag"/>
      <message name="Transaction Finalize">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=finalize_flag;expression=1" />
          <rule action-name="assign-variable" parameter="variable-name=not_finalize_flag;expression=0" />
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
      <message name="Item Details">
        <message-rule-list>
          <transition state-name="Disable Security Mode" />
        </message-rule-list>
      </message>
      <message name="Unmatched Wt">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="BackToLGW"/>
      <message name="Done Button Pressed">
        <message-rule-list>
          <rule action-name="SetLastGoodWeight" />
        </message-rule-list>
      </message>
      <message name="Transaction Continue"/>
    </state>    
  </rules>
  <include name="SecuritySMMobileShopper.xml">
  </include>
  <include name="SecuritySMEnhanceForgiveness.xml">
  </include>
</state-machine>