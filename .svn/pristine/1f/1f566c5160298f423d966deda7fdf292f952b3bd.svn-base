<state-machine library="RCMgr" version="2.2">
  <!-- ============================================================================ -->
  <!-- Section:  Include the XML configuration file for the RAP terminal            -->
  <!-- ============================================================================ -->
  <!--<include name="LaneRAP.xml" />-->
  <!-- ============================================================================ -->
  <!-- Section:  Library definitions                                                -->
  <!-- ============================================================================ -->
  <library-list>
    <library name="RCMgr">
      <comment>This library contains the actions for the Remote Console Manager</comment>
    </library>
	<library name="DataPumpClient">
      <comment>This library contains the actions DataPump sender</comment>
    </library>
  </library-list>
  <!-- ============================================================================ -->
  <!-- Section:  Timer definitions                                                  -->
  <!-- ============================================================================ -->
  <timer-list>
    <timer name="initialization_timer" />
    <timer name="sound_timer" />
  </timer-list>
  <!-- ============================================================================ -->
  <!-- Section:  Constant definitions                                               -->
  <!-- ============================================================================ -->
  <constant-list>
    <constant name="default_state_timeout" value="2000" />
    <constant name="OPERATION_SET_XACT_STATE" value="1" />
    <constant name="OPERATION_ENTER_STORE_MODE" value="2" />
    <constant name="OPERATION_EXIT_STORE_MODE" value="3" />
    <constant name="OPERATION_XACT_END" value="4" />
    <constant name="OPERATION_XACT_BEGIN" value="5" />
    <constant name="OPERATION_VALIDATE_OPERATOR" value="6" />
    <constant name="OPERATION_SET_LIGHT_STATE" value="7" />
    <constant name="OPERATION_CONNECT" value="8" />
    <constant name="OPERATION_DISCONNECT" value="9" />
    <constant name="OPERATION_SIGNON" value="10" />
    <constant name="OPERATION_SIGNOFF" value="11" />
    <constant name="OPERATION_DISCONNECT_SERVER" value="13" />
    <constant name="OPERATION_RELOAD_OPTIONS" value="14" />
    <constant name="OPERATION_ACQUIRE_EXCLUSIVE" value="15" />
    <constant name="OPERATION_RELEASE_EXCLUSIVE" value="16" />
    <constant name="OPERATION_INITIALIZE" value="17" /><!--SR969-->
    <constant name="OPERATION_XACT_ASSISTMODENOTAVAILABLE" value="18" />
    <constant name="OPERATION_XACT_ASSISTMODEAVAILABLE" value="19" />
    <constant name="GET_REQUEST_ENABLE_AM" value="1" />
    <constant name="GET_CURRENT_APPROVAL_CODE" value="2" />
    <constant name="GET_RAP_DATA_AVAILABLE" value="3" />
    <constant name="GET_RAP_DATA" value="4" />
    <constant name="GET_PREVIOUS_VIEW" value="5" />
    <constant name="GET_DATA_PENDING_COUNT" value="6" />
    <constant name="GET_CONNECTION_MODE" value="7" />
    <constant name="GET_REMOTE_CONNECTION_HANDHELD" value="8" />
    <constant name="GET_REMOTE_CONNECTION_NAME" value="9" />
    <constant name="GET_REQUEST_ENABLE_HH_AM" value="10" />
    <constant name="MAX_DIGITS_CASHAMT" value="9" />
  </constant-list>
  <!-- ============================================================================ -->
  <!-- Section:  Variable definitions                                               -->
  <!-- ============================================================================ -->
  <variable-list>
    <variable name="control_command_type" initial-value="0" />
    <variable name="suspend_allowed" initial-value="0" />
    <variable name="suspend_in_progress" initial-value="0" />
    <variable name="remote_initiated_suspend" initial-value="0" />
    <variable name="new_state" initial-value="" />
    <variable name="cash_amount_digit" initial-value="0" max-value="12" min-value="" />
    <variable name="number_of_digit" initial-value="0" />
    <variable name="tender_state" initial-value="0" />
    <variable name="is_handheld" initial-value="0" />
    <variable name="trilite_color" initial-value="0" />
    <variable name="lane_name_flag" initial-value="0" />
    <variable name="sound_flag" initial-value="0" />
    <variable name="X" initial-value="0" max-value="" min-value="0" />
    <variable name="store_mode" initial-value="0" />
    <variable name="security_disabled" initial-value="0" />
	<variable name="current_transaction_state" initial-value="" />
	<variable name="current_state" initial-value="" />
    <variable name="alert_outside_trx" initial-value="0" />
    <variable name="disable_handling" initial-value="1" /><!--SR831-->
	<variable name="is_attract" initial-value="1" />
    <variable name="unapproved_restricted_items" initial-value="0" /><!--SR803-->
    <variable name="is_on_top_rap_data_needed" initial-value="0" />    
    <variable name="view_cm_at_rap" initial-value="0" /><!--SR969-->    
	<variable name="is_rap_single4" initial-value="0" />
    <variable name="intervention_handling" initial-value="0" /><!--RAPLite-->
    <variable name="current_generic_delayed_ID" initial-value="" />
    <variable name="CONTEXTTODISPLAY" initial-value="" />
    <variable name="VIDEOPATH" initial-value="" />
    <variable name="is_GDAsyn" initial-value="0" />
    <variable name="trilite_color_changed" initial-value="0" />
    <variable name="current_generic_datahandler" initial-value="" />
    <variable name="current_generic_delayed_cookie" initial-value="-1" />
    <variable name="intervention_in_progress" initial-value="0" />
	<variable name="no_sale" initial-value="0" /> <!-- SSCOI-45690 -->
	<!-- +-SSCOADK-6701 -->
    <variable name="SmRestrictedItems" initial-value="SmRestrictedItems" type="string" />
    <!-- +SSCOADK-6861 -->
    <variable name="ButtonGoBack" initial-value="ButtonGoBack" type="string" />
    <variable name="AM_VoidItem" initial-value="AM_VoidItem" type="string" />
    <variable name="Click" initial-value="Click" type="string" />
    <variable name="bReleaseExclusiveAccess" initial-value="false" type="bool" />
    <!-- -SSCOADK-6861 -->
  </variable-list>
  <!-- ============================================================================ -->
  <!-- Section:  State definitions                                                  -->
  <!-- ============================================================================ -->
  <state-list>
    <state-definition name="Unitialized">
      <comment>This is the initial state entered</comment>
      <initial />
    </state-definition>
    <state-definition name="Logged Off" />
    <state-definition name="Main" />
    <state-definition name="LaneDetail">
      <comment>This is a Handheld only state</comment>
    </state-definition>
    <state-definition name="LaneInterventionDetail" />
    <state-definition name="Wait For Data Needed" />
    <state-definition name="LaneStatus" />
    <state-definition name="Immediate Intervention" />
    <state-definition name="Delayed Intervention" />
    <state-definition name="Store Mode" />
    <state-definition name="Assist Mode" />
    <state-definition name="ApproveAgeCheck" />
    <state-definition name="ApproveCoupon" />
    <state-definition name="ApproveVisualVerify" />
    <state-definition name="ApproveUnknownItem" />
    <state-definition name="ApproveItemNotForSale" />
    <state-definition name="ApproveQuantityRestrict" />
    <state-definition name="ApproveTimeRestrict" />
    <state-definition name="ApproveHelp" />
    <state-definition name="ApproveHelpOutsideTrx" />
    <state-definition name="ApproveDelaySecurity" />
    <state-definition name="ApproveVoid" />
    <state-definition name="ApproveOtherPayment" />
    <state-definition name="ApproveUnDeActivatedItem" />
    <state-definition name="ApproveSignatureCapture" />
    <state-definition name="ApproveCollection" />
    <state-definition name="EnterPrice" />
    <state-definition name="CancelTransactionGeneric" />
    <state-definition name="ConfirmSuspend" />
    <state-definition name="IncorrectItemWeight" />
    <state-definition name="UnexpectedIncrease" />
    <state-definition name="BagBoxNotValid" />
    <state-definition name="SkipBaggingBtnThreshold" />
    <state-definition name="ItemRemovedBtnThreshold" />
    <state-definition name="BagBoxBtnThreshold" />
    <state-definition name="NewWeightItem" />
    <state-definition name="BagItemTimerExpires" />
    <state-definition name="TakeChangeTimerExpires" />
    <state-definition name="EASNotActivated" />
    <state-definition name="PickingUpItemsTimerExpires" />
    <state-definition name="DeviceFailure" />
    <state-definition name="WLDBFailure" />
    <state-definition name="UnexpectedDecrease" />
    <state-definition name="CloseLane" />
    <state-definition name="BagAreaBackup" />
    <state-definition name="SafetyCoverOpen" />
    <state-definition name="UnDeActivatedItemOnTABeltDetected" />
    <state-definition name="VerifySignature" />
    <state-definition name="ApproveAssistedTender" />
    <state-definition name="AssistedEndorsement" />
    <state-definition name="StartTransaction" />
    <state-definition name="StartTransactionAM" />
    <state-definition name="ItemsForgotten" />
    <state-definition name="InsertCouponTimerExpires" />
    <state-definition name="CollectGiftCardRAP" />
    <state-definition name="HostOfflineRAP" />
    <state-definition name="Reporting Mode" />
    <state-definition name="Suspend In Progress" />
    <state-definition name="Allow Suspension" />
    <state-definition name="MultiPackItem" />
    <state-definition name="OutOfSyncStop" />
    <state-definition name="HopperSubstitution" />
    <state-definition name="OutOfSyncNeedAssist" />
    <state-definition name="ConfirmSuspendFromOtherPayment" />
    <state-definition name="ConfirmSuspendFromLaneStatus" />
    <state-definition name="ApproveRestrictedNotAllowed" />
    <state-definition name="RAPDataNeededNotHandled" />
    <state-definition name="StartTrainingModeTrans" />
    <state-definition name="MaxCouponApproval" />
    <state-definition name="CouponWarningAtFinalization" />
    <state-definition name="ApproveSuspensionDecline" />
	<state-definition name="InvalidBarcode"/> <!--SR879-->
    <state-definition name="SMDataEntryGoToLane" /><!--SR831-->
    <state-definition name="AssistAtLane" /><!--SR803-->
    <state-definition name="NoSale" />  <!-- sscoadk-321 -->
    <state-definition name="ApproveNoSale" />  <!-- sscoadk-321 -->
	  <state-definition name="GenericDelayed" />
    <state-definition name="AssistModeNotAvailable" />
	<!-- +SSCOI-45690 -->
	 <state-definition name="NoSaleInProgress" /> 
	<!-- -SSCOI-45690 -->
	<state-definition name="TakeChangeTimeout" /> <!-- SSCOI-46971 -->
  </state-list>
  <state-table name="DelayedInterventionsTable">
    <state key="Age Restriction Event" state-name="ApproveAgeCheck" />
    <state key="Coupon Event" state-name="ApproveCoupon" />
    <state key="Call For Help Event" state-name="ApproveHelp" />
    <state key="Call For Help Outside Transaction Event" state-name="ApproveHelpOutsideTrx" />
    <state key="Quantity Restricted Item Event" state-name="ApproveQuantityRestrict" />
    <state key="Recalled Item Event" state-name="ApproveItemNotForSale" />
    <state key="Time Restricted Item Event" state-name="ApproveTimeRestrict" />
    <state key="Unknown Item Event" state-name="ApproveUnknownItem" />
    <state key="Void Event" state-name="ApproveVoid" />
    <state key="Visual Validation Event" state-name="ApproveVisualVerify" />
    <state key="Hopper Substitution Event" state-name="HopperSubstitution" />
    <state key="Other Payment Event" state-name="ApproveOtherPayment" />
    <state key="Price Required Event" state-name="EnterPrice" />
    <state key="Sig Cap Event" state-name="ApproveSignatureCapture" />
    <state key="Cancel Transaction Generic Event" state-name="CancelTransactionGeneric" />
    <state key="Cancel Transaction Event" state-name="CancelTransactionGeneric" />
    <state key="Verify Signature Event" state-name="VerifySignature" />
    <state key="Assisted Tender Event" state-name="ApproveAssistedTender" />
    <state key="Assisted Endorsement Event" state-name="AssistedEndorsement" />
    <state key="Bag Area Backup Event" state-name="BagAreaBackup" />
    <state key="Safety Cover Open Event" state-name="SafetyCoverOpen" />
    <state key="Close Lane Event" state-name="CloseLane" />
    <state key="Device Error Event" state-name="DeviceFailure" />
    <state key="WLDB Failure Event" state-name="WLDBFailure" />
    <state key="Multipack Item Event" state-name="MultiPackItem" />
    <state key="Out Of Sync Stop Event" state-name="OutOfSyncStop" />
    <state key="Out Of Sync Assist Event" state-name="OutOfSyncNeedAssist" />
    <state key="Security Event" state-name="ApproveDelaySecurity" />
    <state key="Restricted Not Allowed Event" state-name="ApproveRestrictedNotAllowed" />
    <state key="Undeactivated Item Event" state-name="EASNotActivated" />
    <state key="RAPDataNeeded Not Handled Event" state-name="RAPDataNeededNotHandled" />
    <state key="Training Mode Transaction Event" state-name="StartTrainingModeTrans" />
    <state key="SuspensionDecline Event" state-name="ApproveSuspensionDecline" />
    <!-- TAR 352409  -->
    <state key="Max Coupon Event" state-name="MaxCouponApproval" />
    <!-- SR678 -->
    <state key="Max Coupon Finalization Event" state-name="CouponWarningAtFinalization" />
    <!-- TAR SR678 -->
    <state key="Go To Lane Event" state-name="SMDataEntryGoToLane" /><!--SR831-->
    <state key="Assist At Lane Event" state-name="AssistAtLane" /><!--SR803-->
    <state key="No Sale Event" state-name="NoSale" />  <!-- sscoadk-321 -->
    <state key="Generic Delayed Event" state-name="GenericDelayed" />
    <state key="Assist Mode Not Available Event" state-name="AssistModeNotAvailable" />    
  </state-table>
  <state-table name="ImmediateInterventionsTable">
    <state key="age-restriction" state-name="ApproveAgeCheck" />
    <state key="coupon" state-name="ApproveCoupon" />
    <state key="call-for-help" state-name="ApproveHelp" />
    <state key="quantity-restricted-item" state-name="ApproveQuantityRestrict" />
    <state key="recalled-item" state-name="ApproveItemNotForSale" />
    <state key="time-restricted-item" state-name="ApproveTimeRestrict" />
    <state key="unknown-item" state-name="ApproveUnknownItem" />
    <state key="void" state-name="ApproveVoid" />
    <state key="visual-validation" state-name="ApproveVisualVerify" />
    <state key="security" state-name="ApproveDelaySecurity" />
    <state key="ready-to-collect" state-name="ApproveCollection" />
    <state key="restricted-not-allowed" state-name="ApproveRestrictedNotAllowed" />
    <state key="Training Mode Transaction Event" state-name="StartTrainingModeTrans" />
    <state key="suspension-decline" state-name="ApproveSuspensionDecline" />
    <!--    TAR 352409  -->
    <!-- +SR678 -->
    <state key="Max Coupon Event" state-name="MaxCouponApproval" />
    <state key="Max Coupon Finalization Event" state-name="CouponWarningAtFinalization" />
    <!-- -SR678 -->
	<state key="Invalid Barcode Event" state-name="InvalidBarcode" />
    <state key="Go To Lane Event" state-name="SMDataEntryGoToLane" /><!--SR831-->
    <state key="Assist At Lane Event" state-name="AssistAtLane" /><!--SR803-->
    <state key="No Sale Event" state-name="NoSale" />  <!-- sscoadk-321 -->
	  <state key="generic-delayed" state-name="GenericDelayed" />
    <state key="Assist Mode Not Available" state-name="AssistModeNotAvailable" />
  </state-table>
  <lookup-table name="RAPDataNeededInterventionsTable" key-type="int" value-type="string">
    <lookup-entry key="0" value="message-name=Void Event;state-name=ApproveVoid;priority=urgent" />
    <lookup-entry key="12" value="message-name=Price Required Event;state-name=EnterPrice;priority=urgent" />
    <lookup-entry key="13" value="message-name=RAPDataNeeded Not Handled Event;state-name=RAPDataNeededNotHandled;priority=urgent" />
    <lookup-entry key="16" value="message-name=Device Error Event;state-name=DeviceFailure;priority=urgent" />
    <lookup-entry key="31" value="message-name=Close Lane Event;state-name=CloseLane;priority=urgent" />
    <lookup-entry key="50" value="message-name=Out Of Sync Assist Event;state-name=OutOfSyncNeedAssist;priority=urgent" />
    <lookup-entry key="51" value="message-name=SuspensionDecline Event;state-name=ApproveSuspensionDecline;priority=urgent" />
    <!-- TAR 352409  -->
    <lookup-entry key="52" value="message-name=Training Mode Transaction Event;state-name=StartTrainingModeTrans;priority=urgent" />
    <!-- SR678 -->
    <lookup-entry key="54" value="message-name=Max Coupon Event;state-name=MaxCouponApproval;priority=urgent" />
    <lookup-entry key="55" value="message-name=Max Coupon Finalization Event;state-name=CouponWarningAtFinalization;priority=urgent" />
	<lookup-entry key="56" value="message-name=Invalid Barcode Event;state-name=InvalidBarcode;priority=urgent" /><!--SR879-->
    <lookup-entry key="57" value="message-name=Go To Lane Event;state-name=SMDataEntryGoToLane;priority=urgent" /><!--SR831-->
	<lookup-entry key="60" value="message-name=Generic Delayed Event;state-name=GenericDelayed;priority=urgent" /> <!--Generic Delayed -->
	<!-- +SSCOI-45690 -->
	<!-- <lookup-entry key="61" value="message-name=Check On Lane Event;state-name=CheckOnLane;priority=urgent" /> -->
	<!-- <lookup-entry key="62" value="message-name=Check On Lane Rap Event;state-name=CheckOnLaneRap;priority=urgent" /> -->
	<!-- -SSCOI-45690 -->
  </lookup-table>
  <lookup-table name="ControlCommandsTable" key-type="string" value-type="int">
    <lookup-entry key="set-transaction-state" value="OPERATION_SET_XACT_STATE" />
    <lookup-entry key="enter-store-mode" value="OPERATION_ENTER_STORE_MODE" />
    <lookup-entry key="exit-store-mode" value="OPERATION_EXIT_STORE_MODE" />
    <lookup-entry key="end" value="OPERATION_XACT_END" />
    <lookup-entry key="begin" value="OPERATION_XACT_BEGIN" />
    <lookup-entry key="validate-operator" value="OPERATION_VALIDATE_OPERATOR" />
    <lookup-entry key="set-light-state" value="OPERATION_SET_LIGHT_STATE" />
    <lookup-entry key="connect" value="OPERATION_CONNECT" />
    <lookup-entry key="disconnect" value="OPERATION_DISCONNECT" />
    <lookup-entry key="sign-on" value="OPERATION_SIGNON" />
    <lookup-entry key="sign-off" value="OPERATION_SIGNOFF" />
    <lookup-entry key="disconnect-server" value="OPERATION_DISCONNECT_SERVER" />
    <lookup-entry key="reload-options" value="OPERATION_RELOAD_OPTIONS" />
    <lookup-entry key="acquire-exclusive-access" value="OPERATION_ACQUIRE_EXCLUSIVE" />
    <lookup-entry key="release-exclusive-access" value="OPERATION_RELEASE_EXCLUSIVE" />
    <lookup-entry key="initialize" value="OPERATION_INITIALIZE" /><!--SR969-->
    <lookup-entry key="assist-mode-not-available" value="OPERATION_XACT_ASSISTMODENOTAVAILABLE" />
    <lookup-entry key="assist-mode-available" value="OPERATION_XACT_ASSISTMODEAVAILABLE" />
  </lookup-table>
  <lookup-table name="GetCommandsTable" key-type="string" value-type="int">
    <lookup-entry key="request-enable-assist-mode" value="GET_REQUEST_ENABLE_AM" />
    <lookup-entry key="current-approval-code" value="GET_CURRENT_APPROVAL_CODE" />
    <lookup-entry key="rap-data-available" value="GET_RAP_DATA_AVAILABLE" />
    <lookup-entry key="rap-data" value="GET_RAP_DATA" />
    <lookup-entry key="previous-view" value="GET_PREVIOUS_VIEW" />
    <lookup-entry key="rap-data-pending-count" value="GET_DATA_PENDING_COUNT" />
    <lookup-entry key="connection-mode" value="GET_CONNECTION_MODE" />
    <lookup-entry key="remote-connection-handheld" value="GET_REMOTE_CONNECTION_HANDHELD" />
    <lookup-entry key="remote-connection-name" value="GET_REMOTE_CONNECTION_NAME" />
    <lookup-entry key="request-enable-handheld-assist-mode" value="GET_REQUEST_ENABLE_HH_AM" />
  </lookup-table>
  <lookup-table name="RemoteDataCommandsTable" key-type="string" value-type="string">
    <lookup-entry key="MainScreen" value="Main Screen" />
    <lookup-entry key="release" value="Release Exclusive Access Event" />
    <lookup-entry key="AllLaneStatusSummary" value="All Lane Status Summary" />
    <lookup-entry key="toggle" value="Assist Mode Toggle" />
  </lookup-table>
  <lookup-table name="SelectButtonTable" key-type="string" value-type="string">
    <lookup-entry key="HHAssistModeButton" value="AssistModeButton" />
    <lookup-entry key="HHLaneStatusButton" value="LaneStatusButton" />
  </lookup-table>
  <lookup-table name="SelectKeyDownTable" key-type="int" value-type="string">
    <lookup-entry key="48" value="NumericKeyPad2" />
    <lookup-entry key="49" value="NumericKeyPad1" />
    <lookup-entry key="50" value="NumericKeyPad1" />
    <lookup-entry key="51" value="NumericKeyPad1" />
    <lookup-entry key="52" value="NumericKeyPad1" />
    <lookup-entry key="53" value="NumericKeyPad1" />
    <lookup-entry key="54" value="NumericKeyPad1" />
    <lookup-entry key="55" value="NumericKeyPad1" />
    <lookup-entry key="56" value="NumericKeyPad1" />
    <lookup-entry key="57" value="NumericKeyPad1" />
    <lookup-entry key="27" value="NumericKeyPad3" />
    <lookup-entry key="13" value="NumericKeyPad4" />
    <lookup-entry key="190" value="NumericKeyPad5" />
    <lookup-entry key="96" value="NumericKeyPad2" />
    <lookup-entry key="97" value="NumericKeyPad1" />
    <lookup-entry key="98" value="NumericKeyPad1" />
    <lookup-entry key="99" value="NumericKeyPad1" />
    <lookup-entry key="100" value="NumericKeyPad1" />
    <lookup-entry key="101" value="NumericKeyPad1" />
    <lookup-entry key="102" value="NumericKeyPad1" />
    <lookup-entry key="103" value="NumericKeyPad1" />
    <lookup-entry key="104" value="NumericKeyPad1" />
    <lookup-entry key="105" value="NumericKeyPad1" />
    <lookup-entry key="110" value="NumericKeyPad5" />
  </lookup-table>
  <lookup-table name="EventCommandsTable" key-type="string" value-type="string">
    <lookup-entry key="add-other-event" value="Add Other Event" />
    <lookup-entry key="security" value="Security Event" />
    <lookup-entry key="coupon" value="Coupon Event" />
    <lookup-entry key="void" value="Void Event" />
    <lookup-entry key="age-restriction" value="Age Restriction Event" />
    <lookup-entry key="visual-validation" value="Visual Validation Event" />
    <lookup-entry key="hopper-substitution" value="Hopper Substitution Event" />
    <lookup-entry key="call-for-help" value="Call For Help Event" />
    <lookup-entry key="other-payment" value="Other Payment Event" />
    <lookup-entry key="suspend" value="Suspend Event" />
    <lookup-entry key="price-required" value="Price Required Event" />
    <lookup-entry key="unknown-item" value="Unknown Item Event" />
    <lookup-entry key="recalled-item" value="Recalled Item Event" />
    <lookup-entry key="time-restricted-item" value="Time Restricted Item Event" />
    <lookup-entry key="sig-cap" value="Sig Cap Event" />
    <lookup-entry key="application-error" value="Application Error Event" />
    <lookup-entry key="device-error" value="Device Error Event" />
    <lookup-entry key="quantity-restricted-item" value="Quantity Restricted Item Event" />
    <lookup-entry key="undeactivated-item" value="Undeactivated Item Event" />
    <lookup-entry key="can-suspend-now" value="Can Suspend Now Event" />
    <lookup-entry key="cancel-application-error" value="Cancel Application Error Event" />
    <lookup-entry key="media-low" value="Media Low Event" />
    <lookup-entry key="no-rap-data-needed" value="No RAP Data Needed Event" />
    <lookup-entry key="rap-data-needed" value="RAP Data Needed Event" />
    <lookup-entry key="normal-item" value="Normal Item Event" />
    <lookup-entry key="out-of-service" value="Out Of Service Event" />
    <lookup-entry key="return-to-service" value="Return To Service Event" />
    <lookup-entry key="ready-to-collect" value="Ready To Collect Event" />
    <lookup-entry key="ready-to-suspend" value="Ready To Suspend Event" />
    <lookup-entry key="switch-context" value="Switch Context Event" />
    <lookup-entry key="switch-lane-context" value="Switch Lane Context Event" />
    <lookup-entry key="remote-data" value="Remote Data Event" />
    <lookup-entry key="restricted-not-allowed" value="Restricted Not Allowed Event" />
    <lookup-entry key="suspension-decline" value="SuspensionDecline Event" />
    <!--    TAR 352409  -->
    <lookup-entry key="enable-security" value="Enable Security Event" />
    <!-- sr683 -->
    <lookup-entry key="disable-security" value="Disable Security Event" />
    <!-- sr683 -->
    <!-- (+SR831) -->
    <lookup-entry key="reset-disable-handling" value="Reset Handling Event" />
    <lookup-entry key="disable-rap-hhrap-handling" value="Disable Rap and HHRap Handling Event" />
    <lookup-entry key="disable-rap-handling" value="Disable Rap Handling Event" />
    <lookup-entry key="disable-hhrap-handling" value="Disable HHRap Handling Event" />
    <!-- (-SR831) -->
    <lookup-entry key="assist-at-lane" value="Assist At Lane Event" /><!--SR803-->
    <lookup-entry key="no-sale" value="No Sale Event" /> <!-- sscoadk-321 -->
	<lookup-entry key="generic-delayed" value="Generic Delayed Event" />

  </lookup-table>
  <lookup-table name="AddOtherEventCommandTable" key-type="string" value-type="string">
    <lookup-entry key="MEDIA" value="Media Event" />
    <lookup-entry key="EnableNumItems" value="Enable NumItems Event" />
    <lookup-entry key="DisableNumItems" value="Disable NumItems Event" />
    <lookup-entry key="StartTransactionEnterAM" value="Start Transaction Enter AM Event" />
    <lookup-entry key="StartTransaction" value="Start Transaction Event" />
    <lookup-entry key="UIInitialize" value="Initialize UI" />
    <lookup-entry key="AssistModeSizeToFullScreen" value="Assist Mode Size To FullScreen" />
	<lookup-entry key="AssistModeToggleToMain" value="*" />
	<lookup-entry key="AssistModeToggleToMainExit" value="*" />
	<lookup-entry key="AssistModeSizeToPartialScreen" value="*" />
	<lookup-entry key="AssistModeRestore" value="*" />
	<lookup-entry key="AssistModeToggleToPartial" value="*" />
	<lookup-entry key="AssistModeRefreshLaneStatus" value="*" />
	<lookup-entry key="RAPInitiateTransactionAssistMode" value="*" />
	<lookup-entry key="RapInitiateTransactionDataNeeded" value="*" />
  </lookup-table>
  <lookup-table name="ApprovalCommandTable" key-type="string" value-type="string">
    <lookup-entry key="add-other-event" value="Add Other Approval" />
    <lookup-entry key="security" value="Security Approval" />
    <lookup-entry key="coupon" value="Coupon Approval" />
    <lookup-entry key="void" value="Void Approval" />
    <lookup-entry key="age-restriction" value="Age Restriction Approval" />
    <lookup-entry key="visual-validation" value="Visual Validation Approval" />
    <lookup-entry key="call-for-help" value="Call For Help Approval" />
	<lookup-entry key="other-payment" value="Other Payment Approval" />
	<lookup-entry key="suspend" value="Suspend Approval" />
	<lookup-entry key="price-required" value="Price Required Approval" />
	<lookup-entry key="unknown-item" value="Unknown Item Approval" />
	<lookup-entry key="recalled-item" value="Recalled Item Approval" />
	<lookup-entry key="time-restricted-item" value="Time Restricted Item Approval" />
	<lookup-entry key="sig-cap" value="Sig Cap Approval" />
	<lookup-entry key="application-error" value="Application Error Approval" />
	<lookup-entry key="device-error" value="Device Error Approval" />
	<lookup-entry key="quantity-restricted-item" value="Quantity Restricted Item Approval" />
	<lookup-entry key="undeactivated-item" value="Undeactivated Item Approval" />
	<lookup-entry key="restricted-not-allowed" value="Restricted Not Allowed Approval" />
	<lookup-entry key="remote" value="Remote Approval" />
	<lookup-entry key="hopper-substitution" value="Hopper Substitution Approval" />
	<lookup-entry key="suspension-decline" value="SuspensionDecline Approval" />
	<lookup-entry key="picklist-assist" value="Picklist Assist Approval" />
	<lookup-entry key="no-sale" value="No Sale Approval" />        
	<lookup-entry key="generic-delayed" value="Generic Delayed Approval" />

  </lookup-table>
  <!-- ============================================================================ -->
  <!-- Section:  Message definitions                                                -->
  <!-- ============================================================================ -->
  <msg-list>
    <msg-definition name="Initialize" value="0x00000001" />
    <msg-definition name="Terminate" value="0x00000002" />
    <msg-definition name="Event Command" value="0x00000003" />
    <msg-definition name="Can Approve Command" value="0x00000004" />
    <msg-definition name="Get Approval Command" value="0x00000005" />
    <msg-definition name="Approval Command" value="0x00000006" />
    <msg-definition name="Control Command" value="0x00000007" />
    <msg-definition name="Get Command" value="0x00000008" />
    <msg-definition name="Set Command" value="0x00000009" />
    <msg-definition name="Add Other Event" value="0x0000000a" />
    <msg-definition name="Security Event" value="0x0000000b" />
    <msg-definition name="Coupon Event" value="0x0000000c" />
    <msg-definition name="Void Event" value="0x0000000d" />
    <msg-definition name="Age Restriction Event" value="0x0000000e" />
    <msg-definition name="Visual Validation Event" value="0x0000000f" />
    <msg-definition name="Call For Help Event" value="0x00000010" />
    <msg-definition name="Other Payment Event" value="0x00000011" />
    <msg-definition name="Suspend Event" value="0x00000012" />
    <msg-definition name="Price Required Event" value="0x00000013" />
    <msg-definition name="Unknown Item Event" value="0x00000014" />
    <msg-definition name="Recalled Item Event" value="0x00000015" />
    <msg-definition name="Time Restricted Item Event" value="0x00000016" />
    <msg-definition name="Sig Cap Event" value="0x00000017" />
    <msg-definition name="Application Error Event" value="0x00000018" />
    <msg-definition name="Device Error Event" value="0x00000019" />
    <msg-definition name="Quantity Restricted Item Event" value="0x0000001a" />
    <msg-definition name="Undeactivated Item Event" value="0x0000001b" />
    <msg-definition name="Can Suspend Now Event" value="0x0000001c" />
    <msg-definition name="Cancel Application Error Event" value="0x0000001d" />
    <msg-definition name="Media Low Event" value="0x0000001e" />
    <msg-definition name="No RAP Data Needed Event" value="0x0000001f" />
    <msg-definition name="RAP Data Needed Event" value="0x00000020" />
    <msg-definition name="Normal Item Event" value="0x00000021" />
    <msg-definition name="Out Of Service Event" value="0x00000022" />
    <msg-definition name="Return To Service Event" value="0x00000023" />
    <msg-definition name="Ready To Collect Event" value="0x00000024" />
    <msg-definition name="Ready To Suspend Event" value="0x00000025" />
    <msg-definition name="Add Other Approval" value="0x00000026" />
    <msg-definition name="Security Approval" value="0x00000027" />
    <msg-definition name="Coupon Approval" value="0x00000028" />
    <msg-definition name="Void Approval" value="0x00000029" />
    <msg-definition name="Age Restriction Approval" value="0x0000002a" />
    <msg-definition name="Visual Validation Approval" value="0x0000002b" />
    <msg-definition name="Call For Help Approval" value="0x0000002c" />
    <msg-definition name="Other Payment Approval" value="0x0000002d" />
    <msg-definition name="Suspend Approval" value="0x0000002e" />
    <msg-definition name="Price Required Approval" value="0x0000002f" />
    <msg-definition name="Unknown Item Approval" value="0x00000030" />
    <msg-definition name="Recalled Item Approval" value="0x00000031" />
    <msg-definition name="Time Restricted Item Approval" value="0x00000032" />
    <msg-definition name="Sig Cap Approval" value="0x00000033" />
    <msg-definition name="Application Error Approval" value="0x00000034" />
    <msg-definition name="Device Error Approval" value="0x00000035" />
    <msg-definition name="Quantity Restricted Item Approval" value="0x00000036" />
    <msg-definition name="Undeactivated Item Approval" value="0x00000037" />
    <msg-definition name="Set Transaction State" value="0x00000038" />
    <msg-definition name="Enter Store Mode" value="0x00000039" />
    <msg-definition name="Exit Store Mode" value="0x0000003a" />
    <msg-definition name="Transaction End" value="0x0000003b" />
    <msg-definition name="Transaction Begin" value="0x0000003c" />
    <msg-definition name="Validate Operator" value="0x0000003d" />
    <msg-definition name="Set Light State" value="0x0000003e" />
    <msg-definition name="Normal Item Event - Alert" value="0x0000003f" />
    <msg-definition name="Normal Item Event - POS Message" value="0x00000040" />
    <msg-definition name="Enable Assist Mode Button" value="0x00000041" />
    <msg-definition name="Disable Assist Mode Button" value="0x00000042" />
    <msg-definition name="Media Event" value="0x00000043" />
    <msg-definition name="Enable NumItems Event" value="0x00000044" />
    <msg-definition name="Disable NumItems Event" value="0x00000045" />
    <msg-definition name="Input Event Command" value="0x00000046" />
    <msg-definition name="Connection Attempt" value="0x00000047" />
    <msg-definition name="Sign On Attempt" value="0x00000048" />
    <msg-definition name="Switch Context" value="0x00000049" />
    <msg-definition name="Invalid Birthday" value="0x0000004a" />
    <msg-definition name="Start Transaction Enter AM Event" value="0x0000004b" />
    <msg-definition name="Exit Assist Mode" value="0x0000004c" />
    <msg-definition name="Cancel Transaction Generic Event" value="0x0000004d" />
    <msg-definition name="Cancel Transaction Event" value="0x0000004e" />
    <msg-definition name="Verify Signature Event" value="0x0000004f" />
    <msg-definition name="Assisted Tender Event" value="0x00000050" />
    <msg-definition name="Bag Area Backup Event" value="0x00000051" />
    <msg-definition name="Safety Cover Open Event" value="0x00000052" />
    <msg-definition name="Assisted Endorsement Event" value="0x00000053" />
    <msg-definition name="Close Lane Event" value="0x00000054" />
    <msg-definition name="Call For Help Outside Transaction Event" value="0x00000055" />
    <msg-definition name="WLDB Failure Event" value="0x00000056" />
    <msg-definition name="Collection Event" value="0x00000057" />
    <msg-definition name="Host Offline Event" value="0x00000058" />
    <msg-definition name="Reload Options" value="0x00000059" />
    <msg-definition name="Remote Approval" value="0x0000005a" />
    <msg-definition name="Initialize UI" value="0x0000005b" />
    <msg-definition name="Assist Mode Size To FullScreen" value="0x0000005c" />
    <msg-definition name="Switch Context Event" value="0x0000005d" />
    <msg-definition name="Disconnect" value="0x0000005e" />
    <msg-definition name="Switch Lane Context Event" value="0x0000005f" />
    <msg-definition name="Multipack Item Event" value="0x00000060" />
    <msg-definition name="Out Of Sync Stop Event" value="0x00000061" />
    <msg-definition name="Out Of Sync Assist Event" value="0x00000062" />
    <msg-definition name="Remote Data Event" value="0x00000063" />
    <msg-definition name="Release Exclusive Access Event" value="0x00000064" />
    <msg-definition name="Light State Change" value="0x00000065" />
    <msg-definition name="Disconnect Handheld" value="0x00000066" />
    <msg-definition name="Immediate Intervention" value="0x00000067" />
    <msg-definition name="Enable Assist Mode Button 2" value="0x00000068" />
    <msg-definition name="Connection Complete" value="0x00000069" />
    <msg-definition name="Release Control For SCOTAPP" value="0x0000006a" />
    <msg-definition name="All Lane Status Summary" value="0x0000006b" />
    <msg-definition name="Assist Mode Toggle" value="0x0000006c" />
    <msg-definition name="Generate Alert Event" value="0x0000006d" />
    <msg-definition name="Start Transaction Event" value="0x0000006c" />
    <msg-definition name="Training Mode Transaction Event" value="0x0000006e" />
    <msg-definition name="Max Coupon Event" value="0x0000006f" />
    <msg-definition name="Max Coupon Finalization Event" value="0x00000070" />
    <msg-definition name="Button Press" value="0x20000001" />
    <msg-definition name="Update Buttons" value="0x20000002" />
    <msg-definition name="Update Buttons In Lane Status" value="0x20000003" />
    <msg-definition name="Confirm Suspend From Other Payment" value="0x20000004" />
    <msg-definition name="Confirm Suspend From Lane Status" value="0x20000005" />
    <msg-definition name="Restricted Not Allowed Event" value="0x20000006" />
    <msg-definition name="Restricted Not Allowed Approval" value="0x20000007" />
    <msg-definition name="RAPDataNeeded Not Handled Event" value="0x20000008" />
    <msg-definition name="Check Handheld" value="0x20000009" />
    <msg-definition name="Transition From Intervention" value="0x2000000a" />
    <msg-definition name="Transition To Delayed Intervention" value="0x2000000b" />
    <msg-definition name="Hopper Substitution Event" value="0x2000000c" />
    <msg-definition name="Hopper Substitution Approval" value="0x2000000d" />
    <msg-definition name="Handle Assist Mode 2" value="0x2000000e" />
    <msg-definition name="SuspensionDecline Approval" value="0x2000000f" />
    <msg-definition name="SuspensionDecline Event" value="0x20000010" />
    <msg-definition name="Enable Security Event" value="0x20000011" />
    <msg-definition name="Disable Security Event" value="0x20000012" />
    <msg-definition name="Main Screen" value="0x20000013" />
	<msg-definition name="Invalid Barcode Event" value="0x20000014" /> <!--SR879-->
    <!-- (+SR831) -->
    <msg-definition name="Go To Lane Event" value="0x20000015" />
    <msg-definition name="Reset Handling Event" value="0x20000016" />
    <msg-definition name="Disable Rap and HHRap Handling Event" value="0x20000017" />
    <msg-definition name="Disable Rap Handling Event" value="0x20000018" />
    <msg-definition name="Disable HHRap Handling Event" value="0x20000019" />
    <!-- (-SR831) -->
    <msg-definition name="Assist At Lane Event" value="0x2000001a" /><!--SR803-->
    <msg-definition name="Picklist Assist Approval" value="0x2000001b" />
    <msg-definition name="No Sale Event" value="0x2000001c" /> <!-- sscoadk-321 -->
    <msg-definition name="No Sale Approval" value="0x2000001d" /> <!-- sscoadk-321 -->
    <!-- +RAPLite -->
    <msg-definition name="Check Intervention" value="0x2000001e" />
    <msg-definition name="Check RAPLite Intervention Handling" value="0x2000001f" />
    <!-- -RAPLite -->
	<msg-definition name="Generic Delayed Event" value="0x20000020" />
	<msg-definition name="Generic Delayed Approval" value="0x20000021" />
  <msg-definition name="Save Generic Delayed Event Info" value="0x20000022" />
  <msg-definition name="Assist Mode Not Available Event" value="0x20000023" />
  <msg-definition name="Assist Mode Available Event" value="0x20000024" />
 <!-- <msg-definition name="No Sale Button" value="0x20000025" /> VSTS-151659: no need this as the NoSaleButton has been define internally -->
  </msg-list>
  <!-- ============================================================================ -->
  <!-- Section:  Action definitions                                                 -->
  <!-- ============================================================================ -->
  <action-list>
	<action name="DPCSend" />
    <action name="CanApproveCommand" />
    <action name="EventCommand" />
    <action name="AddOtherEventCommand" />
    <action name="ControlCommand" />
    <action name="ApprovalCommand" />
    <action name="GetApprovalCommand" />
    <action name="GetCommand" />
    <action name="SetCommand" />
    <action name="LoadConfiguration" />
    <action name="SelectButton" />
    <action name="EnableButton" />
    <action name="DisableButton" />
    <action name="SwitchContext" />
    <action name="SetTransactionState" />
    <action name="EnterStoreMode" />
    <action name="ExitStoreMode" />
    <action name="TransactionBegin" />
    <action name="TransactionEnd" />
    <action name="SetLightState" />
    <action name="ValidateOperator" />
    <action name="AddNormalItem" />
    <action name="ApproveIntervention" />
    <action name="ClearImmediateIntervention" />
    <action name="SaveImmediateIntervention" />
    <action name="SaveDelayedIntervention" />
    <action name="MediaCommand" />
    <action name="ShowControl" />
    <action name="HideControl" />
    <action name="CanSuspendNowEvent" />
    <action name="ConnectCommandRAP" />
    <action name="DisconnectCommand" />
    <action name="SignonCommand" />
    <action name="SignoffCommand" />
    <action name="CheckImmediateIntervention" />
    <action name="CheckDelayedIntervention" />
    <action name="DisplayImmediateIntervention" />
    <action name="CheckDefaultButton" />
    <action name="Append1To9" />
    <action name="Append0" />
    <action name="ClearEntryText" />
    <action name="SetTextColor" />
    <action name="ValidateBirthday" />
    <action name="ShowMessage" />
    <action name="SetText" />
    <action name="NotifyAssistMode" />
    <action name="SwitchContextCommand" />
    <action name="GenerateLocalButtonPress" />
    <action name="IsInputEventEnabled" />
    <action name="SendUnsolicitedData" />
    <action name="CheckAssistModeControl" />
    <action name="IsNotStartTransactionView" />
    <action name="IsNotStartTransactionAMView" />
    <action name="CheckRAPDataNeededEvent" />
    <action name="SaveAsDelayedIntervention" />
    <action name="SetLaneName" />
    <action name="DisplayDelayedIntervention" />
    <action name="DisplayNextDelayedIntervention" />
    <action name="PushbackDelayedIntervention" />
    <action name="SendSuspendRequest" />
    <action name="SaveSuspendRequest" />
    <action name="RequestFullScreenAssistMode" />
    <action name="ReleaseFullScreenAssistMode" />
    <action name="IsOutsideTransaction" />
    <action name="ReloadConfiguration" />
    <action name="ClearApprovedIntervention" />
    <action name="SaveMinimumAge" />
    <action name="ClearRAPDataNeededIntervention" />
    <action name="IsInterventionOutstanding" />
    <action name="ClearLaneStatusWindows" />
    <action name="AppendDot" />
    <action name="ClearReceipt" />
    <action name="SaveRemoteConnection" />
    <action name="IsHandheld" />
    <action name="SwitchContextDelayedIntervention" />
    <action name="DisplayAgeRestrictionInstructionText" />
    <action name="GenerateEvent" />
    <action name="SaveStartTransactionIntervention" />
    <action name="AcquireExclusiveAccess" />
    <action name="ReleaseExclusiveAccess" />
    <action name="SwitchLaneContextCommand" />
    <action name="IsNotImmediateInterventionOutstanding" />
    <action name="DisplayNextImmediateIntervention" />
    <action name="EnableInputEvents" />
    <action name="IsNotConfirmSuspend" />
    <action name="IsNotMaxOfDOBInput" />
    <action name="RemoteDataCommandRAP" />
    <action name="SendInterventionEvent" />
    <action name="SendClientMachineNameEvent" />
    <action name="IsNotHandheld" />
    <action name="SwitchContextImmediateIntervention" />
    <action name="IsExclusiveAccessGranted" />
    <action name="SetReleaseExclusiveAccessRequired" />
    <action name="IsCurrentRemoteConnection" />
    <action name="IsInterventionTypeOutstanding" />
    <action name="DisableAMOnHandheld" />
    <action name="ConnectCommandComplete" />
    <action name="MediaLowEvent" />
    <action name="CheckForDateNotNeededButtonOption" />
    <action name="IsRemoteConnectionInputEnabled" />
    <action name="IsHandheldAssistModeAllowed" />
    <action name="IsAssistModeEnabled" />
    <action name="SendAllLaneStatusSummary" />
    <action name="ClearCurrentIntervention" />
    <action name="SwitchContextRAPDataNeededIntervention" />
    <action name="SelectKeyDown" />
    <action name="ForwardAuxData" />
    <action name="IsCurrentTriliteColor" />
    <action name="IsButtonEnabled" />
    <action name="IsTriliteColorGray" />
    <action name="PushbackImmediateIntervention" />
    <action name="PlaySound" />
    <action name="PlayInterventionSound" />
    <action name="ClearAllInterventions" />
    <action name="MakeInterventionCurrent" />
    <action name="MatchLaneContext" />
    <action name="ClearRemoteIntervention" />
    <action name="DisplayCurrentIntervention" />
    <action name="CompareToCurrentContext" />
    <action name="send-msg" />
    <action name="pop-state" />
    <action name="push-state" />
    <action name="goto-state" />
    <action name="increment-variable" />
    <action name="decrement-variable" />
    <action name="assign-variable" />
    <action name="start-timer" />
    <action name="stop-timer" />
    <action name="IsCurrentInterventionInProgress" />
    <action name="wait-timer" />
    <action name="resend-msg" />
    <action name="evaluate-expression" />
    <action name="set-return-code" />
    <action name="clean-state" />
    <action name="IsLastDelayIntervention" />
    <action name="IsForceApprovalBeforeSuspend" />
    <action name="IsTriliteColorGreen" />
    <action name="IsEntryTextEmpty" />
    <action name="log" />
    <action name="SetUnapprovedRestrictedItemCount" /> <!-- SR803 -->
    <action name="IsHandlingDisabledFor" /> <!-- (SR831) -->
    <action name="CheckForDisplayCashManagementAtRAPOption" /> <!--SR969-->
    <action name="LocaleFormatMask" />
    <!-- +RAPLite -->
    <action name="IsInterventionClearable" />
    <action name="IsRAPLite" />
    <action name="IsTriliteColorRed" />
    <action name="SendRAPLiteEvent" />
    <!-- -RAPLite -->
    <action name="SetCurrentInterventionHandling" />
    <action name="SetEventInterventionHandling" />

    <action name="ClearGenericDelayedIntervention" />
    <action name="DisplayGenericDelayedButtons"/>
    <action name="IsGenericDelayedAsyncIntervention"/>
    <action name="GetRAPLiteHandling"/>
  </action-list>
  <!-- ============================================================================ -->
  <!-- Section:  Rules for state transitions                                        -->
  <!-- ============================================================================ -->
  <context-switch-list>
    <context-switch>
      <context-name>RAPSingle4</context-name>
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>RAPSingle5</context-name>
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>RAPSingle6</context-name>
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>RAPSingle8</context-name>
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>RAPSingle10</context-name>
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>RAPSingle12</context-name>
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>RAPSingle16</context-name>
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>SmAbort</context-name>
      <push-input-controls-setting />
      <disable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>EnterPrice</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>LaneStatus</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveAgeCheck</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>LaneDetail</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveCoupon</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveVisualVerify</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveUnknownItem</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveItemNotForSale</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveQuantityRestrict</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveTimeRestrict</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveHelp</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveHelpOutsideTrx</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveVoid</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveOtherPayment</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveUnDeActivatedItem</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveSignatureCapture</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveCollection</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>CancelTransactionGeneric</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ConfirmSuspend</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>IncorrectItemWeight</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
	<context-switch>
      <context-name>RestrictApprovalFromRAP</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>UnexpectedIncrease</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>BagBoxNotValid</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>SkipBaggingBtnThreshold</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ItemRemovedBtnThreshold</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>BagBoxBtnThreshold</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>NewWeightItem</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>BagItemTimerExpires</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>TakeChangeTimerExpires</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>EASNotActivated</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>PickingUpItemsTimerExpires</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>DeviceFailure</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>WLDBFailure</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>UnexpectedDecrease</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>CloseLane</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>BagAreaBackup</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>SafetyCoverOpen</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>UnDeActivatedItemOnTABeltDetected</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>VerifySignature</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveAssistedTender</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>AssistedEndorsement</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>StartTransaction</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>StartTransactionAM</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ItemsForgotten</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>InsertCouponTimerExpires</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>CollectGiftCardRAP</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>HostOfflineRAP</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>MultiPackItem</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>OutOfSyncStop</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>HopperSubstitution</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>OutOfSyncNeedAssist</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ConfirmSuspendFromOtherPayment</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ConfirmSuspendFromLaneStatus</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveRestrictedNotAllowed</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>StartTrainingModeTrans</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveSuspensionDecline</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>MaxCouponApproval</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>CouponWarningAtFinalization</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>ApproveDelaySecurity</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>AllowSuspend</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>LaneInterventionDetail</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>Alert</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
	<!--SR879-->
	<context-switch>
      <context-name>InvalidBarcode</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <!-- (+SR831) -->
    <context-switch>
      <context-name>SMDataEntryGoToLane</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <!-- (-SR831) -->
    <!-- (+SSCOP-3727) -->
    <context-switch>
      <context-name>SMDataEntryGoToLaneOrHHRap</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>SMDataEntryGoToLaneOrRap</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <!-- (-SSCOP-3727) -->
    <!-- (+)SR803 -->
    <context-switch>
      <context-name>AssistAtLane</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <!-- (-)SR803 -->
	<!-- sscoadk-321+ -->
    <context-switch>
      <context-name>NoSale</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
       <context-name>ApproveNoSale</context-name>
       <push-input-controls-setting />
       <enable-input-controls />
    </context-switch>
	<!-- sscoadk-321- -->
    <context-switch>
      <context-name>AssistModeNotAvailable</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>    
	
	<!-- +POS82549 -->
	<context-switch>
		<context-name>AM_MeijerDigitalVendorCouponChoice</context-name>
		<push-input-controls-setting />
		<disable-input-controls />
	</context-switch>
	<!-- -POS82549 -->
	<!-- (+) SSCOI-46971 -->
	<context-switch>
        <context-name>TakeChangeTimeout</context-name>
        <enable-input-controls />
    </context-switch>
	<!-- (-) SSCOI-46971 -->
	<context-switch>
      <context-name>SmDataEntryGDAsync</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>SmDataEntrySmallGDAsync</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>SmDataEntryNumericSmallGDAsync</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
    <context-switch>
      <context-name>SmDataEntryWithVideoControlGDAsync</context-name>
      <push-input-controls-setting />
      <enable-input-controls />
    </context-switch>
  </context-switch-list>
  <!-- ============================================================================ -->
  <!-- Section:  Rules for state transitions                                        -->
  <!-- ============================================================================ -->
  <application-state-list>
    <application-state>
      <state-name>inactive</state-name>
    </application-state>
    <application-state>
      <state-name>itemization</state-name>
    </application-state>
    <application-state>
      <state-name>tender</state-name>
      <push-assist-mode />
      <entry-rule-list>
        <rule action-name="DisableAMOnHandheld" parameter="context-name=all;button-name=HHAssistModeButton" />
        <rule action-name="assign-variable" parameter="variable-name=tender_state;expression=1" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="assign-variable" parameter="variable-name=tender_state;expression=0" />
      </exit-rule-list>
    </application-state>
    <application-state>
      <state-name>wait-for-approval</state-name>
    </application-state>
    <application-state>
      <state-name>data-needed</state-name>
    </application-state>
    <application-state>
      <state-name>bag-item</state-name>
    </application-state>
    <application-state>
      <state-name>picking-up-items</state-name>
    </application-state>
    <application-state>
      <state-name>security-violation</state-name>
    </application-state>
	<!-- +SSCOI-45690 -->
	
	<application-state>
		<state-name>cashdrawer_open</state-name>
		<push-assist-mode />
		<entry-rule-list>
			<rule action-name="NotifyAssistMode" parameter="enter-store-mode" />
			<transition state-name="NoSaleInProgress" />
		</entry-rule-list>
	</application-state>
	<application-state>
		<state-name>cashdrawer_close</state-name>
		<push-assist-mode />
		<entry-rule-list>
			<rule action-name="assign-variable" parameter="no_sale=0" />
			<rule action-name="NotifyAssistMode" parameter="exit-store-mode" />
			<rule action-name="goto-state" parameter="state-name=Main" />
			<transition state-name="NoSaleInProgress" />
		</entry-rule-list>
	</application-state>
	
	<!-- -SSCOI-45690 -->
  </application-state-list>
  <!-- ============================================================================ -->
  <!-- Section:  Rules for state transitions                                        -->
  <!-- ============================================================================ -->
  <rules>
    <procedure name="HandleDelayedInterventionEventDisplay" >
      <procedure-rule-list>
        <rule action-name="SetEventInterventionHandling" />
        <if expression="!IsRAPLite() || (intervention_handling > 0)">
          <rule action-name="DisplayDelayedIntervention" parameter="data-source=CMSMReceipt;receipt-control=LaneReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
        </if>
        <return />
      </procedure-rule-list>
    </procedure>
    <procedure name="HandleInterventionAlertText" >
      <procedure-rule-list>
        <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" />
        <rule action-name="SetEventInterventionHandling" />
        <if expression="intervention_handling == 2">
          <rule action-name="SetText" parameter="string-id=AlertStatusTextOn;control-name=AlertStatusText" />
        </if>
        <else-if expression="intervention_handling == 1">
          <rule action-name="SetText" parameter="string-id=AlertStatusTextOff;control-name=AlertStatusText" />
        </else-if>
        <return />
      </procedure-rule-list>
    </procedure>
    <!-- ======================================================================== -->
    <!-- State:  Any state                                                        -->
    <!-- Messages:  Initialize from FL to begin the initialization process        -->
    <!--                                                                          -->
    <!--                                                                          -->
    <!--      Message:                  Purpose:                                  -->
    <!--      _____________________     _________________________________________ -->
    <!--      Initialize                Begin the initialization process          -->
    <!-- ======================================================================== -->
    <state name="*">
      <message name="Initialize UI">
        <message-rule-list>
          <rule action-name="ClearReceipt" parameter="data-source=CMSMReceipt" />
        </message-rule-list>
      </message>
      <message name="Check Handheld">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=is_handheld;expression=0" />
          <rule action-name="IsHandheld" />
          <rule action-name="assign-variable" parameter="variable-name=is_handheld;expression=1" />
        </message-rule-list>
      </message>
      <message name="Input Event Command">
        <message-rule-list>
          <rule action-name="IsInputEventEnabled" />
          <rule action-name="IsRemoteConnectionInputEnabled" />
          <rule action-name="SaveRemoteConnection" />
          <rule action-name="SelectKeyDown" parameter="lookup-table-name=SelectKeyDownTable" />
          <rule action-name="SelectButton" parameter="lookup-table-name=SelectButtonTable" />
        </message-rule-list>
      </message>
      <message name="NumericKeyPad1">
        <message-rule-list>
          <rule action-name="increment-variable" parameter="variable-name=number_of_digit" />
          <rule action-name="IsNotMaxOfDOBInput" parameter="number_of_digit" />
          <rule action-name="Append1To9" parameter="transaction-variable=EchoInput" />
          <rule action-name="evaluate-expression" parameter="number_of_digit==1" />
          <rule action-name="EnableButton" parameter="button-name=NumericKeyPad4" />
		  <rule action-name="EnableButton" parameter="button-name=NumericKeyPad3" />
        </message-rule-list>
      </message>
      <message name="NumericKeyPad2">
        <message-rule-list>
          <rule action-name="increment-variable" parameter="variable-name=number_of_digit" />
          <rule action-name="IsNotMaxOfDOBInput" parameter="number_of_digit" />
          <rule action-name="Append0" parameter="transaction-variable=EchoInput" />
          <rule action-name="evaluate-expression" parameter="number_of_digit==1" />
          <rule action-name="EnableButton" parameter="button-name=NumericKeyPad4" />
		  <rule action-name="EnableButton" parameter="button-name=NumericKeyPad3" />
        </message-rule-list>
      </message>
      <message name="NumericKeyPad3">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
          <rule action-name="DisableButton" parameter="button-name=NumericKeyPad4;button-name=NumericKeyPad3" />
        </message-rule-list>
      </message>
      <message name="Event Command">
        <message-rule-list>
          <rule action-name="EventCommand" parameter="lookup-table-name=EventCommandsTable" />
        </message-rule-list>
      </message>
      <message name="Control Command">
        <message-rule-list>
          <rule action-name="ControlCommand" parameter="lookup-table-name=ControlCommandsTable;variable-name=control_command_type" />
          <select>
            <when expression="control_command_type==1">
              <rule action-name="SetTransactionState" />
            </when>
            <when expression="control_command_type==2">
              <rule action-name="send-msg" parameter="message-name=Enter Store Mode;copy-plist=true" />
            </when>
            <when expression="control_command_type==3">
              <rule action-name="send-msg" parameter="message-name=Exit Store Mode;copy-plist=true" />
            </when>
            <when expression="control_command_type==4">
              <rule action-name="send-msg" parameter="message-name=Transaction End" />
            </when>
            <when expression="control_command_type==5">
              <rule action-name="send-msg" parameter="message-name=Transaction Begin" />
            </when>
            <when expression="control_command_type==6">
              <rule action-name="ValidateOperator" />
            </when>
            <when expression="control_command_type==7">
              <rule action-name="send-msg" parameter="message-name=Light State Change;copy-plist=true" />
            </when>
            <when expression="control_command_type==8">
              <rule action-name="send-msg" parameter="message-name=Connection Attempt;copy-plist=true" />
            </when>
            <when expression="control_command_type==9">
              <rule action-name="send-msg" parameter="message-name=Disconnect;copy-plist=true" />
            </when>
            <when expression="control_command_type==10">
              <rule action-name="send-msg" parameter="message-name=Sign On Attempt;copy-plist=true" />
            </when>
            <when expression="control_command_type==11">
              <rule action-name="SignoffCommand" />
            </when>
            <when expression="control_command_type==13">
              <rule action-name="send-msg" parameter="message-name=Exit Assist Mode" />
            </when>
            <when expression="control_command_type==14">
              <rule action-name="ReloadConfiguration" />
              <rule action-name="CheckForDisplayCashManagementAtRAPOption" parameter="view_cm_at_rap"/><!--SR969--> 
            </when>
            <when expression="control_command_type==15">
              <rule action-name="SaveRemoteConnection" />
              <rule action-name="AcquireExclusiveAccess" />
              <rule action-name="AcquireExclusiveAccess" />
            </when>
            <when expression="control_command_type==16">
              <rule action-name="send-msg" parameter="message-name=Release Control For SCOTAPP" />
            </when>
            <!--(+)SR969-->
            <when expression="control_command_type==17">              
              <rule action-name="CheckForDisplayCashManagementAtRAPOption" parameter="view_cm_at_rap"/>
            </when>
            <!--(-)SR969-->
            <when expression="control_command_type==18">
              <rule action-name="send-msg" parameter="message-name=Assist Mode Not Available Event" />
            </when>
            <when expression="control_command_type==19">
              <rule action-name="send-msg" parameter="message-name=Assist Mode Available Event;copy-plist=true" />
            </when>
          </select>
        </message-rule-list>
      </message>
      <message name="Release Control For SCOTAPP">
        <message-rule-list>
          <if expression="!IsInterventionOutstanding()">
            <rule action-name="ReleaseExclusiveAccess" />
          </if>
        </message-rule-list>
      </message>
      <message name="Transition From Intervention">
        <message-rule-list>
          <if expression="IsInterventionOutstanding()">
            <rule action-name="CheckImmediateIntervention">
              <failure-transition>Immediate Intervention</failure-transition>
            </rule>
            <if expression="!CheckDelayedIntervention()">
              <rule action-name="send-msg" parameter="message-name=Transition To Delayed Intervention;copy-plist=true;immediate=true" />
            </if>
            <else>
              <rule action-name="ReleaseExclusiveAccess" />
              <rule action-name="goto-state" parameter="state-name=Main" />
            </else>
          </if>
          <else>
            <rule action-name="ReleaseExclusiveAccess" />
            <rule action-name="goto-state" parameter="state-name=Main" />
          </else>
        </message-rule-list>
      </message>
      <message name="Transition To Delayed Intervention">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=is_on_top_rap_data_needed;expression=0" />
          <rule action-name="SetCurrentInterventionHandling" />
          <rule action-name="DisplayCurrentIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;instruction-text-variable=InstructionText;transaction-variable=InstructionText;lane-status3-text=LaneStateWindow3" />
          <if expression="intervention_handling == 2">
            <rule action-name="SetText" parameter="string-id=AlertStatusTextOn;control-name=AlertStatusText" />
          </if>
          <else-if expression="intervention_handling == 1">
            <rule action-name="SetText" parameter="string-id=AlertStatusTextOff;control-name=AlertStatusText" />
          </else-if>
          <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
        </message-rule-list>
      </message>
      <message name="Light State Change">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=trilite_color_changed;expression=0" />
          <if expression="!IsCurrentTriliteColor()">
            <rule action-name="SetLightState" parameter="lane-button=LaneButton;lane-button-text=LaneButtonText;" />
            <rule action-name="send-msg" parameter="message-name=Generate Alert Event;copy-plist=true" />
            <rule action-name="assign-variable" parameter="variable-name=trilite_color_changed;expression=1" />
          </if>
          <else-if expression="alert_outside_trx==1">
            <rule action-name="assign-variable" parameter="variable-name=alert_outside_trx;expression=0" />
            <rule action-name="send-msg" parameter="message-name=Generate Alert Event;copy-plist=true" />
          </else-if>
        </message-rule-list>
      </message>
      <message name="Disable Security Event">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disabled;expression=1" />
          <rule action-name="SetText" parameter="string-id=SecurityDisableStatusTextOff;control-name=SecurityDisableStatusText" />
          <rule action-name="SetText" parameter="string-id=SecurityDisableButtonOn;control-name=SecurityDisableButton" />
          <rule action-name="SetTextColor" parameter="control-name=LaneStateWindow2;color-name=Red" />
          <rule action-name="ShowMessage" parameter="string-id=SecurityDisableText;transaction-variable=LaneStateWindow2" />
        </message-rule-list>
      </message>
      <message name="Enable Security Event">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=security_disabled;expression=0" />
          <rule action-name="SetText" parameter="string-id=SecurityDisableStatusTextOn;control-name=SecurityDisableStatusText" />
          <rule action-name="SetText" parameter="string-id=SecurityDisableButtonOff;control-name=SecurityDisableButton" />
          <rule action-name="SetTextColor" parameter="control-name=LaneStateWindow2;color-name=Black" />
          <rule action-name="ClearEntryText" parameter="transaction-variable=LaneStateWindow2" />
        </message-rule-list>
      </message>
      <message name="Generate Alert Event">
        <message-rule-list>
          <if expression="!IsTriliteColorGray()">
            <if expression="trilite_color_changed==1">
                <rule action-name="SendRAPLiteEvent" parameter="operation=intervention;" />
                <rule action-name="assign-variable" parameter="variable-name=trilite_color_changed;expression=0" />
            </if>
            <rule action-name="SendInterventionEvent" parameter="operation=intervention" />
          </if>
		  <if expression="security_disabled != 0">
			<rule action-name="SetTextColor" parameter="control-name=LaneStateWindow2;color-name=Red" />
		  </if>
          <if expression="IsOutsideTransaction()">
            <rule action-name="assign-variable" parameter="variable-name=alert_outside_trx;expression=1" />
            <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=LaneStatusTitle" />
          </if>
          <else-if expression="IsTriliteColorGreen()">
			  <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=LaneStatusTitle" />
              <if expression="IsInterventionOutstanding()">
                <if expression="is_rap_single4==0">
                    <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=ExpandReceiptButtonText" />
                </if>
              </if>
          </else-if>
		  <else-if expression="IsTriliteColorGray()">
		     <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=LaneStatusTitle" />
          </else-if>
		  <else-if expression="store_mode!=0">
            <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=LaneStatusTitle" />
          </else-if>
		  <else-if expression="is_rap_single4==1">
             <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=LaneStatusTitle" />
          </else-if>
          <else>
			 <rule action-name="SetTextColor" parameter="control-name=LaneStateWindow2;color-name=Black" />
		     <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=ExpandReceiptButtonText" />
          </else>
        </message-rule-list>
      </message>
      <message name="Disconnect">
        <message-rule-list>
          <if expression="IsCurrentRemoteConnection()">
            <if expression="intervention_in_progress ==1">
               <rule action-name="assign-variable" parameter="variable-name=intervention_in_progress;expression=0" />
            </if>
            <if expression="is_GDAsyn ==1">
               <rule action-name="assign-variable" parameter="variable-name=is_GDAsyn;expression=0" />
            </if>
            <rule action-name="PushbackDelayedIntervention" />
            <rule action-name="ClearCurrentIntervention" />
            <rule action-name="ReleaseExclusiveAccess" />
            <rule action-name="DisconnectCommand">
              <failure-transition>Logged Off</failure-transition>
            </rule>
			<rule action-name="DPCSend" parameter="type=2"/> 
            <rule action-name="goto-state" parameter="state-name=Main" />
          </if>
          <else>
            <rule action-name="DisconnectCommand" />
          </else>
        </message-rule-list>
      </message>
      <message name="Disconnect Handheld">
        <message-rule-list>
          <rule action-name="DisconnectCommand" />
          <transition state-name="Logged Off" />
        </message-rule-list>
      </message>
      <message name="Exit Assist Mode">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-assist-mode" />
        </message-rule-list>
      </message>
      <message name="Connection Attempt">
        <message-rule-list>
          <rule action-name="ConnectCommandRAP" />
          <rule action-name="SetLaneName" parameter="button-name=LaneButton" />
          <rule action-name="SetLaneName" parameter="button-name=LaneCaption" />
        </message-rule-list>
      </message>
      <message name="Connection Complete">
        <message-rule-list>
		  <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=OnRapConnect" /> <!--SSCOI-45994-->
          <rule action-name="ConnectCommandComplete" />
          <rule action-name="SendClientMachineNameEvent" />
          <if expression="!IsExclusiveAccessGranted()">
            <rule action-name="SaveRemoteConnection" />
          </if>
		  <if expression="IsInterventionOutstanding()">
              <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=ExpandReceiptButtonText" />
          </if>
	      <if expression="is_rap_single4==1">
              <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=LaneStatusTitle" />
          </if>
        </message-rule-list>
      </message>
      <message name="Sign On Attempt">
        <message-rule-list>
            <if expression="intervention_in_progress ==1">
               <rule action-name="assign-variable" parameter="variable-name=intervention_in_progress;expression=0" />
            </if>
            <if expression="is_GDAsyn ==1">
               <rule action-name="assign-variable" parameter="variable-name=is_GDAsyn;expression=0" />
            </if>
          <rule action-name="SignonCommand" />
        </message-rule-list>
      </message>
      <message name="Set Command">
        <message-rule-list>
          <rule action-name="SetCommand" />
        </message-rule-list>
      </message>
      <message name="Get Command">
        <message-rule-list>
          <rule action-name="GetCommand" parameter="lookup-table-name=GetCommandsTable" />
        </message-rule-list>
      </message>
      <message name="Switch Context Event">
        <message-rule-list>
          <rule action-name="SwitchContextCommand" />
        </message-rule-list>
      </message>
      <message name="Switch Lane Context Event">
        <message-rule-list>
          <rule action-name="SwitchLaneContextCommand" />
          <rule action-name="assign-variable" parameter="variable-name=is_attract;expression=0" />
          <if expression="MatchLaneContext(context-name=Attract)">
			<rule action-name="DPCSend" parameter="type=3;text=1" />
		    <rule action-name="assign-variable" parameter="variable-name=is_attract;expression=1" />
          </if>
		  <else-if expression="MatchLaneContext(context-name=LaneClosed)">
            <rule action-name="DPCSend" parameter="type=3;text=0" />
          </else-if>
          <else>
            <rule action-name="DPCSend" parameter="type=3;text=2" />
          </else>
		  <rule action-name="send-msg" parameter="context-name=LaneStatus;message-name=Update Buttons" />
        </message-rule-list>
      </message>
      <message name="Remote Data Event">
        <message-rule-list>
          <rule action-name="RemoteDataCommandRAP" parameter="lookup-table-name=RemoteDataCommandsTable" />
		  <rule action-name="DPCSend" parameter="type=1;text=Remote Data" />
        </message-rule-list>
      </message>
      <message name="Normal Item Event">
        <message-rule-list>
          <rule action-name="AddNormalItem" parameter="data-source=CMSMReceipt;lane-button=LaneButton;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3;assist-mode-button=AssistModeButton;lane-status-button=LaneStatusButton;receipt-control=LaneReceipt;item-count-text=ItemAmount;total-amount-text=SMTotalAmount" />
        </message-rule-list>
      </message>
      <message name="Approval Command">
        <message-rule-list>
          <rule action-name="ApprovalCommand" parameter="lookup-table-name=ApprovalCommandTable" />
        </message-rule-list>
      </message>
      <message name="Remote Approval">
        <message-rule-list>
		  <rule action-name="DPCSend" parameter="type=2" />
          <if expression="security_disabled!=1">
            <if expression="!IsInterventionOutstanding()">
              <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
              <transition state-name="Main" />
            </if>
          </if>
          <else>
            <if expression="!IsInterventionOutstanding()">
              <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status3-text=LaneStateWindow3" />
              <transition state-name="Main" />
            </if>
          </else>
          <rule action-name="IsLastDelayIntervention" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <if expression="IsCurrentInterventionInProgress()">
            <rule action-name="DisplayCurrentIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <if expression="!IsNotImmediateInterventionOutstanding()">
              <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </if>
            <else>
              <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </else>
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Security Approval">
        <message-rule-list>
          <rule action-name="ClearImmediateIntervention" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
		    <rule action-name="ClearApprovedIntervention" parameter="type=security" />
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Coupon Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=coupon" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="SuspensionDecline Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=suspension-decline" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Void Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=void" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Age Restriction Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=age-restriction" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
		      <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Visual Validation Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=visual-validation" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
		      <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Hopper Substitution Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=hopper-substitution" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Call For Help Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=call-for-help" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Other Payment Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=other-payment" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Suspend Approval">
        <message-rule-list>
          <!-- <rule action-name="ClearApprovedIntervention" parameter="type=suspend" /> -->
          <rule action-name="ClearCurrentIntervention" parameter="type=suspend" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Price Required Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=price-required" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Unknown Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=unknown-item" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
		      <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Recalled Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=recalled-item" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Time Restricted Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=time-restricted-item" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Restricted Not Allowed Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=restricted-not-allowed" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Sig Cap Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=sig-cap" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Application Error Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=application-error" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Device Error Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=device-error" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Quantity Restricted Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=quantity-restricted-item" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Undeactivated Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=undeactivated-item" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
	  <message name="Picklist Assist Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=rap-data-needed" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Generic Delayed Approval">
        <message-rule-list>
          <rule action-name="ClearGenericDelayedIntervention" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="is_GDAsyn ==1">
            <rule action-name="assign-variable" parameter="variable-name=is_GDAsyn;expression=0" />
            <rule action-name="assign-variable" parameter="variable-name=intervention_in_progress;expression=0" />
            <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Save Generic Delayed Event Info;copy-plist=true" />
            <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=GenericDelayedApprove" />
            <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
            <if expression="!IsNotImmediateInterventionOutstanding()">
              <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </if>
            <else>
              <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </else>
            <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
          </else>            
        </message-rule-list>
      </message>
      <message name="Can Approve Command">
        <message-rule-list>
          <rule action-name="CanApproveCommand" />
        </message-rule-list>
      </message>
      <message name="Get Approval Command">
        <message-rule-list>
          <rule action-name="GetApprovalCommand" />
        </message-rule-list>
      </message>
      <message name="Terminate">
        <message-rule-list>
          <rule action-name="ClearReceipt" parameter="data-source=CMSMReceipt;item-count-static-text=ItemText;item-count-text=ItemAmount;total-amount-static-text=TotalText;total-amount-text=TotalAmount;visible=false" />
          <transition state-name="Unitialized" />
        </message-rule-list>
      </message>
      <message name="Add Other Event">
        <message-rule-list>
          <rule action-name="AddOtherEventCommand" parameter="lookup-table-name=AddOtherEventCommandTable" />
        </message-rule-list>
      </message>
      <message name="Media Event">
        <message-rule-list>
          <rule action-name="MediaCommand" parameter="data-source=MediaList;receipt-control=RAPMediaList" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="DisplayImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
		  <rule action-name="DPCSend" parameter="type=1;text=RAP Data Needed" />
          <if expression="!CheckRAPDataNeededEvent(lookup-table-name=RAPDataNeededInterventionsTable;variable-name=intervention_handling)">
            <rule action-name="SaveAsDelayedIntervention" parameter="lookup-table-name=RAPDataNeededInterventionsTable" />
          </if>
          <else>
            <rule action-name="SaveImmediateIntervention" />
            <rule action-name="EnableButton" parameter="button-name=LaneButton;context-name=all" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearImmediateIntervention" />
          <rule action-name="ClearRAPDataNeededIntervention" />
		  <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="IsInterventionOutstanding()">
              <if expression="!IsNotImmediateInterventionOutstanding()">
                <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
              </if>
              <else>
                <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
              </else>
		  </if>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Generic Delayed Event">
        <message-rule-list>
          <rule action-name="DisplayImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" />
		  <rule action-name="DPCSend" parameter="type=1;text=RAP Data Needed" />
		  <rule action-name="SaveAsDelayedIntervention" parameter="lookup-table-name=RAPDataNeededInterventionsTable" />
          <rule action-name="GetRAPLiteHandling" parameter="variable-name=intervention_handling" />
          <rule action-name="EnableButton" parameter="button-name=LaneButton;context-name=all" />
          <rule action-name="send-msg" parameter="message-name=Save Generic Delayed Event Info;copy-plist=true" />
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" />
        </message-rule-list>
      </message>
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="ClearReceipt" parameter="data-source=CMSMReceipt;item-count-static-text=ItemText;item-count-text=ItemAmount;total-amount-static-text=TotalText;total-amount-text=TotalAmount;visible=true" />
          <rule action-name="TransactionBegin" />
          <if expression="!CheckAssistModeControl(valid-values=1,3)">
            <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
          </if>
          <else>
            <rule action-name="EnableButton" parameter="context-name=all;button-name=AssistModeButton" />
            <if expression="IsInterventionOutstanding()">
              <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=ExpandReceiptButtonText" />
            </if>
			<if expression="is_rap_single4==1">
              <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=LaneStatusTitle" />
            </if>
          </else>
        </message-rule-list>
      </message>
      <message name="Transaction End">
        <message-rule-list>
          <rule action-name="TransactionEnd" />
          <rule action-name="ClearAllInterventions" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="ClearReceipt" parameter="data-source=CMSMReceipt;item-count-static-text=ItemText;item-count-text=ItemAmount;total-amount-static-text=TotalText;total-amount-text=TotalAmount;visible=false" />
          <if expression="IsExclusiveAccessGranted()">
            <rule action-name="ReleaseExclusiveAccess" />
          </if>
          <rule action-name="assign-variable" parameter="variable-name=suspend_in_progress;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=alert_outside_trx;expression=0" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enable Assist Mode Button">
        <message-rule-list>
          <if expression="!IsAssistModeEnabled()">
            <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
			<rule action-name="DisableButton" parameter="context-name=all;button-name=HHAssistModeButton" />
          </if>
          <else-if expression="CheckAssistModeControl(valid-values=0)">
            <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
			<rule action-name="DisableButton" parameter="context-name=all;button-name=HHAssistModeButton" />
          </else-if>
		  <else-if expression="CheckAssistModeControl(valid-values=3)">
		    <rule action-name="send-msg" parameter="message-name=Enable Assist Mode Button 2;copy-plist=true" />
          </else-if>
          <else-if expression="CheckAssistModeControl(valid-values=2)">
		    <rule action-name="send-msg" parameter="message-name=Handle Assist Mode 2" />
          </else-if>
          <else-if expression="IsOutsideTransaction()">
		    <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
			<rule action-name="DisableButton" parameter="context-name=all;button-name=HHAssistModeButton" />
          </else-if>
          <!--(+)SSCOP-1738-->
          <else-if expression="is_attract==1">
            <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
            <rule action-name="DisableButton" parameter="context-name=all;button-name=HHAssistModeButton" />
          </else-if>
          <!--(-)SSCOP-1738-->
          <else>
		    <rule action-name="send-msg" parameter="message-name=Enable Assist Mode Button 2;copy-plist=true" />
          </else>
        </message-rule-list>
      </message>
      <message name="Handle Assist Mode 2">
        <message-rule-list>
          <if expression="IsOutsideTransaction()">
            <rule action-name="send-msg" parameter="message-name=Enable Assist Mode Button 2;copy-plist=true" />
          </if>
        </message-rule-list>
      </message>
      <message name="Enable Assist Mode Button 2">
        <message-rule-list>
          <rule action-name="EnableButton" parameter="context-name=all;button-name=AssistModeButton" />
          <!-- +SSCOP-2618 commenting the line below -->
		  <!--<rule action-name="EnableButton" parameter="context-name=ApproveAgeCheck;button-name=ButtonCommand1" />--><!--SSCOP-2426-->  
		  <!-- -SSCOP-2618 -->
          <if expression="IsHandheldAssistModeAllowed()">
            <rule action-name="EnableButton" parameter="context-name=all;button-name=HHAssistModeButton" />
          </if>
          <else>
            <rule action-name="DisableButton" parameter="context-name=all;button-name=HHAssistModeButton" />
          </else>
        </message-rule-list>
      </message>
      <message name="Disable Assist Mode Button">
        <message-rule-list>
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=HHAssistModeButton" />
        </message-rule-list>
      </message>
      <message name="Enable NumItems Event">
        <message-rule-list>
          <rule action-name="ShowControl" parameter="control-name=ItemText;context-name=all" />
          <rule action-name="ShowControl" parameter="control-name=ItemAmount;context-name=all" />
        </message-rule-list>
      </message>
      <message name="Disable NumItems Event">
        <message-rule-list>
          <rule action-name="HideControl" parameter="ItemText" />
          <rule action-name="HideControl" parameter="ItemAmount" />
        </message-rule-list>
      </message>
      <message name="Can Suspend Now Event">
        <message-rule-list>
          <if expression="!CanSuspendNowEvent()">
            <rule action-name="assign-variable" parameter="variable-name=suspend_allowed;expression=0" />
          </if>
          <else>
            <rule action-name="assign-variable" parameter="variable-name=suspend_allowed;expression=1" />
          </else>
        </message-rule-list>
      </message>
      <message name="Security Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />          
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Security" />
        </message-rule-list>
      </message>
      <message name="Coupon Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Coupon" />
        </message-rule-list>
      </message>
      <message name="Void Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="DPCSend" parameter="type=1;text=Void" />
        </message-rule-list>
      </message>
      <message name="SuspensionDecline Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
        </message-rule-list>
      </message>
      <message name="Age Restriction Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="SetUnapprovedRestrictedItemCount" parameter="unapproved_restricted_items"/><!--SR803-->
          <rule action-name="DPCSend" parameter="type=1;text=Age Restriction" />
        </message-rule-list>
      </message>
      <message name="Visual Validation Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Visual Validation" />
        </message-rule-list>
      </message>
      <message name="Hopper Substitution Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <rule action-name="SetEventInterventionHandling" />
          <if expression="!IsRAPLite() || (intervention_handling > 0)">
            <rule action-name="DisplayDelayedIntervention" parameter="data-source=CMSMReceipt;receipt-control=LaneReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;instruction-text-variable=InstructionText;transaction-variable=InstructionText;lane-status3-text=LaneStateWindow3" />
          </if>
          <rule action-name="SaveDelayedIntervention" />
        </message-rule-list>
      </message>
      <message name="Call For Help Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="DPCSend" parameter="type=1;text=Call For Help" />
          <if expression="!IsOutsideTransaction()">
            <rule action-name="SaveDelayedIntervention" />
          </if>
          <else>
            <rule action-name="SaveDelayedIntervention" parameter="message-name=Call For Help Outside Transaction Event" />
          </else>
        </message-rule-list>
      </message>
      <message name="Other Payment Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Other Payment" />
        </message-rule-list>
      </message>
      <message name="Suspend Event">
        <message-rule-list>
          <rule action-name="SaveSuspendRequest" />
          <rule action-name="evaluate-expression" parameter="remote_initiated_suspend==1" />
          <rule action-name="assign-variable" parameter="variable-name=remote_initiated_suspend;expression=0" />
          <rule action-name="SaveSuspendRequest" />
          <rule action-name="ApproveIntervention" parameter="button-command=cApprove;category=suspend" />
          <rule action-name="push-state" />
		  <rule action-name="DPCSend" parameter="type=1;text=Suspend" />
          <transition state-name="Suspend In Progress" />
        </message-rule-list>
      </message>
      <message name="Price Required Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Price Required" />
        </message-rule-list>
      </message>
      <message name="Unknown Item Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Unknown Item" />
        </message-rule-list>
      </message>
      <message name="Recalled Item Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <rule action-name="SetEventInterventionHandling" />
          <if expression="!IsRAPLite() || (intervention_handling > 0)">
            <if expression="security_disabled!=1">
              <rule action-name="DisplayDelayedIntervention" parameter="data-source=CMSMReceipt;receipt-control=LaneReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </if>
            <else>
              <rule action-name="DisplayDelayedIntervention" parameter="data-source=CMSMReceipt;receipt-control=LaneReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status3-text=LaneStateWindow3" />
            </else>
          </if>
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Recalled Item" />
        </message-rule-list>
      </message>
      <message name="Time Restricted Item Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Time Restricted Item" />
        </message-rule-list>
      </message>
      <message name="Restricted Not Allowed Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Restricted Not Allowed" />
        </message-rule-list>
      </message>
      <message name="Sig Cap Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
        </message-rule-list>
      </message>
      <message name="Application Error Event">
        <message-rule-list>
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=application-error)">
              <rule action-name="PushbackImmediateIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=1;text=Application Error" />
        </message-rule-list>
      </message>
      <message name="Device Error Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Device Error" />
        </message-rule-list>
      </message>
      <message name="Quantity Restricted Item Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Quantity Restricted Item" />
        </message-rule-list>
      </message>
      <message name="Undeactivated Item Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
          <rule action-name="DPCSend" parameter="type=1;text=Undeactivated Item" />
        </message-rule-list>
      </message>
      <message name="Ready To Collect Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <rule action-name="SetEventInterventionHandling" />
          <if expression="!IsRAPLite() || (intervention_handling > 0)">
            <rule action-name="DisplayImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <rule action-name="SaveImmediateIntervention" />
          <rule action-name="EnableButton" parameter="button-name=LaneButton;context-name=all" />
          <rule action-name="DPCSend" parameter="type=1;text=Ready To Collect" />
        </message-rule-list>
      </message>
      <message name="Normal Item Event - Alert" />
      <message name="Normal Item Event - POS Message" />
      <message name="Media Low Event">
        <message-rule-list>
          <rule action-name="MediaLowEvent" parameter="data-source=CMSMReceipt" />
        </message-rule-list>
      </message>
      <message name="All Lane Status Summary">
        <message-rule-list>
          <rule action-name="SendAllLaneStatusSummary" />
        </message-rule-list>
      </message>
      <message name="Assist Mode Toggle">
        <message-rule-list>
          <rule action-name="ForwardAuxData" />
        </message-rule-list>
      </message>
      <message name="Main Screen">
        <message-rule-list>
          <if expression="!CheckImmediateIntervention()">
            <rule action-name="PushbackImmediateIntervention" />
          </if>
          <else>
            <if expression="is_on_top_rap_data_needed==1">
              <rule action-name="PushbackImmediateIntervention" />
            </if>
            <else>
              <rule action-name="PushbackDelayedIntervention" />
            </else>        
          </else>
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Exit Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=0" />
        </message-rule-list>
      </message>
        <!-- (+SR831) -->
      <message name="Reset Handling Event">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=disable_handling;expression=1" />
        </message-rule-list>
      </message>
      <message name="Disable Rap and HHRap Handling Event">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=disable_handling;expression=2" />
        </message-rule-list>
      </message>
      <message name="Disable Rap Handling Event">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=disable_handling;expression=4" /><!-- SSCOP-3727 -->
        </message-rule-list>
      </message>
      <message name="Disable HHRap Handling Event">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=disable_handling;expression=3" /><!-- SSCOP-3727 -->
        </message-rule-list>
      </message>
      <!-- (-SR831) -->
	  <!-- sscoadk-321+ -->
      <message name="No Sale Event">
        <message-rule-list>
          <call name="HandleInterventionAlertText" />
          <call name="HandleDelayedInterventionEventDisplay" />
          <rule action-name="SaveDelayedIntervention" />
        </message-rule-list>
      </message>
      <message name="No Sale Approval">
       <message-rule-list>
        <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
        <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
        <rule action-name="ClearApprovedIntervention" parameter="type=no-sale" />
        <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
        <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
       </message-rule-list>
      </message>
	  <!-- sscoadk-321- -->
      <!-- +RAPLite -->
      <message name="Check RAPLite Intervention Handling">
       <message-rule-list>
         <if expression="intervention_handling>1">
           <rule action-name="SetText" parameter="string-id=AlertStatusTextOn;control-name=AlertStatusText" />
         </if>
         <else-if expression="intervention_handling==1">
           <rule action-name="SetText" parameter="string-id=AlertStatusTextOff;control-name=AlertStatusText" />
         </else-if>
         <else>
           <rule action-name="SetText" parameter="string-id=NoneText;control-name=AlertStatusText" />
         </else>
       </message-rule-list>
      </message>
      <!-- -RAPLite -->
      <message name="Save Generic Delayed Event Info" />

    </state>
    <!-- ======================================================================== -->
    <!-- State:  Unitialized                                                      -->
    <!-- Messages:  Initialize from FL to begin the initialization process        -->
    <!-- ======================================================================== -->
    <state name="Unitialized">
      <message name="Initialize">
        <message-rule-list>
          <rule action-name="LoadConfiguration" />
          <transition state-name="Logged Off" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Idle                                                             -->
    <!-- Function:  Active state when no transaction in progress                  -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Logged Off">
      <message name="LaneButton" />
      <message name="AssistModeButton" />
      <message name="LaneStatusButton" />
      <message name="Normal Item Event">
        <message-rule-list>
          <rule action-name="AddNormalItem" parameter="data-source=CMSMReceipt;lane-button=LaneButton;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3;assist-mode-button=AssistModeButton;lane-status-button=LaneStatusButton;receipt-control=LaneReceipt;item-count-text=ItemAmount;total-amount-text=SMTotalAmount" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="Exit Store Mode" />
      <message name="Connection Attempt">
        <message-rule-list>
          <rule action-name="ConnectCommandRAP" />
          <rule action-name="SetLaneName" parameter="button-name=LaneButton" />
          <rule action-name="SetLaneName" parameter="button-name=LaneCaption" />
        </message-rule-list>
      </message>
      <message name="Connection Complete">
        <message-rule-list>
		  <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=OnRapConnect" /> <!--SSCOI-45994-->
          <rule action-name="ConnectCommandComplete" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="SaveRemoteConnection" />
          <if expression="IsOutsideTransaction()">
            <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=LaneStatusTitle" />
          </if>
          <else>
            <if expression="IsInterventionOutstanding()">
              <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=ExpandReceiptButtonText" />
            </if>
          </else>
	      <if expression="is_rap_single4==1">
              <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=LaneStatusTitle" />
          </if>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <if expression="!IsInterventionOutstanding()">
            <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <if expression="IsCurrentInterventionInProgress()">
              <rule action-name="DisplayCurrentIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </if>
            <else>
              <if expression="!IsNotImmediateInterventionOutstanding()">
                <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
              </if>
              <else>
                <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
              </else>
            </else>
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Main                                                             -->
    <!-- Function:  Transaction in progress                                       -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Main">
      <entry-rule-list>
        <rule action-name="clean-state" />
		<rule action-name="assign-variable" parameter="variable-name=is_on_top_rap_data_needed;expression=0" />
        <rule action-name="send-msg" parameter="message-name=Update Buttons" />
        <if expression="IsExclusiveAccessGranted()">
          <rule action-name="ReleaseExclusiveAccess" />
        </if>
        <rule action-name="log" parameter="text=Entered Main" />
      </entry-rule-list>
      <message name="Transition From Intervention">
        <message-rule-list>
          <if expression="IsInterventionOutstanding()">
            <rule action-name="CheckImmediateIntervention">
              <failure-transition>Immediate Intervention</failure-transition>
            </rule>
            <!-- SSCOADK-1737            <if expression="!CheckDelayedIntervention()">
              <rule action-name="send-msg" parameter="message-name=Transition To Delayed Intervention;copy-plist=true;immediate=true" />
            </if>
            <else> -->
            <rule action-name="ReleaseExclusiveAccess" />
            <!-- SSCOADK-1737            </else>   -->
          </if>
          <else>
            <rule action-name="ReleaseExclusiveAccess" />
          </else>          
        </message-rule-list>
      </message>
      <message name="Update Buttons">
        <message-rule-list>
          <rule action-name="EnableButton" parameter="context-name=all;button-name=LaneStatusButton" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=LaneButton" />
          <if expression="CompareToCurrentContext(context=ThankYou)">
            <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Enable Assist Mode Button" />
          </else>
        </message-rule-list>
      </message>
      <message name="LaneButton">
        <message-rule-list>
          <rule action-name="push-state" /><!--RAPLite-->
          <rule action-name="IsNotHandheld">
            <failure-transition>LaneDetail</failure-transition>
          </rule>
          <rule action-name="CheckImmediateIntervention">
            <failure-transition>Immediate Intervention</failure-transition>
          </rule>
          <if expression="!CheckDelayedIntervention()">
            <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
          </if>
          <else>
            <rule action-name="evaluate-expression" parameter="suspend_in_progress==0">
              <failure-transition>Allow Suspension</failure-transition>
            </rule>
            <transition state-name="LaneDetail" />
          </else>
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="CheckImmediateIntervention">
            <failure-transition>Immediate Intervention</failure-transition>
          </rule>
          <if expression="!CheckDelayedIntervention()">
            <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
          </if>
          <else>
            <rule action-name="SendClientMachineNameEvent" />
            <if expression="!IsOutsideTransaction()">
              <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
              <transition state-name="Assist Mode" />
            </if>
            <else>
              <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=RAPInitiateTransaction" />
              <transition state-name="Wait For Data Needed" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="LaneStatusButton">
        <message-rule-list>
          <rule action-name="push-state" />		  
          <if expression="IsOutsideTransaction()">
            <rule action-name="goto-state" parameter="state-name=LaneStatus" />
          </if>
		  <if expression="is_rap_single4==1">
            <rule action-name="goto-state" parameter="state-name=LaneStatus" />
          </if>
          <rule action-name="IsNotHandheld">
            <failure-transition>LaneStatus</failure-transition>
          </rule>
          <rule action-name="IsInterventionOutstanding">
            <failure-transition>LaneStatus</failure-transition>
          </rule>
          <transition state-name="LaneInterventionDetail" />
        </message-rule-list>
      </message>
      <message name="Normal Item Event">
        <message-rule-list>
          <rule action-name="AddNormalItem" parameter="data-source=CMSMReceipt;lane-button=LaneButton;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3;assist-mode-button=AssistModeButton;lane-status-button=LaneStatusButton;receipt-control=LaneReceipt;item-count-text=ItemAmount;total-amount-text=SMTotalAmount" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="ClearReceipt" parameter="data-source=CMSMReceipt;item-count-static-text=ItemText;item-count-text=ItemAmount;total-amount-static-text=TotalText;total-amount-text=TotalAmount;visible=true" />
          <rule action-name="TransactionBegin" />
          <if expression="!CheckAssistModeControl(valid-values=1,3)">
            <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
          </if>
          <else>
            <rule action-name="EnableButton" parameter="context-name=all;button-name=AssistModeButton" />
            <if expression="IsInterventionOutstanding()">
              <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=ExpandReceiptButtonText" />
            </if>
			<if expression="is_rap_single4==1">
              <rule action-name="SetText" parameter="control-name=LaneStatusButton;string-id=LaneStatusTitle" />
            </if>
          </else>
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="IsInterventionOutstanding" />
          <rule action-name="ClearRAPDataNeededIntervention" />
		      <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsInterventionOutstanding()">
            <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <if expression="!IsNotImmediateInterventionOutstanding()">
              <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </if>
            <else>
              <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </else>
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message> 
    </state>
    <!-- ======================================================================== -->
    <!-- State:  LaneDetail                                                       -->
    <!-- Function:  Transaction in progress                                       -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="LaneDetail">
      <entry-rule-list>
        <!--(+)RAPLite -->
        <if expression="IsRAPLite()">
          <rule action-name="send-msg" parameter="message-name=Check Intervention" />
        </if>
        <else>
          <rule action-name="SwitchContext" parameter="LaneDetail" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="send-msg" parameter="message-name=Update Buttons" />
        </else>
        <!--(-)RAPLite -->
      </entry-rule-list>
	  <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <if expression="!IsInterventionOutstanding()">
            <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <if expression="IsCurrentInterventionInProgress()">
              <rule action-name="DisplayCurrentIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </if>
            <else>
              <if expression="!IsNotImmediateInterventionOutstanding()">
                <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
              </if>
              <else>
                <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
              </else>
            </else>
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Update Buttons">
        <message-rule-list>
          <rule action-name="EnableButton" parameter="context-name=all;button-name=LaneStatusButton" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=LaneButton" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <if expression="CompareToCurrentContext(context=ThankYou)">
            	    <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
          	  </if>
          	  <else>
            	    <rule action-name="send-msg" parameter="message-name=Enable Assist Mode Button" />
          	  </else> 	
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ReleaseExclusiveAccess" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="LaneButton">
        <message-rule-list>
          <rule action-name="CheckImmediateIntervention">
            <failure-transition>Immediate Intervention</failure-transition>
          </rule>
          <if expression="!CheckDelayedIntervention()">
            <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
          </if>
          <else>
            <rule action-name="evaluate-expression" parameter="suspend_in_progress==0">
              <failure-transition>Allow Suspension</failure-transition>
            </rule>
          </else>
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="CheckImmediateIntervention">
            <failure-transition>Immediate Intervention</failure-transition>
          </rule>
          <if expression="!CheckDelayedIntervention()">
            <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
          </if>
          <else>
            <rule action-name="SendClientMachineNameEvent" />
            <if expression="!IsOutsideTransaction()">
              <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
              <transition state-name="Assist Mode" />
            </if>
            <else>
              <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=RAPInitiateTransaction" />
              <transition state-name="Wait For Data Needed" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="LaneStatusButton">
        <message-rule-list>
          <rule action-name="CheckImmediateIntervention">
            <failure-transition>Immediate Intervention</failure-transition>
          </rule>
          <if expression="!CheckDelayedIntervention()">
            <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
          </if>
          <else>
            <rule action-name="push-state" />
            <transition state-name="LaneStatus" />
          </else>
        </message-rule-list>
      </message>
      <message name="Normal Item Event">
        <message-rule-list>
      <if expression="IsNotImmediateInterventionOutstanding()"> 
          <rule action-name="AddNormalItem" parameter="data-source=CMSMReceipt;lane-button=LaneButton;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3;assist-mode-button=AssistModeButton;lane-status-button=LaneStatusButton;receipt-control=LaneReceipt;item-count-text=ItemAmount;total-amount-text=SMTotalAmount" />
      </if>  
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="ReleaseExclusiveAccess" />
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="Exit Store Mode" />
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="ClearReceipt" parameter="data-source=CMSMReceipt;item-count-static-text=ItemText;item-count-text=ItemAmount;total-amount-static-text=TotalText;total-amount-text=TotalAmount;visible=true" />
          <rule action-name="TransactionBegin" />
          <if expression="!CheckAssistModeControl(valid-values=1,3)">
            <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
          </if>
          <else>
            <rule action-name="EnableButton" parameter="context-name=all;button-name=AssistModeButton" />
          </else>
        </message-rule-list>
      </message>
      <message name="Disconnect">
        <message-rule-list>
          <if expression="!IsNotHandheld()">
            <rule action-name="send-msg" parameter="message-name=Disconnect Handheld;copy-plist=true" />
          </if>
          <else>
            <rule action-name="DisconnectCommand">
              <failure-transition>Logged Off</failure-transition>
            </rule>
          </else>
        </message-rule-list>
      </message>
      <message name="Disconnect Handheld">
        <message-rule-list>
          <rule action-name="DisconnectCommand">
            <failure-transition>Logged Off</failure-transition>
          </rule>  
          <rule action-name="goto-state" parameter="state-name=Main" />
        </message-rule-list>
      </message>
      <message name="Exit Assist Mode">
        <message-rule-list>
          <rule action-name="goto-state" parameter="state-name=Main" />
        </message-rule-list>
      </message>
      <!-- +RAPLite -->
      <message name="Check Intervention">
        <message-rule-list>
          <rule action-name="CheckImmediateIntervention" >
            <failure-transition>Immediate Intervention</failure-transition>
          </rule>
          <if expression="!CheckDelayedIntervention()">
            <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
          </if>
          <else>
            <rule action-name="push-state" />
            <transition state-name="LaneStatus" />
          </else>
        </message-rule-list>
      </message>
      <!-- -RAPLite -->
    </state>
    <!-- +SR720 -->
    <!-- ======================================================================== -->
    <!-- State:  LaneInterventionDetail                                                       -->
    <!-- Function:  Transaction in progress                                       -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="LaneInterventionDetail">
      <entry-rule-list>
        <rule action-name="SwitchContext" parameter="LaneInterventionDetail" />
        <rule action-name="AcquireExclusiveAccess" />
        <rule action-name="send-msg" parameter="message-name=Update Buttons" />
      </entry-rule-list>
      <message name="Update Buttons">
        <message-rule-list>
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=LaneButton" />
		  <if expression="CompareToCurrentContext(context=ThankYou)">
            <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
          </if>
          <else>
		    <rule action-name="EnableButton" parameter="context-name=all;button-name=AssistModeButton" />
            <rule action-name="send-msg" parameter="message-name=Enable Assist Mode Button" />
          </else>
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ReleaseExclusiveAccess" />
          <if expression="store_mode!=0"> 
            <transition state-name="Store Mode" />
          </if>
          <else>
            <transition state-name="Main" />
          </else>
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="LaneButton">
        <message-rule-list>
          <if expression="store_mode!=1"> 
            <rule action-name="CheckImmediateIntervention">
              <failure-transition>Immediate Intervention</failure-transition>
            </rule>
            <if expression="!CheckDelayedIntervention()">
              <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
            </if>
            <else>
              <rule action-name="evaluate-expression" parameter="suspend_in_progress==0">
                <failure-transition>Allow Suspension</failure-transition>
              </rule>
            </else>
          </if>
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="CheckImmediateIntervention">
            <failure-transition>Immediate Intervention</failure-transition>
          </rule>
          <if expression="!CheckDelayedIntervention()">
            <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
          </if>
          <else>
            <rule action-name="SendClientMachineNameEvent" />
            <if expression="!IsOutsideTransaction()">
              <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
              <transition state-name="Assist Mode" />
            </if>
            <else>
              <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=RAPInitiateTransaction" />
              <transition state-name="Wait For Data Needed" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Normal Item Event">
        <message-rule-list>
          <rule action-name="AddNormalItem" parameter="data-source=CMSMReceipt;lane-button=LaneButton;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3;assist-mode-button=AssistModeButton;lane-status-button=LaneStatusButton;receipt-control=LaneReceipt;item-count-text=ItemAmount;total-amount-text=SMTotalAmount" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="ReleaseExclusiveAccess" />
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="Exit Store Mode">
        <message-rule-list> 
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=0" />
        </message-rule-list>
      </message>
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="ClearReceipt" parameter="data-source=CMSMReceipt;item-count-static-text=ItemText;item-count-text=ItemAmount;total-amount-static-text=TotalText;total-amount-text=TotalAmount;visible=true" />
          <rule action-name="TransactionBegin" />
          <if expression="!CheckAssistModeControl(valid-values=1,3)">
            <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
          </if>
          <else>
            <rule action-name="EnableButton" parameter="context-name=all;button-name=AssistModeButton" />
          </else>
        </message-rule-list>
      </message>
      <message name="Disconnect">
        <message-rule-list>
          <if expression="!IsNotHandheld()">
            <rule action-name="send-msg" parameter="message-name=Disconnect Handheld;copy-plist=true" />
          </if>
          <else>
            <rule action-name="DisconnectCommand">
              <failure-transition>Logged Off</failure-transition>
            </rule>
          </else>
        </message-rule-list>
      </message>
      <message name="Disconnect Handheld">
        <message-rule-list>
          <rule action-name="DisconnectCommand">
            <failure-transition>Logged Off</failure-transition>
          </rule>  
          <rule action-name="goto-state" parameter="state-name=Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="IsInterventionOutstanding" />
          <rule action-name="ClearRAPDataNeededIntervention" />
          <if expression="!IsInterventionOutstanding()">
            <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <if expression="!IsNotImmediateInterventionOutstanding()">
              <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </if>
            <else>
              <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </else>
          </else>
        </message-rule-list>
      </message>
    </state>
    <!-- -SR720 -->
    <!-- ======================================================================== -->
    <!-- State:  Allow Suspension                                                 -->
    <!-- Function:  Transaction in progress                                       -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Allow Suspension">
      <entry-rule-list>
        <rule action-name="SwitchContext" parameter="AllowSuspend" />
        <rule action-name="AcquireExclusiveAccess" />
        <rule action-name="send-msg" parameter="message-name=Update Buttons" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="ReleaseExclusiveAccess" />
      </exit-rule-list>
      <message name="Update Buttons">
        <message-rule-list>
          <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=suspend_in_progress;expression=1" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="assign-variable" parameter="variable-name=suspend_in_progress;expression=1" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Wait For Data Needed                                             -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Wait For Data Needed">
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="SaveStartTransactionIntervention" />
          <if expression="!IsNotStartTransactionView()">
            <rule action-name="send-msg" parameter="message-name=Switch Context" />
            <transition state-name="StartTransaction" />
          </if>
          <else>
            <if expression="!IsNotStartTransactionAMView()">
              <rule action-name="send-msg" parameter="message-name=Switch Context" />
              <transition state-name="StartTransactionAM" />
            </if>
            <else>
              <rule action-name="resend-msg" />
              <transition state-name="Main" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Suspend In Progress                                              -->
    <!-- Function:  Suspend in progress                                           -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Suspend In Progress">
      <entry-rule-list>
        <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
      </entry-rule-list>
      <message name="Suspend Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=suspend)">
              <rule action-name="PushbackImmediateIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="assign-variable" parameter="variable-name=suspend_in_progress;expression=1" />
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
      <message name="Assist Mode Size To FullScreen">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-store-mode" />
        </message-rule-list>
      </message>
      <message name="Exit Assist Mode" />
      <message name="Enter Store Mode" />
      <message name="Exit Store Mode" />
      <message name="Switch Lane Context Event">
        <message-rule-list>
          <rule action-name="SwitchLaneContextCommand" />
          <if expression="MatchLaneContext(context-name=ScanAndBag)">
            <rule action-name="SendSuspendRequest" parameter="reason=Transaction Suspended" />
            <rule action-name="goto-state" parameter="state-name=Main" />
          </if>
          <else-if expression="MatchLaneContext(context-name=ScanAndBagWithReward)">
            <rule action-name="SendSuspendRequest" parameter="reason=Transaction Suspended" />
            <rule action-name="goto-state" parameter="state-name=Main" />
          </else-if>
          <else>
            <rule action-name="NotifyAssistMode" parameter="exit-store-mode" />
            <rule action-name="SendSuspendRequest" parameter="reason=Transaction Suspended" />
            <rule action-name="goto-state" parameter="state-name=Main" />
          </else>
        </message-rule-list>
      </message>
    </state>
	<!-- +SSCOI-45690 -->
	<!-- ======================================================================== -->
	<!-- State: NoSaleInProgress                                                  -->
	<!-- Function: Transaction in progress                                        -->
	<!-- Messages:                                                                -->
	<!-- ======================================================================== -->	

	<state name="NoSaleInProgress">
		<entry-rule-list>
			<rule action-name="SwitchContext" parameter="NoSaleInProgress" />
			<rule action-name="assign-variable" parameter="no_sale=1" />
			<rule action-name="AcquireExclusiveAccess" />
			<rule action-name="send-msg" parameter="message-name=Update Buttons" />
		</entry-rule-list>
		<exit-rule-list>
			<rule action-name="ReleaseExclusiveAccess" />
		</exit-rule-list>
		<message name="Update Buttons">
			<message-rule-list>
				<rule action-name="DisableButton" parameter="context-name=NoSaleInProgress;button-name=ButtonCommand0" />
				<rule action-name="DisableButton" parameter="context-name=NoSaleInProgress;button-name=ButtonCommand1" />
				<rule action-name="DisableButton" parameter="context-name=NoSaleInProgress;button-name=ButtonCommand2" />
				<rule action-name="DisableButton" parameter="context-name=NoSaleInProgress;button-name=ButtonCommand3" />
				<rule action-name="DisableButton" parameter="context-name=NoSaleInProgress;button-name=NoSaleButton" />
			</message-rule-list>
		</message>
	
		<!-- Redisplay context if we're staying in this state. This EnableNumItems msg
			will arrive as a result of a getting out of a system message. We had to
			reuse a message that was already defined in base RCM. -->
		
		<message name="Enable NumItems Event">
			<message-rule-list>
				<rule action-name="SwitchContext" parameter="NoSaleInProgress" />
			</message-rule-list>
		</message>
	</state>
	
	<!-- -SSCOI-45690 -->
    <!-- ======================================================================== -->
    <!-- State:  LaneStatus                                                       -->
    <!-- Function:  Transaction in progress                                       -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="LaneStatus">
      <entry-rule-list>
        <rule action-name="SwitchContext" parameter="LaneStatus" />
        <rule action-name="AcquireExclusiveAccess" />
        <!--(+)SR969-->
        <if expression="view_cm_at_rap!=0">
          <rule action-name="ShowControl" parameter="control-name=ButtonCommand4" />           
        </if>
        <else>
          <rule action-name="HideControl" parameter="ButtonCommand4" /> 
        </else>                
        <!--(-)SR969-->
        <rule action-name="send-msg" parameter="message-name=Update Buttons" />
        <rule action-name="send-msg" parameter="message-name=Check Handheld" />
        <if expression="security_disabled!=1">
          <rule action-name="SetText" parameter="control-name=SecurityDisableStatusText;string-id=SecurityDisableStatusTextOn" />
          <rule action-name="SetText" parameter="control-name=SecurityDisableButton;string-id=SecurityDisableButtonOff" />
        </if>
        <else>
          <rule action-name="SetText" parameter="string-id=SecurityDisableButtonOn;control-name=SecurityDisableButton" />
          <rule action-name="SetText" parameter="string-id=SecurityDisableStatusTextOff;control-name=SecurityDisableStatusText" />
        </else>
      </entry-rule-list>
      <exit-rule-list>
        <if expression="is_handheld!=1">
          <rule action-name="ReleaseExclusiveAccess" />
        </if>
      </exit-rule-list>
      <message name="Exit Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=0" />
        </message-rule-list>
      </message>
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="pop-state" />
          <rule action-name="resend-msg" />
        </message-rule-list>
      </message>
      <message name="Update Buttons">
        <message-rule-list>
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          <rule action-name="EnableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand2" />
		  <rule action-name="EnableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand3" />
		  <rule action-name="EnableButton" parameter="context-name=LaneStatus;button-name=SecurityDisableButton" />
          <if expression="!IsOutsideTransaction()">
            <rule action-name="send-msg" parameter="message-name=Update Buttons In Lane Status" />
          </if>
          <else>
            <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand0" />
            <if expression="!IsNotImmediateInterventionOutstanding()">
              <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand1" />
			  <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand2" />
			  <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=SecurityDisableButton" />
            </if>
            <else>
              <if expression="store_mode!=0">
                <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand2" />
				<rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand1" />
              </if>
			  <else>
			    <if expression="is_attract==1">
    			  <rule action-name="EnableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand1" />
				</if>
				<else>
				  <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand1" />
				</else>
			  </else>
            </else>
			<!-- SSCOI-45690 -->
			
			<if expression="is_attract==1">
    		  <rule action-name="EnableButton" parameter="context-name=LaneStatus;button-name=NoSaleButton" /> 
			</if>
			<else>
			  <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=NoSaleButton" />
			</else>
			
			<!-- SSCOI-45690 -->
          </else>
        </message-rule-list>
      </message>
      <message name="Update Buttons In Lane Status">
        <message-rule-list>
          <if expression="suspend_allowed!=0">
            <if expression="remote_initiated_suspend!=1">
              <rule action-name="EnableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand0" />
            </if>
            <else>
              <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand0" />
            </else>
          </if>
          <else>
            <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand0" />
          </else>
          <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand2" />
		  <!-- - TAR 356062 -->
			<!--POS303376-->
		  <if expression="CompareToCurrentContext(context=CardProcessing)">
			<rule action-name="EnableButton" parameter="context-name=LaneStatus;button-name=ButtonCommand0" />			
		  </if>
		  <!--POS303376-->
          <!-- <rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=NoSaleButton" /> --> <!-- SSCOI-45690 -->
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <if expression="IsForceApprovalBeforeSuspend()">
            <rule action-name="CheckImmediateIntervention">
              <failure-transition>Immediate Intervention</failure-transition>
            </rule>
            <if expression="!CheckDelayedIntervention()">
              <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
            </if>
          </if>
          <if expression="IsInterventionTypeOutstanding(type=other-payment)">
            <rule action-name="MakeInterventionCurrent" parameter="type=other-payment" />
            <rule action-name="ApproveIntervention" parameter="button-command=1" />
          </if>
          <if expression="IsNotConfirmSuspend()">
            <rule action-name="assign-variable" parameter="variable-name=remote_initiated_suspend;expression=1" />
            <rule action-name="SendSuspendRequest" parameter="reason=Transaction Suspended" />
            <rule action-name="GenerateLocalButtonPress" parameter="button-name=CMButton4LgFinish;context-name=local-context" />
            <rule action-name="pop-state" />
          </if>
          <else>
            <rule action-name="SetReleaseExclusiveAccessRequired" parameter="release-needed=false" />
            <rule action-name="send-msg" parameter="message-name=Confirm Suspend From Lane Status" />
            <rule action-name="goto-state" parameter="state-name=ConfirmSuspendFromLaneStatus" />
          </else>
        </message-rule-list>
      </message>
      <message name="SecurityDisableButton">
        <message-rule-list>
          <if expression="security_disabled!=1">
            <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=DisableSecurity" />
          </if>
          <else>
            <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=EnableSecurity" />
          </else>
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=RAPInitiateLaneClose" />
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand2">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="enter-reporting-mode" />
          <rule action-name="SetReleaseExclusiveAccessRequired" parameter="release-needed=false" />
          <transition state-name="Reporting Mode" />
        </message-rule-list>
      </message>
	  <!-- +SSCOI-45690 -->
      <message name="NoSaleButton">
		<message-rule-list>
			<rule action-name="SendClientMachineNameEvent" />
			<rule action-name="SendUnsolicitedData" parameter="unsolicited-data=RAPInitiateNoSale" />
			<rule action-name="DisableButton" parameter="context-name=LaneStatus;button-name=NoSaleButton" />
			<transition state-name="NoSaleInProgress" />
		</message-rule-list>
	  </message>
	  <!-- -SSCOI-45690 -->
      <message name="ButtonCommand3">
        <message-rule-list>
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
      <message name="Transaction End">
        <message-rule-list>
          <rule action-name="TransactionEnd" />
          <rule action-name="ClearAllInterventions" />
          <rule action-name="ClearReceipt" parameter="data-source=CMSMReceipt;item-count-static-text=ItemText;item-count-text=ItemAmount;total-amount-static-text=TotalText;total-amount-text=TotalAmount;visible=false" />
          <rule action-name="assign-variable" parameter="variable-name=suspend_in_progress;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=alert_outside_trx;expression=0" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="resend-msg" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="ReleaseExclusiveAccess" />
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Immediate Intervention                                           -->
    <!-- Messages:  Initialize from FL to begin the initialization process        -->
    <!-- ======================================================================== -->
    <state name="Immediate Intervention">
      <message name="Immediate Intervention">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
          <rule action-name="SwitchContextImmediateIntervention" parameter="ImmediateInterventionsTable" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
		  <rule action-name="assign-variable" parameter="variable-name=is_on_top_rap_data_needed;expression=1" />
          <if expression="!CheckDefaultButton(new_state)">
            <rule action-name="goto-state" parameter="state-id=new_state" />
          </if>
          <else>
            <rule action-name="SwitchContextRAPDataNeededIntervention" parameter="lookup-table-name=RAPDataNeededInterventionsTable" />
          </else>
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Store Mode                                                       -->
    <!-- Function:  Cashier has entered store mode.                               -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Store Mode">
	<!-- sscoadk-4081+ -->
      <entry-rule-list>
          <if expression="CompareToCurrentContext(context=SmAuthorization)">            
             <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          </if>                
      </entry-rule-list>
      <exit-rule-list>
          <if expression="CompareToCurrentContext(context=SmAuthorization)">            
             <rule action-name="EnableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          </if>                
      </exit-rule-list>
    <!-- sscoadk-4081- -->
	
		<message name="AssistModeButton"> <!-- SSCOB-18116 -->
        <message-rule-list>
		<if expression="MatchLaneContext(context-name=Finish)">
          <rule action-name="CheckImmediateIntervention">
            <failure-transition>Immediate Intervention</failure-transition>
          </rule>
          <if expression="!CheckDelayedIntervention()">
            <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
          </if>
          <else>
            <rule action-name="SendClientMachineNameEvent" />
            <if expression="!IsOutsideTransaction()">
              <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
              <transition state-name="Assist Mode" />
            </if>
            <else>
              <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=RAPInitiateTransaction" />
              <transition state-name="Wait For Data Needed" />
            </else>
          </else>
		</if>
        </message-rule-list>
      </message>
	

      <message name="Exit Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=0" />
          <rule action-name="ExitStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogOutReceiptText" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Disconnect">
        <message-rule-list>
          <if expression="IsCurrentRemoteConnection()">
            <rule action-name="ExitStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogOutReceiptText" />
            <rule action-name="ReleaseExclusiveAccess" />
            <rule action-name="DisconnectCommand">
              <failure-transition>Logged Off</failure-transition>
            </rule>
            <rule action-name="goto-state" parameter="state-name=Main" />
          </if>
          <else>
            <rule action-name="DisconnectCommand" />
          </else>
        </message-rule-list>
      </message>
      <message name="LaneStatusButton">
        <message-rule-list>
          <rule action-name="push-state" />
          <rule action-name="IsInterventionOutstanding">
            <failure-transition>LaneStatus</failure-transition>
          </rule>
          <transition state-name="LaneInterventionDetail" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="IsInterventionOutstanding" />
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" /><!-- RAPLite -->
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" /><!-- RAPLite -->
        </message-rule-list>
      </message>
<!-- sscoadk-628+ -->
      <message name="Transaction End">
        <message-rule-list>
          <rule action-name="TransactionEnd" />
          <rule action-name="ClearAllInterventions" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="ClearReceipt" parameter="data-source=CMSMReceipt;item-count-static-text=ItemText;item-count-text=ItemAmount;total-amount-static-text=TotalText;total-amount-text=TotalAmount;visible=false" />
          <if expression="IsExclusiveAccessGranted()">
            <rule action-name="ReleaseExclusiveAccess" />
          </if>
          <rule action-name="assign-variable" parameter="variable-name=suspend_in_progress;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=alert_outside_trx;expression=0" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
<!-- sscoadk-628- -->
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Assist Mode                                                       -->
    <!-- Function:  Cashier has entered assist mode.                               -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Assist Mode">
      <exit-rule-list>
        <rule action-name="EnableInputEvents" parameter="Enable=true" />
      </exit-rule-list>
      <message name="Release Control For SCOTAPP" />
      <message name="Exit Assist Mode">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-assist-mode" />
          <if expression="!IsHandheld()">
            <if expression="IsInterventionOutstanding()">
              <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
            </if>
            <else>
              <rule action-name="ReleaseExclusiveAccess" />
              <transition state-name="Main" />
            </else>
          </if>
          <else>
            <transition state-name="LaneDetail" />
          </else>
        </message-rule-list>
      </message>
      <message name="Disconnect">
        <message-rule-list>
          <if expression="IsCurrentRemoteConnection()">
            <rule action-name="NotifyAssistMode" parameter="exit-assist-mode" />
            <rule action-name="ReleaseExclusiveAccess" />
            <rule action-name="DisconnectCommand">
              <failure-transition>Logged Off</failure-transition>
            </rule>
            <rule action-name="goto-state" parameter="state-name=Main" />
          </if>
          <else>
            <rule action-name="DisconnectCommand" />
          </else>
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-assist-mode" />
          <rule action-name="ReleaseExclusiveAccess" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Disable Assist Mode Button" />
      <message name="Remote Approval">
        <message-rule-list>
          <rule action-name="ClearRemoteIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
        </message-rule-list>
      </message>
      <message name="Generic Delayed Event">
        <if expression="IsGenericDelayedAsyncIntervention()">
          <rule action-name="DisplayImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" />
          <rule action-name="DPCSend" parameter="type=1;text=RAP Data Needed" />
          <rule action-name="SaveAsDelayedIntervention" parameter="lookup-table-name=RAPDataNeededInterventionsTable" />
          <rule action-name="GetRAPLiteHandling" parameter="variable-name=intervention_handling" />
          <rule action-name="EnableButton" parameter="button-name=LaneButton;context-name=all" />
          <rule action-name="send-msg" parameter="message-name=Save Generic Delayed Event Info;copy-plist=true" />
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" />
        </if>
      </message>
      <message name="Generic Delayed Approval">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Save Generic Delayed Event Info;copy-plist=true" />
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=GenericDelayedApprove" />
          <rule action-name="ClearGenericDelayedIntervention" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <if expression="!IsInterventionOutstanding()">
            <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else-if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else-if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="IsInterventionOutstanding" />
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="SetText" parameter="string-id=InitialText;control-name=AlertStatusText" />
          <!-- RAPLite -->
          <if expression="!IsNotImmediateInterventionOutstanding()">
            <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </else>
          <rule action-name="send-msg" parameter="message-name=Check RAPLite Intervention Handling" />
          <!-- RAPLite -->
        </message-rule-list>
      </message>
      <message name="Main Screen">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-assist-mode" />
          <rule action-name="ReleaseExclusiveAccess" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
	  <!-- +SSCOADK-6701 -->
      <message name="Switch Context Event">
        <message-rule-list>
          <!-- +-SSCOADK-6861 -->
          <if expression="($(parameter[context])==SmRestrictedItems) &amp;&amp; ($(bReleaseExclusiveAccess)==true)">
            <rule action-name="assign-variable" parameter="variable-name=bReleaseExclusiveAccess;expression=false"/>
            <rule action-name="CheckImmediateIntervention">
              <failure-transition>Immediate Intervention</failure-transition>
            </rule>
            <if expression="!CheckDelayedIntervention()">
              <rule action-name="SwitchContextDelayedIntervention" parameter="DelayedInterventionsTable" />
            </if>
            <else>
              <rule action-name="SwitchContextCommand" />
            </else>
            <rule action-name="NotifyAssistMode" parameter="exit-store-mode" />
            <transition state-name="ApproveAgeCheck" />
          </if>
          <else>
            <rule action-name="SwitchContextCommand" />
          </else>
        </message-rule-list>
      </message>
      <!-- -SSCOADK-6701 -->
      <!-- +SSCOADK-6861 -->
      <message name="Input Event Command">
        <message-rule-list>
          <if expression="($(parameter[control-name])==ButtonGoBack) &amp;&amp; ($(parameter[context-name])==AM_VoidItem) &amp;&amp; ($(parameter[event-name])==Click)">
            <rule action-name="assign-variable" parameter="variable-name=bReleaseExclusiveAccess;expression=true"/>
          </if>
          <rule action-name="IsInputEventEnabled" />
          <rule action-name="IsRemoteConnectionInputEnabled" />
          <rule action-name="SaveRemoteConnection" />
          <rule action-name="SelectKeyDown" parameter="lookup-table-name=SelectKeyDownTable" />
          <rule action-name="SelectButton" parameter="lookup-table-name=SelectButtonTable" />
        </message-rule-list>
      </message>
      <!-- -SSCOADK-6861 -->
    </state>
    <!-- ======================================================================== -->
    <!-- State:  Reporting Mode                                                   -->
    <!-- Function:  Cashier has requesting reporting operations.                  -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="Reporting Mode">
      <message name="Release Control For SCOTAPP" />
      <message name="Exit Assist Mode">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-reporting-mode" />
          <transition state-name="LaneStatus" />
        </message-rule-list>
      </message>
      <message name="Disconnect">
        <message-rule-list>
          <if expression="IsCurrentRemoteConnection()">
            <rule action-name="NotifyAssistMode" parameter="exit-reporting-mode" />
            <rule action-name="ReleaseExclusiveAccess" />
            <rule action-name="DisconnectCommand">
              <failure-transition>Logged Off</failure-transition>
            </rule>
            <rule action-name="goto-state" parameter="state-name=Main" />
          </if>
          <else>
            <rule action-name="DisconnectCommand" />
          </else>
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-reporting-mode" />
          <rule action-name="ReleaseExclusiveAccess" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Main Screen">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-reporting-mode" />
          <rule action-name="ReleaseExclusiveAccess" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveAgeCheck                                                  -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveAgeCheck">
      <entry-rule-list>
        <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
      </entry-rule-list>
      <exit-rule-list>
        <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
      </exit-rule-list>
	  <!--SSCOI-47777-->
	  <message name="ButtonCommand3">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ClearCurrentIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
	  <!--SSCOI-47777-->
      <message name="Age Restriction Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=age-restriction)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SaveMinimumAge" />
		  <rule action-name="DisplayAgeRestrictionInstructionText" parameter="instruction-text-variable=InstructionText;transaction-variable=InstructionText;context-name=ApproveAgeCheck" />
          <rule action-name="SwitchContext" parameter="ApproveAgeCheck" />
		  <rule action-name="EnableButton" parameter="context-name=ApproveAgeCheck;button-name=ButtonCommand0" />
          <!--(+)SSCOP-2426-->
          <if expression="IsAssistModeEnabled()">    
            <rule action-name="SetText" parameter="string-id=DoNotApproveButtonText;control-name=ButtonCommand1;context-name=ApproveAgeCheck" />
            <rule action-name="EnableButton" parameter="context-name=ApproveAgeCheck;button-name=ButtonCommand1" /><!--SSCOP-949-->
          </if>
          <else>
            <rule action-name="SetText" parameter="string-id=GoBackButtonText;control-name=ButtonCommand1;context-name=ApproveAgeCheck" />
          </else>
          <!--(-)SSCOP-2426-->
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          <rule action-name="CheckForDateNotNeededButtonOption" parameter="button-name=ButtonCommand0" />
          <!-- (+) SR803 -->        
            <if expression="!IsHandheld()">             
               <rule action-name="HideControl" parameter="AssistModeButton" /> 
            </if>
            <else>
               <rule action-name="HideControl" parameter="HHAssistModeButton" />                                      
          </else>           
          <!-- (-)SR803 -->
          <rule action-name="AcquireExclusiveAccess" />
           <if expression="!IsEntryTextEmpty(transaction-variable=AgePrompt)">
	     <rule action-name="DisableButton" parameter="context-name=ApproveAgeCheck;button-name=ButtonCommand0" /> 
          <!--<rule action-name="DisableButton" parameter="context-name=ApproveAgeCheck;button-name=ButtonCommand1" />--><!--SR803-->           
          <rule action-name="EnableButton" parameter="context-name=ApproveAgeCheck;button-name=ButtonCommand1" /><!--SSCOP-3564-->           
	      <rule action-name="EnableButton" parameter="context-name=ApproveAgeCheck;button-name=NumericKeyPad4" />
	      <rule action-name="EnableButton" parameter="context-name=ApproveAgeCheck;button-name=NumericKeyPad3" />
	    </if>
	    <else>
              <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
	      <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
	      <rule action-name="DisableButton" parameter="context-name=ApproveAgeCheck;button-name=NumericKeyPad4" />
	      <rule action-name="DisableButton" parameter="context-name=ApproveAgeCheck;button-name=NumericKeyPad3" />
	    </else>      
        </message-rule-list>
      </message>
      <!-- (+)SSCOP-949 -->
      <message name="NumericKeyPad1">
        <message-rule-list>          
          <rule action-name="Append1To9" parameter="transaction-variable=EchoInput" />
          <rule action-name="increment-variable" parameter="variable-name=number_of_digit" />
          <rule action-name="IsNotMaxOfDOBInput" parameter="number_of_digit" />
          <rule action-name="evaluate-expression" parameter="number_of_digit==1" />
          <rule action-name="EnableButton" parameter="button-name=NumericKeyPad4" />
          <rule action-name="EnableButton" parameter="button-name=NumericKeyPad3" />
          <rule action-name="DisableButton" parameter="button-name=ButtonCommand0" />
          <!--<rule action-name="DisableButton" parameter="button-name=ButtonCommand1" />-->
          <rule action-name="EnableButton" parameter="button-name=ButtonCommand1" /><!--SSCOP-3564--> 
       </message-rule-list>
      </message>
      <message name="NumericKeyPad2">
        <message-rule-list>         
          <rule action-name="Append0" parameter="transaction-variable=EchoInput" />
          <rule action-name="increment-variable" parameter="variable-name=number_of_digit" />
          <rule action-name="IsNotMaxOfDOBInput" parameter="number_of_digit" />
          <rule action-name="evaluate-expression" parameter="number_of_digit==1" />
          <rule action-name="EnableButton" parameter="button-name=NumericKeyPad4" />
           <rule action-name="EnableButton" parameter="button-name=NumericKeyPad3" />
          <rule action-name="DisableButton" parameter="button-name=ButtonCommand0" />
          <!--<rule action-name="DisableButton" parameter="button-name=ButtonCommand1" />-->
          <rule action-name="EnableButton" parameter="button-name=ButtonCommand1" /><!--SSCOP-3564--> 
        </message-rule-list>
      </message>      
      <!-- (-)SSCOP-949 -->
      <message name="NumericKeyPad3">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
	  <rule action-name="ClearEntryText" parameter="transaction-variable=AgePrompt" />
          <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
          <rule action-name="DisableButton" parameter="context-name=ApproveAgeCheck;button-name=NumericKeyPad4" />
	  <rule action-name="DisableButton" parameter="context-name=ApproveAgeCheck;button-name=NumericKeyPad3" />
	  <rule action-name="EnableButton" parameter="context-name=ApproveAgeCheck;button-name=ButtonCommand0" />
          <!--(+)SSCOP-2426-->
          <if expression="IsAssistModeEnabled()">
            <rule action-name="EnableButton" parameter="context-name=ApproveAgeCheck;button-name=ButtonCommand1" /><!--SR803-->
          </if>
          <else>
            <rule action-name="DisableButton" parameter="context-name=ApproveAgeCheck;button-name=ButtonCommand1" />  
          </else>
          <!--(-)SSCOP-2426-->
        </message-rule-list>
      </message>
      <message name="NumericKeyPad4">
        <message-rule-list>
          <if expression="!ValidateBirthday()">
            <rule action-name="send-msg" parameter="message-name=Invalid Birthday" />
          </if>
          <else>
            <rule action-name="ApproveIntervention" />
            <rule action-name="ClearApprovedIntervention" parameter="type=age-restriction" />
            <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
            <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
          </else>
        </message-rule-list>
      </message>
      <message name="Invalid Birthday">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
          <rule action-name="DisableButton" parameter="button-name=NumericKeyPad4;button-name=NumericKeyPad3" />
          <if expression="!IsHandheld()">
            <rule action-name="ShowMessage" parameter="string-id=InvalidBirthDateFormatLeadthru;transaction-variable=InstructionText" />
          </if>
          <else>
            <rule action-name="ShowMessage" parameter="string-id=HH_InvalidBirthDateFormatLeadthru;transaction-variable=InstructionText" />
          </else>
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
          <rule action-name="ApproveIntervention" parameter="button-command=1" />
          <rule action-name="ClearApprovedIntervention" parameter="type=age-restriction" />
          <rule action-name="DisableButton" parameter="context-name=ApproveAgeCheck;button-name=ButtonCommand0" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" />
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="Age Restriction Approval">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=unapproved_restricted_items;expression=0" /><!--SR803-->
          <rule action-name="ClearApprovedIntervention" parameter="type=age-restriction" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <!-- (+)SR803 -->
      <message name="ButtonCommand1">
        <message-rule-list>          
          <if expression="IsHandheld()">
            <if expression="!IsHandheldAssistModeAllowed()">
              <if expression="unapproved_restricted_items > 1">
                <rule action-name="send-msg" parameter="message-name=Assist At Lane Event" />
                <transition state-name="AssistAtLane" />       
              </if>               
            </if>
          </if>
          <if expression="IsAssistModeEnabled()">
            <rule action-name="PushbackDelayedIntervention" />
            <rule action-name="SendClientMachineNameEvent" />
            <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
            <transition state-name="Assist Mode" />
          </if>
          <else>
            <rule action-name="PushbackDelayedIntervention" />
            <rule action-name="DPCSend" parameter="type=2" />
            <transition state-name="Main" />
          </else>
        </message-rule-list>
      </message>
      <!-- (-)SR803  -->
      <!-- (+)SSCOADK-666  -->
      <message name="Switch Lane Context Event">
        <message-rule-list>
          <rule action-name="SwitchLaneContextCommand" />
          <rule action-name="DPCSend" parameter="type=3;text=2" />
          <rule action-name="send-msg" parameter="context-name=LaneStatus;message-name=Update Buttons" />
          <if expression="MatchLaneContext(context-name=BagAndEAS)">
            <rule action-name="PushbackDelayedIntervention" />
            <rule action-name="goto-state" parameter="state-name=Main" />
          </if>
        </message-rule-list>
      </message>
      <!-- (-)SSCOADK-666  -->
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveCoupon                                                    -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveCoupon">
      <message name="Coupon Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=coupon)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveCoupon" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand2" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cApprove" />
          <rule action-name="ClearApprovedIntervention" parameter="type=coupon" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cApproveAndCollect;approval-code=verify-approved;category=ready-to-collect" />
          <rule action-name="ClearApprovedIntervention" parameter="type=coupon" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand2">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Coupon Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=coupon" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveVisualVerify                                              -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveVisualVerify">
      <entry-rule-list>
        <if expression="IsHandheld()"> 
          <if expression="IsHandheldAssistModeAllowed()">
              <rule action-name="SetText" parameter="context-name=ApproveVisualVerify;control-name=InstructionText;string-id=HH_VisualApproveLeadthru" />
          </if>
          <else>
            <rule action-name="SetText" parameter="context-name=ApproveVisualVerify;control-name=InstructionText;string-id=HH_VisualApproveLeadthru2" />
          </else>
        </if>
        <else>
          <rule action-name="SetText" parameter="context-name=ApproveVisualVerify;control-name=InstructionText;string-id=VisualApproveLeadthru" />
        </else>
      </entry-rule-list>
      <message name="Visual Validation Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=visual-validation)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveVisualVerify" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          <if expression="!IsHandheld()">
            <rule action-name="HideControl" parameter="AssistModeButton" />
          </if>
          <else>
            <rule action-name="HideControl" parameter="HHAssistModeButton" />
          </else>
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="ClearApprovedIntervention" parameter="type=visual-validation" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <rule action-name="SetReleaseExclusiveAccessRequired" parameter="release-needed=false" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="Visual Validation Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=visual-validation" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  HopperSubstitution                                              -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="HopperSubstitution">
      <message name="Hopper Substitution Event">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="HopperSubstitution" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cFixLater" />
          <rule action-name="ClearApprovedIntervention" parameter="type=hopper-substitution" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <rule action-name="SetReleaseExclusiveAccessRequired" parameter="release-needed=false" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Hopper Substitution Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=hopper-substitution" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveUnknownItem                                               -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveUnknownItem">
      <entry-rule-list>
        <if expression="IsHandheld()"> 
          <if expression="IsHandheldAssistModeAllowed()">
            <rule action-name="SetText" parameter="context-name=ApproveUnknownItem;control-name=InstructionText;string-id=HH_UnknownItemLeadthru" />
          </if>
          <else>
            <rule action-name="SetText" parameter="context-name=ApproveUnknownItem;control-name=InstructionText;string-id=HH_UnknownItemLeadthru2" />
          </else>
        </if>
        <else>
          <rule action-name="SetText" parameter="context-name=ApproveUnknownItem;control-name=InstructionText;string-id=UnknownItemLeadthru" />
        </else>
      </entry-rule-list>
      <message name="Unknown Item Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=unknown-item)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveUnknownItem" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="ClearApprovedIntervention" parameter="type=unknown-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
 		      <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cAssistMode" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="Unknown Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=unknown-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveItemNotForSale                                            -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveItemNotForSale">
      <message name="Recalled Item Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=recalled-item)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveItemNotForSale" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="ClearApprovedIntervention" parameter="type=recalled-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="Recalled Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=recalled-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveQuantityRestrict                                          -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveQuantityRestrict">
      <message name="Quantity Restricted Item Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=quantity-restricted-item)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveQuantityRestrict" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="ClearApprovedIntervention" parameter="type=quantity-restricted-item" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Quantity Restricted Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=quantity-restricted-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveTimeRestrict                                              -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveTimeRestrict">
      <message name="Time Restricted Item Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=time-restricted-item)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveTimeRestrict" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="ClearApprovedIntervention" parameter="type=time-restricted-item" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />          
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Time Restricted Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=time-restricted-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveHelp                                                      -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveHelp">
      <message name="Call For Help Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=call-for-help)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveHelp" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=1" />
          <rule action-name="ClearApprovedIntervention" parameter="type=call-for-help" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />          
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cAssistMode" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Call For Help Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=call-for-help" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveHelpOutsideTrx                                            -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveHelpOutsideTrx">
      <message name="Call For Help Outside Transaction Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=call-for-help)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="SwitchContext" parameter="ApproveHelpOutsideTrx" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=1" />
		  <rule action-name="ClearApprovedIntervention" parameter="type=call-for-help" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <!--<rule action-name="ClearCurrentIntervention" />-->
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveDelaySecurity                                             -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveDelaySecurity">
      <message name="Security Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=security)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveDelaySecurity" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="ClearApprovedIntervention" parameter="type=security" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />          
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Exit Assist Mode">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveVoid                                                      -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveVoid">
      <message name="Void Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=void)">
              <rule action-name="PushbackImmediateIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveVoid" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cApproveVoid" />
          <rule action-name="ClearApprovedIntervention" parameter="type=void" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />          
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="resend-msg" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Void Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=void" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!--  +TAR 352409: Newly added  -->
    <!-- ======================================================================== -->
    <!-- State:  ApproveSuspensionDecline                          -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveSuspensionDecline">
      <message name="SuspensionDecline Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=suspension-decline)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveSuspensionDecline" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cApprove;category=suspension-decline" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="resend-msg" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="SuspensionDecline Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=suspension-decline" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!--  -TAR 352409  -->
    <!-- ======================================================================== -->
    <!-- State:  ApproveOtherPayment                                              -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveOtherPayment">
      <message name="Other Payment Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=other-payment)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="SwitchContext" parameter="ApproveOtherPayment" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand2" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <if expression="IsNotConfirmSuspend()">
            <rule action-name="assign-variable" parameter="variable-name=remote_initiated_suspend;expression=1" />
            <rule action-name="SendSuspendRequest" parameter="reason=Transaction Suspended" />
            <rule action-name="goto-state" parameter="state-name=Main" />
          </if>
          <else>
            <rule action-name="send-msg" parameter="message-name=Confirm Suspend From Other Payment" />
            <rule action-name="goto-state" parameter="state-name=ConfirmSuspendFromOtherPayment" />
          </else>
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=1" />
          <rule action-name="ClearApprovedIntervention" parameter="type=other-payment" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand2">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cAssistMode" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Other Payment Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=other-payment" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveUnDeActivatedItem                                         -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveUnDeActivatedItem">
      <message name="Undeactivated Item Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=undeactivated-item)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="SwitchContext" parameter="ApproveUnDeActivatedItem" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="ClearApprovedIntervention" parameter="type=undeactivated-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Undeactivated Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=undeactivated-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveSignatureCapture                                          -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveSignatureCapture">
      <message name="Sig Cap Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=sig-approval)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="SwitchContext" parameter="ApproveSignatureCapture" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand2" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="ClearApprovedIntervention" parameter="type=sig-cap" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cRedo" />
          <rule action-name="ClearApprovedIntervention" parameter="type=sig-cap" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand2">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Sig Cap Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=sig-cap" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveCollection                                                -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveCollection">
      <message name="Collection Event">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveCollection" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="context-name=all" />
          <rule action-name="ClearApprovedIntervention" parameter="type=ready-to-collect" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  EnterPrice                                                       -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="EnterPrice">
      <exit-rule-list>
        <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
      </exit-rule-list>
      <message name="Price Required Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=price-required)">
              <rule action-name="PushbackImmediateIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="SwitchContext" parameter="EnterPrice" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
		  <rule action-name="DisableButton" parameter="context-name=EnterPrice;button-name=NumericKeyPad4" />
		  <rule action-name="DisableButton" parameter="context-name=EnterPrice;button-name=NumericKeyPad3" />
		  <rule action-name="DisableButton" parameter="context-name=EnterPrice;button-name=NumericKeyPad2" />
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=cash_amount_digit;expression=0" />
        </message-rule-list>
      </message>
      <message name="NumericKeyPad4">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="assign-variable" parameter="variable-name=cash_amount_digit;expression=0" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="NumericKeyPad3">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=cash_amount_digit;expression=0" />
          <rule action-name="DisableButton" parameter="context-name=EnterPrice;button-name=NumericKeyPad4" />
	  <rule action-name="DisableButton" parameter="context-name=EnterPrice;button-name=NumericKeyPad3" />
	  <rule action-name="DisableButton" parameter="context-name=EnterPrice;button-name=NumericKeyPad2" />
 
        </message-rule-list>
      </message>
      <message name="NumericKeyPad1">
        <message-rule-list>
		  <if expression="MAX_DIGITS_CASHAMT!=cash_amount_digit">
          <rule action-name="increment-variable" parameter="variable-name=cash_amount_digit" />
          <rule action-name="Append1To9" parameter="transaction-variable=EchoInput" />
		  <rule action-name="LocaleFormatMask" parameter="transaction-variable=EchoInput" />
          <rule action-name="evaluate-expression" parameter="cash_amount_digit==1" />
          <rule action-name="EnableButton" parameter="button-name=NumericKeyPad4" />
		  <rule action-name="EnableButton" parameter="button-name=NumericKeyPad3" />
		      <rule action-name="EnableButton" parameter="button-name=NumericKeyPad2" />
		  </if>
        </message-rule-list>
      </message>
      <message name="NumericKeyPad2">
        <message-rule-list>
		  <if expression="MAX_DIGITS_CASHAMT!=cash_amount_digit">
          <rule action-name="increment-variable" parameter="variable-name=cash_amount_digit" />
          <rule action-name="Append0" parameter="transaction-variable=EchoInput" />
		  <rule action-name="LocaleFormatMask" parameter="transaction-variable=EchoInput" />
          <rule action-name="evaluate-expression" parameter="cash_amount_digit==1" />
          <rule action-name="EnableButton" parameter="button-name=NumericKeyPad4" />
		  <rule action-name="EnableButton" parameter="button-name=NumericKeyPad3" />
		  </if>
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=cash_amount_digit;expression=0" />
          <rule action-name="ApproveIntervention" parameter="button-command=cReturn" />
          <rule action-name="ClearApprovedIntervention" parameter="type=price-required" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=cash_amount_digit;expression=0" />
          <rule action-name="PushbackImmediateIntervention" />
		      <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="resend-msg" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
		  <transition state-name="Main" /> <!--SSCOP-3529-->
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Price Required Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=price-required" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=cash_amount_digit;expression=0" />
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  CancelTransactionGeneric                                       -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="CancelTransactionGeneric">
      <message name="Cancel Transaction Generic Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=cancel-transaction)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="SwitchContext" parameter="CancelTransactionGeneric" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="Cancel Transaction Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=cancel-transaction)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="SwitchContext" parameter="CancelTransactionGeneric" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cYes" />
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cNo" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="resend-msg" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ConfirmSuspend                                                   -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ConfirmSuspend">
      <exit-rule-list>
        <if expression="is_handheld!=1">
          <rule action-name="ReleaseExclusiveAccess" />
        </if>
      </exit-rule-list>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ConfirmSuspend" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          <rule action-name="send-msg" parameter="message-name=Check Handheld" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="GenerateLocalButtonPress" parameter="button-name=SMButton1;context-name=SmConfirmSuspendedTransaction" />
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="GenerateLocalButtonPress" parameter="button-name=SMButton2;context-name=SmConfirmSuspendedTransaction" />
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  IncorrectItemWeight                                              -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="IncorrectItemWeight">
	  <exit-rule-list>
        <rule action-name="ReleaseExclusiveAccess" />
      </exit-rule-list>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>      
		  <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />		  
		  <rule action-name="AcquireExclusiveAccess" />
		  <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
		  <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>          
		   <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />		  
		  <rule action-name="AcquireExclusiveAccess" />
		  <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
		  <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand2">
        <message-rule-list>		  
          <transition state-name="Main" />
        </message-rule-list>
      </message>
	  <message name="ButtonCommand3">
        <message-rule-list>
		  <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
		  <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  UnexpectedIncrease                                                -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="UnexpectedIncrease">
	  <exit-rule-list>
        <rule action-name="ReleaseExclusiveAccess" />
      </exit-rule-list>
      <message name="Switch Context">
        <message-rule-list>           
		  <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />		  
		  <rule action-name="AcquireExclusiveAccess" />
		  <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
		  <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
		  </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=security)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->          
		  <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />		  
		  <rule action-name="AcquireExclusiveAccess" />
		  <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
		  <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
	  <message name="ButtonCommand3">
        <message-rule-list>
		  <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!--SR085 + -->
    <!-- ======================================================================== -->
    <!-- State:  BagBoxNotValid                                                   -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="BagBoxNotValid">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />		  
		  <rule action-name="AcquireExclusiveAccess" />
		  <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
		  <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />		  
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=security)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->         
		  <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />		  
		  <rule action-name="AcquireExclusiveAccess" />
		  <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
		  <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
	  <message name="ButtonCommand3">
        <message-rule-list>
		  <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!--SR085 - -->
    <!-- ======================================================================== -->
    <!-- State:  SkipBaggingBtnThreshold                                            -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="SkipBaggingBtnThreshold">
	  <exit-rule-list>
        <rule action-name="ReleaseExclusiveAccess" />
      </exit-rule-list>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />		  
		  <rule action-name="AcquireExclusiveAccess" />
		  <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
		  <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />	
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=security)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->          
		  <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />		  
		  <rule action-name="AcquireExclusiveAccess" />
		  <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
		  <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />	
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
		  <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
	  <message name="ButtonCommand3">
        <message-rule-list>
		  <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ItemRemovedBtnThreshold                                              -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ItemRemovedBtnThreshold">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ItemRemovedBtnThreshold" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=security)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  BagBoxBtnThreshold                                               -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="BagBoxBtnThreshold">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="BagBoxBtnThreshold" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=security)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  NewWeightItem                                                   -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="NewWeightItem">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="NewWeightItem" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand2" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cApproveNoUpdate" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cApprove&amp;Update" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand2">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  BagItemTimerExpires                                                 -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="BagItemTimerExpires">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="BagItemTimerExpires" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=security)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  TakeChangeTimerExpires                                           -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="TakeChangeTimerExpires">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="TakeChangeTimerExpires" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=takechange-timer-expired)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  EASNotActivated                                                  -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="EASNotActivated">
<!-- sscoadk-6088+ -->
      <message name="Undeactivated Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=undeactivated-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
<!-- sscoadk-6088- -->
      <message name="Undeactivated Item Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=undeactivated-item)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="SwitchContext" parameter="EASNotActivated" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="ClearApprovedIntervention" parameter="type=undeactivated-item" />
		  <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  PickingUpItemsTimerExpires                                         -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="PickingUpItemsTimerExpires">
      <message name="Switch Context">
        <message-rule-list>
          <!-- <rule action-name="SwitchContext" parameter="PickingUpItemsTimerExpires" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />	-->
		  
		  <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />		  
		  <rule action-name="AcquireExclusiveAccess" />
		  <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
		  <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <!-- <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
          <if expression="!IsInterventionOutstanding()">
            <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <if expression="!IsNotImmediateInterventionOutstanding()">
              <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </if>
            <else>
              <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </else>
          </else>	-->
		  
		  <rule action-name="SwitchContext" parameter="RestrictApprovalFromRAP" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />		  
		  <rule action-name="AcquireExclusiveAccess" />
		  <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
		  <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
		  <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
	  <message name="ButtonCommand3">
        <message-rule-list>
		  <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  DeviceFailure                                                   -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="DeviceFailure">
      <message name="Device Error Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=device-error)">
              <rule action-name="PushbackImmediateIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="SwitchContext" parameter="DeviceFailure" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Device Error Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=device-error" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
		  <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="resend-msg" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
		  <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  WLDBFailure                                                     -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="WLDBFailure">
      <message name="WLDB Failure Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="WLDBFailure" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  UnexpectedDecrease                                             -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="UnexpectedDecrease">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="UnexpectedDecrease" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=security)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  CloseLane                                                         -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="CloseLane">
      <message name="Close Lane Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="CloseLane" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="ReleaseExclusiveAccess" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="LaneStatusButton">
        <message-rule-list>
          <rule action-name="push-state" />
          <transition state-name="LaneStatus" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  BagAreaBackup                                                      -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="BagAreaBackup">
      <message name="Bag Area Backup Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="BagAreaBackup" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  SafetyCoverOpen                                                  -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="SafetyCoverOpen">
      <message name="Safety Cover Open Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="SafetyCoverOpen" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  UnDeActivatedItemOnTABeltDetected                                  -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="UnDeActivatedItemOnTABeltDetected">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="UnDeActivatedItemOnTABeltDetected" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  VerifySignature                                                   -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="VerifySignature">
      <message name="Verify Signature Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="VerifySignature" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cDone" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveAssistedTender                                            -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveAssistedTender">
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="IsInterventionOutstanding" />
          <rule action-name="ClearRAPDataNeededIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <if expression="!IsInterventionOutstanding()">
            <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          </if>
          <else>
            <if expression="!IsNotImmediateInterventionOutstanding()">
              <rule action-name="DisplayNextImmediateIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </if>
            <else>
              <rule action-name="DisplayNextDelayedIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            </else>
          </else>
        </message-rule-list>
      </message>
      <message name="Assisted Tender Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveAssistedTender" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cAssistMode" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  AssistedEndorsement                                              -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="AssistedEndorsement">
	  <exit-rule-list>
        <rule action-name="ReleaseExclusiveAccess" />
      </exit-rule-list>
      <message name="Assisted Endorsement Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="AssistedEndorsement" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cAssistMode" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
		  <rule action-name="SetReleaseExclusiveAccessRequired" parameter="release-needed=false" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="ClearCurrentIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />		  
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false"/>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  StartTransaction                                                  -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="StartTransaction">
      <exit-rule-list>
        <rule action-name="ReleaseExclusiveAccess" />
      </exit-rule-list>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="StartTransaction" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cStartTransaction" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  StartTransactionAM                                            -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="StartTransactionAM">
      <exit-rule-list>
        <rule action-name="ReleaseExclusiveAccess" />
      </exit-rule-list>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="StartTransactionAM" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand2" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cStartTransactionAM" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cStartTransaction" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand2">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=CancelRAPInitiateTransaction" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cAssistMode" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="Transaction Begin">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Start Transaction Enter AM Event">
        <message-rule-list>
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="SetReleaseExclusiveAccessRequired" parameter="release-needed=false" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="Remote Approval">
        <message-rule-list>
          <rule action-name="ClearRemoteIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ItemsForgotten                                                   -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ItemsForgotten">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ItemsForgotten" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  InsertCouponTimerExpires                                         -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="InsertCouponTimerExpires">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="InsertCouponTimerExpires" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <if expression="!IsHandlingDisabledFor(context-name=ApproveCoupon;do-update=true)">
            <!-- (SR831) -->
            <!--SSCOP-3727-->
            <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
            <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
            <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
          </if>
          <!-- (+SR831) -->
          <else>
            <rule action-name="send-msg" parameter="message-name=Go To Lane Event;copy-plist=true" />
            <transition state-name="SMDataEntryGoToLane" />
          </else>
          <!-- (-SR831) -->
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  CollectGiftCardRAP                                                   -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="CollectGiftCardRAP">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="CollectGiftCardRAP" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  HostOfflineRAP                                                     -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="HostOfflineRAP">
      <message name="Host Offline Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="HostOfflineRAP" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  MultiPackItem                                                     -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="MultiPackItem">
      <message name="Multipack Item Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="MultiPackItem" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  OutOfSyncNeedAssist                                             -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="OutOfSyncNeedAssist">
      <message name="Out Of Sync Assist Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="OutOfSyncNeedAssist" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="resend-msg" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cAssistMode" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  OutOfSyncStop                                                    -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="OutOfSyncStop">
      <message name="Out Of Sync Stop Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="OutOfSyncStop" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ConfirmSuspendFromOtherPayment                                              -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ConfirmSuspendFromOtherPayment">
      <exit-rule-list>
        <rule action-name="ReleaseExclusiveAccess" />
      </exit-rule-list>
      <message name="Confirm Suspend From Other Payment">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ConfirmSuspendFromOtherPayment" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cSuspend" />
          <rule action-name="assign-variable" parameter="variable-name=remote_initiated_suspend;expression=1" />
          <rule action-name="SendSuspendRequest" parameter="reason=Transaction Suspended" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=1" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cAssistMode" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <rule action-name="SetReleaseExclusiveAccessRequired" parameter="release-needed=false" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ConfirmSuspendFromLaneStatus                                                       -->
    <!-- Function:  Transaction in progress                                       -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ConfirmSuspendFromLaneStatus">
      <exit-rule-list>
        <rule action-name="ReleaseExclusiveAccess" />
      </exit-rule-list>
      <message name="Confirm Suspend From Lane Status">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ConfirmSuspendFromLaneStatus" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="DisableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="assign-variable" parameter="variable-name=remote_initiated_suspend;expression=1" />
          <rule action-name="NotifyAssistMode" parameter="enter-store-mode" />
		  <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=RAPConfirmSuspend" /> <!--SSCOI-45994-->
          <transition state-name="Suspend In Progress" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="DisableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="pop-state" />
        </message-rule-list>
      </message>
      <message name="Assist Mode Size To FullScreen">
        <message-rule-list>
          <rule action-name="GenerateLocalButtonPress" parameter="button-name=SMButton2;context-name=SmAuthorization" />
          <rule action-name="send-msg" parameter="message-name=Switch Context" />
          <transition state-name="ConfirmSuspend" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveRestrictedNotAllowed                                      -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveRestrictedNotAllowed">
      <message name="Restricted Not Allowed Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=restricted-not-allowed)">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="ApproveRestrictedNotAllowed" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" />
          <rule action-name="ClearApprovedIntervention" parameter="type=restricted-not-allowed" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
    		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Restricted Not Allowed Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=restricted-not-allowed" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  StartTrainingModeTrans                                                      -->
    <!-- Function:                                                                  -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="StartTrainingModeTrans">
      <message name="Training Mode Transaction Event">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="StartTrainingModeTrans" />
          <!-- (+SR831) -->
          <if expression="disable_handling != 1"><!--disable handling is enabled-->
            <if expression="disable_handling == 2">
              <rule action-name="send-msg" parameter="message-name=Go To Lane Event;copy-plist=true" />
              <transition state-name="SMDataEntryGoToLane" />
            </if>
            <if expression="disable_handling == 3">
              <if expression="IsHandheld()">
                <rule action-name="send-msg" parameter="message-name=Go To Lane Event;copy-plist=true" />
                <transition state-name="SMDataEntryGoToLane" />
              </if>
              <else>
                <rule action-name="AcquireExclusiveAccess" />
                <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
                <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
                <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
                <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
              </else>
            </if><!-- endif for "disable_handling == 3" -->
            <if expression="disable_handling == 4">
              <if expression="!IsHandheld()">
                <rule action-name="send-msg" parameter="message-name=Go To Lane Event;copy-plist=true" />
                <transition state-name="SMDataEntryGoToLane" />
              </if>
              <else>
                <rule action-name="AcquireExclusiveAccess" />
                <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
                <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
                <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
                <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
              </else>
            </if><!-- endif for "disable_handling == 4" -->
          </if><!-- endif for "disable_handling != 1" -->
          <else>
          <!-- (-SR831) -->
            <rule action-name="AcquireExclusiveAccess" />
            <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
            <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
            <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
            <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
          </else><!--sr831-->
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cYes" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cNo" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="resend-msg" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  RAPDataNeededNotHandled                                          -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="RAPDataNeededNotHandled">
      <message name="RAPDataNeeded Not Handled Event">
        <message-rule-list>
          <!-- +RAPLite -->
          <if expression="IsRAPLite()">
            <if expression="!IsInterventionClearable(intervention-name=more-data)">
              <rule action-name="PushbackImmediateIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <!-- -RAPLite -->
          <!-- (+SR831) -->
          <if expression="disable_handling != 1">
            <!--disable handling is enabled-->
            <if expression="disable_handling == 2">
              <rule action-name="send-msg" parameter="message-name=Go To Lane Event;copy-plist=true" />
              <transition state-name="SMDataEntryGoToLane" />
            </if>
            <if expression="disable_handling == 3">
              <if expression="IsHandheld()">
                <rule action-name="send-msg" parameter="message-name=Go To Lane Event;copy-plist=true" />
                <transition state-name="SMDataEntryGoToLane" />
              </if>
              <else>
                <rule action-name="NotifyAssistMode" parameter="enter-data-needed-mode" />
              </else>
            </if>
            <!-- endif for "disable_handling == 3" -->
            <if expression="disable_handling == 4">
              <if expression="!IsHandheld()">
                <rule action-name="send-msg" parameter="message-name=Go To Lane Event;copy-plist=true" />
                <transition state-name="SMDataEntryGoToLane" />
              </if>
              <else>
                <rule action-name="NotifyAssistMode" parameter="enter-data-needed-mode" />
              </else>
            </if>
            <!-- endif for "disable_handling == 4" -->
          </if>
          <!-- endif for "disable_handling != 1" -->
          <else>
            <!-- (-SR831) -->
            <rule action-name="NotifyAssistMode" parameter="enter-data-needed-mode" />
          </else>
        </message-rule-list>
      </message>
      <message name="Exit Assist Mode">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-data-needed-mode" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Exit Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=0" />
        </message-rule-list>
      </message>
      <message name="Disconnect">
        <message-rule-list>
          <if expression="IsCurrentRemoteConnection()">
            <rule action-name="NotifyAssistMode" parameter="exit-data-needed-mode" />
            <rule action-name="ReleaseExclusiveAccess" />
            <rule action-name="DisconnectCommand">
              <failure-transition>Logged Off</failure-transition>
            </rule>
            <rule action-name="goto-state" parameter="state-name=Main" />
          </if>
          <else>
            <rule action-name="DisconnectCommand" />
          </else>
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="resend-msg" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
		  <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-data-needed-mode" />
          <rule action-name="ReleaseExclusiveAccess" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
	  <!-- (+) SSCOI-46971 -->
	  <message name="ButtonCommand1">
        <message-rule-list>
			<if expression="MatchLaneContext(context=TakeChangeTimeout)">
				<rule action-name="PushbackImmediateIntervention" parameter="exit-data-needed-mode" />
				<rule action-name="ClearCurrentIntervention" />
				<rule action-name="send-msg" parameter="message-name=Release Exclusive Access Event;copy-plist=true" />
			</if>
        </message-rule-list>
      </message>
	  <!-- (-) SSCOI-46971 -->
    </state>
    <!-- ======================================================================== -->
    <!-- State:  MaxCouponApproval  SR678                                                                 -->
    <!-- Function:                                                                                                -->
    <!-- Messages:                                                                                                -->
    <!-- ======================================================================== -->
    <state name="MaxCouponApproval">
      <message name="Max Coupon Event">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="MaxCouponApproval" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0;" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand2" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cApproveCoupon" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand2">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
		  <rule action-name="DPCSend" parameter="type=2" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="AssistModeButton">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cApproveCoupon" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="SendClientMachineNameEvent" />
          <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
          <rule action-name="RequestFullScreenAssistMode" />
          <rule action-name="SetReleaseExclusiveAccessRequired" parameter="release-needed=false" />
          <transition state-name="Assist Mode" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="DPCSend" parameter="type=2" />
          <rule action-name="resend-msg" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  CouponWarningAtFinalization SR678                                                                    -->
    <!-- Function:  Main state for handling items                                                                   -->
    <!-- Messages:                                                                                                -->
    <!-- ======================================================================== -->
    <state name="CouponWarningAtFinalization">
      <message name="Max Coupon Finalization Event">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="CouponWarningAtFinalization" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cClearSecurity" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
	<!-- ======================================================================== -->
    <!-- State:  InvalidBarcode  SR879                                            -->
    <!-- Function:                                                                -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="InvalidBarcode">
      <message name="Invalid Barcode Event">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="InvalidBarcode" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
		  <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="ApproveIntervention" parameter="button-command=cApprove" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand1">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="resend-msg" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  SMDataEntryGoToLane                                              -->
    <!-- Function:  instructs to approve intervention at lane                     -->
    <!-- Messages:  SR831                                                         -->
    <!-- ======================================================================== -->
    <state name="SMDataEntryGoToLane">
      <message name="Go To Lane Event">
      <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <if expression="disable_handling == 2">
            <rule action-name="SwitchContext" parameter="SMDataEntryGoToLane" />
          </if>
          <else-if expression="disable_handling == 3">
            <rule action-name="SwitchContext" parameter="SMDataEntryGoToLaneOrRap" />
          </else-if>
          <else-if expression="disable_handling == 4">
            <rule action-name="SwitchContext" parameter="SMDataEntryGoToLaneOrHHRap" />
          </else-if>
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
        </message-rule-list>
      </message> 
      <message name="ButtonCommand0">
        <message-rule-list>
          <if expression="!CheckImmediateIntervention()">
            <rule action-name="PushbackImmediateIntervention" />
          </if>
          <else>
            <if expression="is_on_top_rap_data_needed==1">
              <rule action-name="PushbackImmediateIntervention" />
          </if>
          <else>
            <rule action-name="PushbackDelayedIntervention" />
            <transition state-name="Main" />
            </else>        
          </else>
          <rule action-name="ClearCurrentIntervention" />
            <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <if expression="!CheckImmediateIntervention()">
            <rule action-name="PushbackImmediateIntervention" />
          </if>
          <else>
            <if expression="is_on_top_rap_data_needed==1">
              <rule action-name="PushbackImmediateIntervention" />
            </if>
            <else>
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </else>
          </else>
          <rule action-name="ClearCurrentIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackImmediateIntervention" />
          <rule action-name="ClearCurrentIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <!-- +SSCOP-4209 -->
          <if expression="IsCurrentInterventionInProgress()">
            <if expression="is_on_top_rap_data_needed==1"> 
               <rule action-name="PushbackImmediateIntervention" />
            </if>
            <else>
              <rule action-name="PushbackDelayedIntervention" />
            </else>        
          </if>
          <!-- -SSCOP-4209 -->
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="ReleaseExclusiveAccess" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="LaneStatusButton">
        <message-rule-list>
          <rule action-name="push-state" />
          <transition state-name="LaneStatus" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="Age Restriction Approval">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
          <rule action-name="assign-variable" parameter="variable-name=unapproved_restricted_items;expression=0" /><!--SR803-->
          <rule action-name="ClearApprovedIntervention" parameter="type=age-restriction" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Price Required Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=price-required" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Coupon Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=coupon" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Visual Validation Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=visual-validation" />
          <rule action-name="ClearCurrentIntervention" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Void Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=void" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Recalled Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=recalled-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Unknown Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=unknown-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Time Restricted Item Approval">
        <message-rule-list>
          <rule action-name="ClearApprovedIntervention" parameter="type=time-restricted-item" />
          <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
          <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Cancel Transaction Event">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="CancelTransactionGeneric" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand1" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  AssistAtLane  SR803                                              --> 
    <!-- Function: instructs to handle intervention at lane                       -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="AssistAtLane">
      <message name="Assist At Lane Event">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="AssistAtLane" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />		  
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
		  <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>         
          <rule action-name="PushbackDelayedIntervention" />                    
          <rule action-name="ReleaseExclusiveAccess" />
          <transition state-name="Main" />          
        </message-rule-list>
      </message>      
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="resend-msg" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
	<!-- sscoadk-321+ -->
    <!-- ======================================================================== -->
    <!-- State:  NoSale                                                           -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="NoSale">
      <message name="LaneStatusButton">
        <message-rule-list>
          <rule action-name="push-state" />
          <if expression="IsOutsideTransaction()">
            <rule action-name="goto-state" parameter="state-name=LaneStatus" />
          </if>
          
          <rule action-name="IsNotHandheld">
            <failure-transition>LaneStatus</failure-transition>
          </rule>
          <rule action-name="IsInterventionOutstanding">
            <failure-transition>LaneStatus</failure-transition>
          </rule>
          <transition state-name="LaneInterventionDetail" />
        </message-rule-list>
      </message>
      <message name="No Sale Event">
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="DisplayAgeRestrictionInstructionText" parameter="instruction-text-variable=InstructionText;transaction-variable=InstructionText;context-name=NoSale" />
          <rule action-name="DisplayCurrentIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;instruction-text-variable=InstructionText;transaction-variable=InstructionText;lane-status3-text=LaneStateWindow3" />
          <rule action-name="SwitchContext" parameter="" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  ApproveNoSale                                                    -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="ApproveNoSale">
      <entry-rule-list>
        <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
      </entry-rule-list>
      <exit-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
      </exit-rule-list>
      <message name="No Sale Event">
        <message-rule-list>
           <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="DisplayAgeRestrictionInstructionText" parameter="instruction-text-variable=InstructionText;transaction-variable=InstructionText;context-name=ApproveNoSale" />          
          <rule action-name="SwitchContext" parameter="ApproveNoSale" />
          <rule action-name="CheckForDateNotNeededButtonOption" parameter="button-name=ButtonCommand0" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
          <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="IsHandheld">
            <failure-transition>Main</failure-transition>
          </rule>
          <transition state-name="LaneDetail" />
        </message-rule-list>
      </message>
      <message name="Enter Store Mode">
        <message-rule-list>
          <rule action-name="assign-variable" parameter="variable-name=store_mode;expression=1" />
          <rule action-name="EnterStoreMode" parameter="data-source=CMSMReceipt;string-id=SMLogInReceiptText" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" /> 
          <transition state-name="Store Mode" />
        </message-rule-list>
      </message>
      <message name="No Sale Approval">
        <message-rule-list>
           <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
           <rule action-name="assign-variable" parameter="variable-name=number_of_digit;expression=0" />
	   <rule action-name="ClearApprovedIntervention" parameter="type=no-sale" />
           <rule action-name="ClearLaneStatusWindows" parameter="lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;lane-status3-text=LaneStateWindow3" />
           <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" parameter="release-needed=false" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>
    <!-- sscoadk-321- -->
	<!-- ======================================================================== -->
    <!-- State:  GenericDelayed                                                      -->
    <!-- Function:  Main state for handling items                                 -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="GenericDelayed">
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="GenericDelayed" />
          <rule action-name="AcquireExclusiveAccess" />
        </message-rule-list>
      </message>      
        <message name="Generic Delayed Event">
        <message-rule-list>
          <if expression="IsRAPLite()">
            <if expression="intervention_handling!=2">
              <rule action-name="PushbackDelayedIntervention" />
              <transition state-name="Main" />
            </if>
          </if>
          <if expression="intervention_in_progress ==0">
            <rule action-name="DisplayCurrentIntervention" parameter="data-source=CMSMReceipt;lane-button-text=LaneButtonText;lane-status1-text=LaneStateWindow1;lane-status2-text=LaneStateWindow2;instruction-text-variable=InstructionText;transaction-variable=InstructionText;lane-status3-text=LaneStateWindow3" />
            <if expression="IsAssistModeEnabled()">
              <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=GenericDelayedAssistModeStatus" />
              <if expression="is_GDAsyn ==1">
                <rule action-name="assign-variable" parameter="variable-name=intervention_in_progress;expression=1" />
                <rule action-name="DisplayGenericDelayedButtons" />
              </if>
            </if>
            <else>
              <rule action-name="send-msg" parameter="message-name=Assist Mode Not Available Event" />
              <transition state-name="AssistModeNotAvailable" />
            </else>
          </if>
          <else>
            <rule action-name="DPCSend" parameter="type=1;text=RAP Data Needed" />
            <rule action-name="SaveAsDelayedIntervention" parameter="lookup-table-name=RAPDataNeededInterventionsTable" />
          </else>
        </message-rule-list>
        </message>
      <message name="Assist Mode Not Available Event">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Assist Mode Not Available Event" />
          <transition state-name="AssistModeNotAvailable" />
        </message-rule-list>
      </message>
      <message name="Assist Mode Available Event">
          <message-rule-list>
            <!-- (+SR831) -->
            <if expression="disable_handling != 1">
              <!--disable handling is enabled-->
              <if expression="disable_handling == 2">
                <rule action-name="send-msg" parameter="message-name=Go To Lane Event;copy-plist=true" />
                <transition state-name="SMDataEntryGoToLane" />
              </if>
              <if expression="disable_handling == 3">
                <if expression="IsHandheld()">
                  <rule action-name="send-msg" parameter="message-name=Go To Lane Event;copy-plist=true" />
                  <transition state-name="SMDataEntryGoToLane" />
                </if>
                <else>
                  <if expression="is_GDAsyn != 1">
                    <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=GenericDelayedStart" />
                    <rule action-name="SendClientMachineNameEvent" />
                    <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
                    <rule action-name="RequestFullScreenAssistMode" />
                    <transition state-name="Assist Mode" />
                  </if>
                  <else>
                    <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
                  </else>
                </else>
              </if>
              <!-- endif for "disable_handling == 3" -->
              <if expression="disable_handling == 4">
                <if expression="!IsHandheld()">
                  <rule action-name="send-msg" parameter="message-name=Go To Lane Event;copy-plist=true" />
                  <transition state-name="SMDataEntryGoToLane" />
                </if>
                <else>
                  <if expression="is_GDAsyn != 1">
                    <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=GenericDelayedStart" />
                    <rule action-name="SendClientMachineNameEvent" />
                    <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
                    <rule action-name="RequestFullScreenAssistMode" />
                    <transition state-name="Assist Mode" />
                  </if>
                  <else>
                    <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
                  </else>
                </else>
              </if>
              <!-- endif for "disable_handling == 4" -->
            </if>
            <!-- endif for "disable_handling != 1" -->
            <else>
              <!-- (-SR831) -->
              <if expression="is_GDAsyn != 1">
                <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=GenericDelayedStart" />
                <rule action-name="SendClientMachineNameEvent" />
                <rule action-name="NotifyAssistMode" parameter="enter-assist-mode" />
                <rule action-name="RequestFullScreenAssistMode" />
                <transition state-name="Assist Mode" />
              </if>
              <else>
                <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
              </else>
            </else>
          </message-rule-list>
      </message>
      <message name="Switch Lane Context Event">
        <message-rule-list>
          <rule action-name="SwitchLaneContextCommand" />
          <rule action-name="DPCSend" parameter="type=3;text=2" />
          <rule action-name="send-msg" parameter="context-name=LaneStatus;message-name=Update Buttons" />
          <if expression="is_GDAsyn != 1">
            <if expression="MatchLaneContext(context-name=ScanAndBag)">
              <rule action-name="PushbackDelayedIntervention" />
              <rule action-name="goto-state" parameter="state-name=Main" />
            </if>
			<else-if expression="MatchLaneContext(context-name=BagAndEAS)">
            <rule action-name="PushbackDelayedIntervention" />
            <rule action-name="goto-state" parameter="state-name=Main" />
			</else-if>
            <else-if expression="MatchLaneContext(context-name=ScanAndBagWithReward)">
              <rule action-name="PushbackDelayedIntervention" />
              <rule action-name="goto-state" parameter="state-name=Main" />
            </else-if>
            <else-if expression="MatchLaneContext(context-name=QuickPickItems)">
              <rule action-name="PushbackDelayedIntervention" />
              <rule action-name="goto-state" parameter="state-name=Main" />
            </else-if>
            <else-if expression="MatchLaneContext(context-name=QuickPickItemsWithReward)">
              <rule action-name="PushbackDelayedIntervention" />
              <rule action-name="goto-state" parameter="state-name=Main" />
            </else-if>
          </if>
        </message-rule-list>
      </message>
      <message name="Exit Assist Mode">
        <message-rule-list>
          <rule action-name="NotifyAssistMode" parameter="exit-assist-mode" />
          <if expression="!IsHandheld()">
            <if expression="IsInterventionOutstanding()">
              <rule action-name="send-msg" parameter="message-name=Transition From Intervention" />
            </if>
            <else>
              <rule action-name="ReleaseExclusiveAccess" />
              <transition state-name="Main" />
            </else>
          </if>
          <else>
            <transition state-name="LaneDetail" />
          </else>
          <!--<rule action-name="PushbackDelayedIntervention" />
          <rule action-name="ReleaseExclusiveAccess" />
          <transition state-name="Main" />-->
        </message-rule-list>
      </message>
      <message name="SMButton1">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=DataNeededResponse-SMButton1" />
        </message-rule-list>
      </message>
      <message name="SMButton2">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=DataNeededResponse-SMButton2" />
        </message-rule-list>
      </message>
      <message name="SMButton3">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=DataNeededResponse-SMButton3" />
        </message-rule-list>
      </message>
      <message name="SMButton4">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=DataNeededResponse-SMButton4" />
        </message-rule-list>
      </message>
      <message name="SMButton5">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=DataNeededResponse-SMButton5" />
        </message-rule-list>
      </message>
      <message name="SMButton6">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=DataNeededResponse-SMButton6" />
        </message-rule-list>
      </message>
      <message name="SMButton7">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=DataNeededResponse-SMButton7" />
        </message-rule-list>
      </message>
      <message name="SMButton8">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=DataNeededResponse-SMButton8" />
        </message-rule-list>
      </message>
      <message name="KeyBoardP1">
        <message-rule-list>
          <rule action-name="Append1To9" parameter="transaction-variable=EchoInput" />
          <rule action-name="EnableButton" parameter="button-name=SMNumericKeyBoard" />
          <rule action-name="EnableButton" parameter="button-name=KeyBoardP4" />          
        </message-rule-list>
      </message>
      <message name="KeyBoardP2">
        <message-rule-list>
          <rule action-name="Append0" parameter="transaction-variable=EchoInput" />
          <rule action-name="EnableButton" parameter="button-name=SMNumericKeyBoard" />
          <rule action-name="EnableButton" parameter="button-name=KeyBoardP4" />
        </message-rule-list>
      </message>
      <!-- (-)SSCOP-949 -->
      <message name="SMNumericKeyBoard">
        <message-rule-list>
          <rule action-name="ClearEntryText" parameter="transaction-variable=EchoInput" />
        </message-rule-list>
      </message>
      <message name="KeyBoardP4">
        <message-rule-list>
          <rule action-name="SendUnsolicitedData" parameter="unsolicited-data=Input" />
        </message-rule-list>
      </message>
    </state>
    <!-- ======================================================================== -->
    <!-- State:  AssistModeNotAvailable                                                -->
    <!-- Function: instructs to wait until Assist Mode button is available                       -->
    <!-- Messages:                                                                -->
    <!-- ======================================================================== -->
    <state name="AssistModeNotAvailable">
      <message name="Assist Mode Not Available Event">
        <message-rule-list>
          <rule action-name="send-msg" parameter="message-name=Switch Context;copy-plist=true" />
        </message-rule-list>
      </message>
      <message name="Switch Context">
        <message-rule-list>
          <rule action-name="SwitchContext" parameter="AssistModeNotAvailable" />
          <rule action-name="AcquireExclusiveAccess" />
          <rule action-name="EnableButton" parameter="context-name=all;button-name=ButtonCommand0" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=LaneStatusButton" />
          <rule action-name="DisableButton" parameter="context-name=all;button-name=AssistModeButton" />
        </message-rule-list>
      </message>
      <message name="ButtonCommand0">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="assign-variable" parameter="variable-name=intervention_in_progress;expression=0" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="No RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="ClearRAPDataNeededIntervention" />
          <rule action-name="resend-msg" />
          <rule action-name="assign-variable" parameter="variable-name=intervention_in_progress;expression=0" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="RAP Data Needed Event">
        <message-rule-list>
          <rule action-name="resend-msg" />
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="assign-variable" parameter="variable-name=intervention_in_progress;expression=0" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
      <message name="Release Exclusive Access Event">
        <message-rule-list>
          <rule action-name="PushbackDelayedIntervention" />
          <rule action-name="assign-variable" parameter="variable-name=intervention_in_progress;expression=0" />
          <transition state-name="Main" />
        </message-rule-list>
      </message>
    </state>	

  </rules>
</state-machine>
