<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:c="clr-namespace:SSCOUIModels.Controls;assembly=SSCOUIModels"
    xmlns:helpers="clr-namespace:SSCOUIModels.Helpers;assembly=SSCOUIModels"
    xmlns:controls="clr-namespace:SSCOControls;assembly=SSCOControls"
    xmlns:sgp="clr-namespace:SSCOControls.SlidingGridPageComponents;assembly=SSCOControls"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <sys:String
        x:Key="bttnValidClickSound">[SoundPath]BttnValid.wav</sys:String>
    <sys:String
        x:Key="pickListValidClickSound">[SoundPath]PickListValid.wav</sys:String>
    <sys:String
        x:Key="scrollValidClickSound">[SoundPath]ScrollValid.wav</sys:String>
    <sys:String
        x:Key="scanQRCodeImage">[ImagePath]EndOfTrip.png</sys:String>
    <!-- +CRD 125377 -->
    <sys:String
        x:Key="SNDStartImage">[ImagePath]StartImage.png</sys:String>
    <sys:String
        x:Key="SNDSmallImage">[ImagePath]SNDSmallLogo.png</sys:String>
    <sys:String
        x:Key="SND30PercentImage">[ImagePath]SND30Percent.png</sys:String>
    <sys:String
        x:Key="SND60PercentImage">[ImagePath]SND60Percent.png</sys:String>
    <sys:String
        x:Key="SNDCheckImage">[ImagePath]SNDcheck.png</sys:String>
    <sys:String
        x:Key="SNDContactlessImage">[ImagePath]SNDcontactless.png</sys:String>
    <!-- -CRD 125377 -->
    <sys:String
        x:Key="fuelImage">[ImagePath]Fuel.png</sys:String>
    <sys:String
        x:Key="lottoImage">[ImagePath]Lotto.png</sys:String>
    <sys:Double
        x:Key="disabledButtonOpacity">0.70</sys:Double>
    <sys:Double
        x:Key="ReceiptFontSize">18</sys:Double>
    <sys:Double
        x:Key="ReceiptBigFontSize">18</sys:Double>
    <sys:Double
        x:Key="StoreModeSmallButtonFontSize">20</sys:Double>
    <sys:Double
        x:Key="StoreModeActionButtonDisabledOpacity">0.30</sys:Double>
    <sys:Double
        x:Key="NMINumberHeight">9.5</sys:Double>
    <sys:Double
        x:Key="NMILetterHeight">5</sys:Double>
    <sys:Double
        x:Key="NMICardLetterHeight">7.5</sys:Double>
    <sys:Double
        x:Key="NMIMeasurementHeight">3</sys:Double>
    <sys:Double
        x:Key="MeijerNMIMeasurementHeight">2</sys:Double> <!--SSCOI-46398-->
    <sys:Double
        x:Key="CardFilmStripScale">1.125</sys:Double>
    <sys:Double
        x:Key="unavControlBackgroundPanelOpacity">0.75</sys:Double>

    <!-- Fonts -->
    <FontFamily
        x:Key="fontRegular">Lato Regular</FontFamily>
    <FontFamily
        x:Key="fontLight">Lato Light</FontFamily>
    <FontFamily
        x:Key="fontLightItalic">Lato Light Italic</FontFamily>
    <FontFamily
        x:Key="fontBold">Lato Bold</FontFamily>
    <FontFamily
        x:Key="fontStoreModeWithListReceipt">Courier New</FontFamily>
    <FontFamily
        x:Key="fontStoreModeWithListReceiptMingLiU">MingLiU Regular</FontFamily>
    <FontFamily
        x:Key="fontStoreModeWithListReceiptGulimChe">GulimChe Regular</FontFamily>
    <!-- Colors-->
    <Color
        x:Key="payButtonAnimationSecondColor">#5aa30b</Color>
    <Color
        x:Key="mainButtonBackgroundColor">#036558</Color>
    <Color
        x:Key="noInterventionGradientStartColor">#0DA83B</Color>
    <Color
        x:Key="noInterventionGradientStopColor">#9AF5B5</Color>
    <Color
        x:Key="delayedInterventionGradientStartColor">#FCAC1A</Color>
    <Color
        x:Key="delayedInterventionGradientStopColor">#FEE2AE</Color>
    <Color
        x:Key="immediateInterventionGradientStartColor">#D0021B</Color>
    <Color
        x:Key="immediateInterventionGradientStopColor">#FDC7CA</Color>
    <Color
        x:Key="offInterventionGradientStartColor">#808080</Color>
    <Color
        x:Key="offInterventionGradientStopColor">#D3D3D3</Color>
    <Color
        x:Key="buttonClickBackgroundColor">#FCAC1A</Color>
    <Color
        x:Key="popupShroudGradientStartColor">#B3000000</Color>
    <Color
        x:Key="popupShroudGradientStopColor">#00FFFFFF</Color>
    <Color
        x:Key="pathShadowGradientStartColor">Transparent</Color>
    <Color
        x:Key="pathShadowGradientStopColor">#B3000000</Color>
    <Color
        x:Key="quickPickInnerBackgroundColor">#E6E6E6</Color>
    <Color
        x:Key="keypadButtonBackgroundColor">#FFFFFF</Color>
    <Color
        x:Key="backSpaceButtonForegroundColor">#FFFFFF</Color>
    <Color
        x:Key="cmdListStackPanelBackgroundColor">#FFFFFF</Color>
    <Color
        x:Key="otherTenderBorderColor">#02574B</Color>
    <Color
        x:Key="transparentBackgroundColor">Transparent</Color>
    <Color
        x:Key="glowBorderBackgroundColor">#FFFFFF</Color>
    <Color
        x:Key="highlightedCylinderBorderBackgroundColor">#FDF30B</Color>
    <Color
        x:Key="cartControlBackgroundColor">#FFFFFF</Color>
    <Color
        x:Key="statusContainerBackgroundColor">#FFFFFF</Color>
    <Color
        x:Key="pickListReceiptBackgroundColor">#FFFFFF</Color>
    <Color
        x:Key="caretColor">#000000</Color>
    <Color
        x:Key="Meijer_cartControlBackgroundColor">#F8F8F8</Color>
    <Color
        x:Key="gaugeBackgroundGradientStartColor">LightGray</Color>
    <Color
        x:Key="gaugeBackgroundEnabledGradientStartColor">#91B5C3</Color>
    <Color
        x:Key="gaugeBackgroundGradientStopColor">#E60000</Color>
    <!--SSCOI 45963-->	
    <Color
        x:Key="MeijerMainButtonBackgroundColor">#D82332</Color>
    <Color
        x:Key="MeijerPayButtonAnimationSecondColor">#FFFFFF</Color>	
    <Color
        x:Key="unavControlBackgroundPanelColor">#FFFFFF</Color>
    
    <!-- Brushes -->
    <SolidColorBrush
        x:Key="mainTextColorBrush"
        Color="#065AA5" />
    <!--SSCOI 44223-->
    <SolidColorBrush
        x:Key="mainButtonBackgroundColorBrush"
        Color="#065AA5" />
    <!--SSCOI 44223-->
	<!--Start CRD 125377-->
    <SolidColorBrush
        x:Key="SNDGreenButtonBackgroundColorBrush"
        Color="#43AC35" />
    <SolidColorBrush
        x:Key="SNDRedButtonBackgroundColorBrush"
        Color="#D0011B" />
    <!--End CRD 125377-->
    <SolidColorBrush
        x:Key="mainButtonForegroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="removeButtonColorBrush"
        Color="#D0021B" />
    <SolidColorBrush
        x:Key="transparentBackgroundColorBrush"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="linkButtonForegroundColorBrush"
        Color="#1583D0" />
    <SolidColorBrush
        x:Key="linkButtonBackgroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="rewardsInfoForegroundColorBrush"
        Color="#D82332" />
    <SolidColorBrush
        x:Key="cardMessageForegroundColorBrush"
        Color="#D0021B" />
    <SolidColorBrush
        x:Key="borderColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="itemImageForegroundColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="currentPageIndicatorColorBrush"
        Color="#065AA5" />
    <!--SSCOI 44223-->
    <SolidColorBrush
        x:Key="textBoxBackgroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="textBoxBorderColorBrush"
        Color="#9B9B9B" />
    <SolidColorBrush
        x:Key="attendantModeBackgroundColorBrush"
        Color="#FF9F00" />
    <SolidColorBrush
        x:Key="trainingModeBackgroundColorBrush"
        Color="#4A90E2" />
    <SolidColorBrush
        x:Key="highlightedTextColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="actionButtonBackgroundColor"
        Color="#51AE46" />
    <SolidColorBrush
        x:Key="clearButtonBackgroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="buttonSelectedBackgroundColorBrush"
        Color="#FCAC1A" />
    <SolidColorBrush
        x:Key="categoryTabSelectedBackgroundColorBrush"
        Color="#FFFFFF" />
    <!--SSCOI 44223-->
    <SolidColorBrush
        x:Key="cartDelayedInterventionTextColorBrush"
        Color="#065AA5" />
    <!--VSTS 114361-->
    <SolidColorBrush
        x:Key="voidedItemForegroundColorBrush"
        Color="Gray" />
    <SolidColorBrush
        x:Key="volumeSliderFillColorBrush"
        Color="#81E910" />
    <SolidColorBrush
        x:Key="volumeSliderStrokeColorBrush"
        Color="#02574B" />
    <SolidColorBrush
        x:Key="gridInputListItemTextColorBrush"
        Color="#02574B" />
    <SolidColorBrush
        x:Key="listItemBackgroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="listItemBorderColorBrush"
        Color="LightGray" />
    <SolidColorBrush
        x:Key="popupBackgroundDarkColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="categoryListBoxItemBorderColorBrush"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="categoryListBoxItemBorderSelectedColorBrush"
        Color="#065AA5" />
    <SolidColorBrush
        x:Key="itemImageBoxBackgroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="itemImageBoxBorderColorBrush"
        Color="#065AA5" />
    <!--SSCOI 44223-->
    <SolidColorBrush
        x:Key="itemImageLabelContainerColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="subCatergoryNoImageBackgroundColorBrush"
        Color="#065AA5" />
    <SolidColorBrush
        x:Key="subCategoryNoImageBorderColorBrush"
        Color="#065AA5" />
    <SolidColorBrush
        x:Key="categoryListForegroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="cartListSelectedItemBackgroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="Meijer_PageIndicator"
        Color="#6AA7E6" />
    <!--SSCOI 44223-->
    <SolidColorBrush
        x:Key="Meijer_glowBorderStyle"
        Color="#065AA5" />
    <!-- SSCOI 44290 -->
    <SolidColorBrush
        x:Key="cartListSubItemDescForegroundColorBrush"
        Color="#065AA5" />
	<!--VSTS 114361-->
    <SolidColorBrush
        x:Key="caretColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="interventionIconColorBrush"
        Color="#065AA5" />
	<!--VSTS 114361-->
    <SolidColorBrush
        x:Key="mainIconColorBrush"
        Color="#065AA5" />
    <SolidColorBrush
        x:Key="mainIconLightColorBrush"
        Color="#6aa7e6" />
    <SolidColorBrush
        x:Key="backspaceIconColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="laneDownIconColorBrush"
        Color="#D0021B" />
    <SolidColorBrush
        x:Key="attendantModeIconColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="volumeSliderIconColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="approvalIconColorBrush"
        Color="#0DA83B" />
    <SolidColorBrush
        x:Key="clearIconColorBrush"
        Color="LightGray" />
    <SolidColorBrush
        x:Key="cartListLineNumberForegroundColorBrush"
        Color="#529EDE" />
    
    <!--Store Mode brushes-->
    <SolidColorBrush
        x:Key="storeModeMainButtonBackgroundColorBrush"
        Color="#2862A7" />
    <SolidColorBrush
        x:Key="storeModeToggledButtonBackgroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="storeModeMainTextForegroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="storeModeToggledTextForegroundColorBrush"
        Color="#2862A7" />
    <SolidColorBrush
        x:Key="storeModeMainButtonForegroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="storeModeInfoTextColorBrush"
        Color="#173E6C" />
    <SolidColorBrush
        x:Key="storeModeInfoBoxFieldBackgroundColor"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="storeModeMainIconColorBrush"
        Color="#173E6C" />
    <SolidColorBrush
        x:Key="storeModeActionButtonBackgroundColor"
        Color="#3B94FF" />
    <SolidColorBrush
        x:Key="storeModeGridInputListItemTextColorBrush"
        Color="#173E6C" />

    <!-- Cash Management Color Brushes -->
    <SolidColorBrush
        x:Key="LockScreenImageColorBrush"
        Color="#FF0000" />
    <SolidColorBrush
        x:Key="valueChangeColorBrush"
        Color="#D0021A" />
    <SolidColorBrush
        x:Key="cylinderBorderColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="cylinderDenominationBackgroundColorBrush"
        Color="Gray" />
    <SolidColorBrush
        x:Key="cylinderBackgroundColorBrush"
        Color="LightGray" />
    <SolidColorBrush
        x:Key="cylinderEnabledBackgroundColorBrush"
        Color="#CCE2FF" />
    <SolidColorBrush
        x:Key="cylinderGreenFillColorBrush"
        Color="#88FF88" />
    <SolidColorBrush
        x:Key="cylinderRedFillColorBrush"
        Color="#E60000" />
    <SolidColorBrush
        x:Key="cylinderYellowFillColorBrush"
        Color="#FF9F00" />
    <SolidColorBrush
        x:Key="cylinderBaseLineColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="yieldIconColorBrush"
        Color="#FDF30B" />
    <SolidColorBrush
        x:Key="alertBoxColorBrush"
        Color="#FDF30B" />
    <SolidColorBrush
        x:Key="alertBoxTextColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="alertExclamationColorBrush"
        Color="#FF0000" />
    <SolidColorBrush
        x:Key="highlightedCylinderBorderColor"
        Color="#FDF30B" />
    <SolidColorBrush
        x:Key="Meijer_taxTextForegroundColor"
        Color="#D82332" />
    <SolidColorBrush
        x:Key="rectangleBackgroundColorBrush"
        Color="#E6E6E6"
        PresentationOptions:Freeze="True" />
    <SolidColorBrush
        x:Key="gaugeDenominationForegroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="gaugeDenominationDisabledBackgroundColorBrush"
        Color="Gray" />
    <SolidColorBrush
        x:Key="gaugeDenominationEnabledBackgroundColorBrush"
        Color="#2862A7" />
    <SolidColorBrush
        x:Key="gaugeBackgroundDisabledColorBrush"
        Color="LightGray" />
    <SolidColorBrush
        x:Key="gaugeBackgroundEnabledColorBrush"
        Color="#91B5C3" />
    <SolidColorBrush
        x:Key="cashManagementR6SeparatorColorBrush"
        Color="#2862A7" />
    <SolidColorBrush
        x:Key="cashManagementR6DynamicFontColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="cashManagementR6PendingFontColorBrush"
        Color="#173E6C" />

    <SolidColorBrush
        x:Key="cartListBoxItemTextForegroundColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="cartListBoxItemTextBackgroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="cartReceiptForegroundColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="cartReceiptBackgroundColorBrush"
        Color="#F8F8F8" />
    <SolidColorBrush
        x:Key="totalTextForegroundColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="mPerksButtonForegroundColorBrush"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="totalAmountForegroundColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="itemSearchTextBoxForegroundColorBrush"
        Color="#404040" />
    <SolidColorBrush
        x:Key="picklistLabelForegroundColorBrush"
        Color="#065AA5" />
    <SolidColorBrush
        x:Key="mainSeparatorStyleBrush"
        Color="#065AA5" />
    
    <!-- UNav Color Brushes -->
    <SolidColorBrush
        x:Key="unavControlDirectionalButtonBackgroundColorBrush"
        Color="#88808080" />
    <SolidColorBrush
        x:Key="unavControlSelectButtonBackgroundColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="unavControlMoveWidgetButtonBackgroundColorBrush"
        Color="#77808080" />
    <SolidColorBrush
        x:Key="unavControlMoveWidgetButtonForegroundColorBrush"
        Color="#000000" />
    <SolidColorBrush
        x:Key="unavControlButtonBorderColorBrush"
        Color="#007F00" />

    <!-- Start CRD 127021 -->
    <SolidColorBrush
        x:Key="meijerGoLogoRedBrush"
        Color="#ee3124" />

    <SolidColorBrush
        x:Key="meijerGoLogoBlueBrush"
        Color="#005da9" />
    <!-- End 127021 -->

    <!-- Start CRD 125378 MeijerGo and ShopNDrop -->
    <SolidColorBrush
        x:Key="meijerGoStartBrush"
        Color="#43ac35" />
    <SolidColorBrush
        x:Key="MeijerGoLogoRedColor"
        Color="#DD1321" />
    <SolidColorBrush
        x:Key="MeijerGoLogoBlueColor"
        Color="#0A4D8C" />
    <!-- End CRD 125378 MeijerGo and ShopNDrop -->

    <!-- ImageBrush -->
    <ImageBrush
        x:Key="volumeMuteIcon"
        ImageSource="/SSCOUISkin;component/Images/ICON-Mute.png"
        Stretch="Fill" />

    <!-- Converters -->
    <helpers:StateToBooleanConverter
        x:Key="StateToBooleanConverter" />
    <helpers:ItemImageConverter
        x:Key="ItemImageConverter" />
    <BooleanToVisibilityConverter
        x:Key="BooleanToVisibilityConverter" />
    <helpers:PathConverter
        x:Key="PathConverter" />
    <helpers:FormatConverter
        x:Key="FormatConverter" />
    <helpers:StyleConverter
        x:Key="StyleConverter" />
    <helpers:IsEqualOrGreaterThanConverter
        x:Key="IsEqualOrGreaterThanConverter" />

    <!--Storyboard for FadeIn animation -->
    <Storyboard
        x:Key="fadeInStoryboard">
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="0:0:.5"
            FillBehavior="HoldEnd"
            AutoReverse="False" />
    </Storyboard>

    <!-- Base styles-->
    <Style
        x:Key="mainFocusVisualStyle">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        StrokeThickness="3"
                        Stroke="{StaticResource buttonSelectedBackgroundColorBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.IsTransitioning, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Value="True">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle
                                Stroke="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="otherTenderListBoxItemFocusVisualStyle">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="0"
                        StrokeThickness="3"
                        Stroke="{StaticResource buttonSelectedBackgroundColorBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="mainFontRegular">
        <Setter
            Property="Control.FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="Control.Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="Control.FocusVisualStyle"
            Value="{StaticResource mainFocusVisualStyle}" />
    </Style>
    <Style
        x:Key="mainFontLight">
        <Setter
            Property="Control.FontFamily"
            Value="{StaticResource fontLight}" />
        <Setter
            Property="Control.Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="Control.FocusVisualStyle"
            Value="{StaticResource mainFocusVisualStyle}" />
    </Style>
    <Style
        x:Key="glowBorderStyle"
        TargetType="Border">
        <Setter
            Property="BorderBrush"
            Value="{StaticResource Meijer_glowBorderStyle}" />
        <!-- SSCOI 44290 -->
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Background">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource glowBorderBackgroundColor}"
                    Opacity="0.55"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="mainButtonStyle"
        TargetType="{x:Type controls:ImageButton}">
        <Setter
            Property="Foreground"
            Value="{StaticResource mainButtonForegroundColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource mainButtonBackgroundColorBrush}" />
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="Padding"
            Value="3" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource mainFocusVisualStyle}" />
        <Setter
            Property="ClickSound"
            Value="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource bttnValidClickSound}}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            BorderThickness="0" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger
                            RoutedEvent="Button.TouchDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard Name="MainButtonStyleStoryBoard">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="innerBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource buttonClickBackgroundColor}"
                                            Duration="0:0:.3"
                                            FillBehavior="Stop"
                                            AccelerationRatio="0.3"
                                            DecelerationRatio="0.7"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger
                            RoutedEvent="ImageButton.TextChanged">
                            <EventTrigger.Actions>
                                <StopStoryboard BeginStoryboardName="MainButtonStyleStoryBoard" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="{StaticResource disabledButtonOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--SSCOI 44223-->
    <Style
        x:Key="Meijer_searchKeypadButtonStyle"
        TargetType="{x:Type controls:ImageButton}">
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource mainButtonForegroundColorBrush}" />
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="Focusable"
            Value="False" />
        <Setter
            Property="ClickSound"
            Value="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource bttnValidClickSound}}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            Background="#FFFFFF"
                            BorderBrush="#065AA5"
                            CornerRadius="2"
                            BorderThickness="2" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger
                            RoutedEvent="Button.Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="innerBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource buttonClickBackgroundColor}"
                                            Duration="0:0:.3"
                                            FillBehavior="Stop"
                                            AccelerationRatio="0.3"
                                            DecelerationRatio="0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="{StaticResource disabledButtonOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--SSCOI 44223-->
    <Style
        x:Key="mainToggleButtonStyle"
        TargetType="{x:Type controls:ImageToggleButton}">
        <Setter
            Property="Foreground"
            Value="{StaticResource mainButtonForegroundColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource mainButtonBackgroundColorBrush}" />
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="ClickSound"
            Value="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource bttnValidClickSound}}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageToggleButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            BorderThickness="0" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="IsChecked"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{StaticResource buttonSelectedBackgroundColorBrush}">
                </Setter>
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="{StaticResource disabledButtonOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="enterCouponButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
    </Style>
    <Style
        x:Key="mainKeypadButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="Background">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource keypadButtonBackgroundColor}"
                    Opacity="0.30"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="mainLinkButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource linkButtonForegroundColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource linkButtonBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="mainTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="32" />
        <Setter
            Property="MinimumFontSize"
            Value="28" />
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Top" />
        <Setter
            Property="FontWeight"
            Value="Normal" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="Width"
            Value="162" />
        <Setter
            Property="Height"
            Value="150" />
        <Setter
            Property="Margin"
            Value="15,0,15,0" />
        <Setter
            Property="Padding"
            Value="0" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Style.Resources>
            <Style
                TargetType="{x:Type controls:MeasureTextBlock}">
                <Setter
                    Property="TextWrapping"
                    Value="Wrap" />
                <Setter
                    Property="TextAlignment"
                    Value="Center" />
            </Style>
            <Style
                TargetType="DockPanel">
                <Setter
                    Property="VerticalAlignment"
                    Value="Top" />
                <Setter
                    Property="Height"
                    Value="150" />
            </Style>
        </Style.Resources>
    </Style>
    <!--element-->
    <Style
        x:Key="CreditCardmainTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="32" />
        <Setter
            Property="MinimumFontSize"
            Value="25" />
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Top" />
        <Setter
            Property="FontWeight"
            Value="Normal" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="Width"
            Value="162" />
        <Setter
            Property="Height"
            Value="150" />
        <Setter
            Property="Margin"
            Value="15,0,15,0" />
        <Setter
            Property="Padding"
            Value="0" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Style.Resources>
            <Style
                TargetType="{x:Type controls:MeasureTextBlock}">
                <Setter
                    Property="TextWrapping"
                    Value="Wrap" />
                <Setter
                    Property="TextAlignment"
                    Value="Center" />
            </Style>
            <Style
                TargetType="DockPanel">
                <Setter
                    Property="VerticalAlignment"
                    Value="Top" />
                <Setter
                    Property="Height"
                    Value="150" />
            </Style>
        </Style.Resources>
    </Style>
    <!--element end-->
    <Style
        x:Key="mainSystemButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="ImageVerticalAlignment"
            Value="Top" />
        <Setter
            Property="MinWidth"
            Value="102" />
        <Setter
            Property="MaxWidth"
            Value="105" />
        <Setter
            Property="FontSize"
            Value="16" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Border
                        controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                        BorderThickness="0"
                        Padding="0,5,0,0">
                        <Border.Background>
                            <SolidColorBrush
                                x:Name="innerBackgroundBrush"
                                Color="{StaticResource transparentBackgroundColor}" />
                        </Border.Background>
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger
                            RoutedEvent="Button.TouchDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="innerBackgroundBrush"
                                            Storyboard.TargetProperty="Color"
                                            From="{StaticResource transparentBackgroundColor}"
                                            To="{StaticResource buttonClickBackgroundColor}"
                                            Duration="0:0:.3"
                                            AutoReverse="True"
                                            AccelerationRatio="0.3"
                                            DecelerationRatio="0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="{StaticResource disabledButtonOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="mainSystemFunctionsButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainSystemButtonStyle}">
        <Style.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="{StaticResource disabledButtonOpacity}" />
            </Trigger>
            <DataTrigger
                Binding="{Binding DataContext.IsOnScreenUNavConfigured, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="MinWidth"
                    Value="94" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="mainClearButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainSystemButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource clearIconColorBrush}"
                            Geometry="{StaticResource icon-cancel}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="24,24" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Center" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Center" />
        <Setter
            Property="Background"
            Value="{StaticResource clearButtonBackgroundColorBrush}" />
        <Setter
            Property="MinWidth"
            Value="1" />
    </Style>
    <Style
        x:Key="mainSeparatorStyle"
        TargetType="Rectangle">
        <Setter
            Property="Fill"
            Value="{StaticResource mainSeparatorStyleBrush}" />
        <Setter
            Property="Height"
            Value="1" />
    </Style>
    <Style
        x:Key="mainWaterMarkTextBoxStyle"
        TargetType="{x:Type controls:WatermarkTextBox}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="BorderBrush"
            Value="#404040" />
        <Setter
            Property="Opacity"
            Value="0.40" />
        <Setter
            Property="ClearButtonStyle"
            Value="{StaticResource mainClearButtonStyle}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:WatermarkTextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="*" />
                                <ColumnDefinition
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Column="0" />
                            <Canvas>
                                <Border
                                    x:Name="PART_Caret"
                                    Visibility="Collapsed"
                                    Grid.Column="0"
                                    Width="1"
                                    Background="{StaticResource caretColorBrush}">
                                    <Border.Style>
                                        <Style
                                            TargetType="Border">
                                            <Style.Triggers>
                                                <Trigger
                                                    Property="IsVisible"
                                                    Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard
                                                            x:Name="CaretStoryBoard">
                                                            <Storyboard
                                                                RepeatBehavior="Forever">
                                                                <ColorAnimationUsingKeyFrames
                                                                    Storyboard.TargetProperty="Background.Color"
                                                                    Duration="0:0:0:1"
                                                                    FillBehavior="HoldEnd">
                                                                    <ColorAnimationUsingKeyFrames.KeyFrames>
                                                                        <DiscreteColorKeyFrame
                                                                            KeyTime="0:0:0.750"
                                                                            Value="Transparent" />
                                                                        <DiscreteColorKeyFrame
                                                                            KeyTime="0:0:0.000"
                                                                            Value="{StaticResource caretColor}" />
                                                                    </ColorAnimationUsingKeyFrames.KeyFrames>
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <RemoveStoryboard
                                                            BeginStoryboardName="CaretStoryBoard" />
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                            </Canvas>
                            <controls:ImageButton
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                x:Name="PART_ClearButton"
                                Grid.Column="1"
                                Style="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ClearButtonStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="mainWindowStyle"
        TargetType="Window">
        <Setter
            Property="Background">
            <Setter.Value>
                <ImageBrush
                    ImageSource="/SSCOUISkin;component/Images/MainBackground.jpg"
                    Stretch="None"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
        <!--SSCOI 44223-->
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StateParam,RelativeSource={RelativeSource Self}, Converter={StaticResource StateToBooleanConverter}, 
                ConverterParameter='ProduceFavorites'}"
                Value="True">
                <Setter
                    Property="Background">
                    <Setter.Value>
                        <SolidColorBrush
                            Color="#FFFFFF"
                            PresentationOptions:Freeze="True" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger
                Binding="{Binding DataContext.StateParam,RelativeSource={RelativeSource Self}, Converter={StaticResource StateToBooleanConverter}, 
                ConverterParameter='Attract,AttractMultiLanguage,Welcome'}"
                Value="True">
                <Setter
                    Property="Background">
                    <Setter.Value>
                        <ImageBrush
                            ImageSource="/SSCOUISkin;component/Images/MainBackground-Attract.jpg"
                            Stretch="Uniform"
                            PresentationOptions:Freeze="True" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <!--SSCOI 44223-->
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource Self}}"
                Value="true">
                <Setter
                    Property="Background">
                    <Setter.Value>
                        <ImageBrush
                            ImageSource="/SSCOUISkin;component/Images/IMG-StoreMode-BG.PNG"
                            Stretch="None"
                            PresentationOptions:Freeze="True" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="extendedWindowStyle"
        TargetType="Window">
        <Setter
            Property="Background">
            <Setter.Value>
                <ImageBrush
                    ImageSource="/SSCOUISkin;component/Images/MainBackground.jpg"
                    Stretch="None"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="mainDecoratorControlIconBorderStyle"
        TargetType="Border">
        <Setter
            Property="CornerRadius"
            Value="4" />
        <Setter
            Property="BorderThickness"
            Value="10" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="Opacity"
            Value="0.5" />
        <Setter
            Property="Margin"
            Value="235,0,0,0" />
    </Style>
    <Style
        x:Key="mainDecoratorBorderStyle"
        TargetType="Border">
        <Setter
            Property="BorderThickness"
            Value="12" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="mainDecoratorIconImageStyle"
        TargetType="Image">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="mainImageStyle"
        TargetType="Image">
        <Setter
            Property="Stretch"
            Value="None" />
    </Style>
    <Style
        x:Key="mainVideoStyle"
        TargetType="MediaElement">
        <Setter
            Property="Stretch"
            Value="None" />
    </Style>
    <Style
        x:Key="ScrollArrowUpStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-angle-up}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="18" />
        <Setter
            Property="Height"
            Value="28" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource Self}}"
                Value="True">
                <Setter
                    Property="Source">
                    <Setter.Value>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing
                                    Brush="{StaticResource storeModeMainIconColorBrush}"
                                    Geometry="{StaticResource icon-angle-up}" />
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ScrollArrowDownStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-angle-down}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="18" />
        <Setter
            Property="Height"
            Value="28" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource Self}}"
                Value="True">
                <Setter
                    Property="Source">
                    <Setter.Value>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing
                                    Brush="{StaticResource storeModeMainIconColorBrush}"
                                    Geometry="{StaticResource icon-angle-down}" />
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="pickListArrowButtonStyle"
        TargetType="{x:Type controls:ImageButton}">
        <Setter
            Property="Foreground"
            Value="{StaticResource mainButtonForegroundColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource mainButtonBackgroundColorBrush}" />
        <Setter
            Property="ClickSound"
            Value="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource scrollValidClickSound}}" />
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource mainFocusVisualStyle}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            CornerRadius="50"
                            Background="{TemplateBinding Background}" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger
                            RoutedEvent="Button.TouchDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="innerBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource buttonClickBackgroundColor}"
                                            Duration="0:0:.3"
                                            FillBehavior="Stop"
                                            AccelerationRatio="0.3"
                                            DecelerationRatio="0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Height"
            Value="25" />
        <Setter
            Property="Width"
            Value="25" />
    </Style>
    <Style
        x:Key="pickListLeftArrowButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource pickListArrowButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-angle-left}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="pickListRightArrowButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource pickListArrowButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-angle-right}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="mainFadingScrollViewerStyle"
        TargetType="{x:Type controls:FadingScrollViewer}">
        <Setter
            Property="PanningMode"
            Value="VerticalOnly" />
        <Setter
            Property="HorizontalScrollBarVisibility"
            Value="Disabled" />
        <Setter
            Property="VerticalScrollBarVisibility"
            Value="Hidden" />
        <Setter
            Property="ShowFade"
            Value="{Binding ShowTransitionEffects}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ScrollViewer}">
                    <Grid
                        Background="{TemplateBinding Background}">
                        <Grid
                            x:Name="FadingGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="*" />
                                <ColumnDefinition
                                    Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition
                                    Height="*" />
                                <RowDefinition
                                    Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border
                                x:Name="PART_ScrollContentPresenterContainer">
                                <ScrollContentPresenter
                                    x:Name="PART_ScrollContentPresenter"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    Grid.Column="0"
                                    Margin="{TemplateBinding Padding}"
                                    Grid.Row="0" />
                            </Border>
                            <ScrollBar
                                x:Name="PART_VerticalScrollBar"
                                AutomationProperties.AutomationId="VerticalScrollBar"
                                Cursor="Arrow"
                                Grid.Column="1"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                Minimum="0"
                                Grid.Row="0"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                ViewportSize="{TemplateBinding ViewportHeight}" />
                            <ScrollBar
                                x:Name="PART_HorizontalScrollBar"
                                AutomationProperties.AutomationId="HorizontalScrollBar"
                                Cursor="Arrow"
                                Grid.Column="0"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Minimum="0"
                                Orientation="Horizontal"
                                Grid.Row="1"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                ViewportSize="{TemplateBinding ViewportWidth}" />
                        </Grid>
                        <DockPanel
                            LastChildFill="False"
                            Height="Auto"
                            Grid.Row="0">
                            <Image
                                x:Name="ScrollUpIcon"
                                DockPanel.Dock="Top"
                                Style="{StaticResource ScrollArrowUpStyle}" />
                            <Image
                                x:Name="ScrollDownIcon"
                                DockPanel.Dock="Bottom"
                                Style="{StaticResource ScrollArrowDownStyle}" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding RenderingTier, Converter={StaticResource IsEqualOrGreaterThanConverter}, ConverterParameter=1}"
                Value="True">
                <Setter
                    Property="ShowFade"
                    Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="mainSlidingGridPageStyle"
        TargetType="{x:Type c:SSCOUISlidingGridPage}">
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Disabled" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Hidden" />
        <Setter
            Property="ClickSound"
            Value="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource pickListValidClickSound}}" />
        <Setter
            Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel
                        Orientation="Horizontal"
                        IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ScrollViewer.Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ListBox}">
                    <ScrollViewer
                        Background="{TemplateBinding Background}">
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>        
    </Style>
    <Style
        x:Key="mainTouchListBoxStyle"
        TargetType="{x:Type controls:TouchListBox}">
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Disabled" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Hidden" />
        <Setter
            Property="ScrollViewer.Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ListBox}">
                    <controls:FadingScrollViewer
                        x:Name="ScrollViewer"
                        Style="{StaticResource mainFadingScrollViewerStyle}"
                        Background="{TemplateBinding Background}">
                        <ItemsPresenter />
                    </controls:FadingScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="gridInputTextBlockStyle"
        TargetType="TextBlock">
        <Setter
            Property="LineStackingStrategy"
            Value="BlockLineHeight" />
        <Setter
            Property="LineHeight"
            Value="{Binding RelativeSource={RelativeSource Self}, Path=FontSize}" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource highlightedTextColorBrush}" />
    </Style>

    <Style
        x:Key="itemImageRectangleStyle"
        TargetType="Rectangle">
        <Setter
            Property="Fill"
            Value="{StaticResource itemImageBoxBackgroundColorBrush}">
        </Setter>
        <Setter
            Property="Stroke"
            Value="{StaticResource itemImageBoxBorderColorBrush}" />
        <Setter
            Property="StrokeThickness"
            Value="4" />

    </Style>
    <Style
        x:Key="itemImageRectangleStyle2"
        TargetType="Rectangle"
        BasedOn="{StaticResource itemImageRectangleStyle}">
        <Setter
            Property="Fill"
            Value="{StaticResource subCatergoryNoImageBackgroundColorBrush}">
        </Setter>
        <Setter
            Property="Stroke"
            Value="{StaticResource subCategoryNoImageBorderColorBrush}" />
    </Style>
    <Style
        x:Key="itemImageRectangleStyleUNav"
        TargetType="Rectangle"
        BasedOn="{StaticResource itemImageRectangleStyle}">
        <Setter
            Property="Stroke"
            Value="{StaticResource buttonSelectedBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="itemImageRectangleStyle2UNav"
        TargetType="Rectangle"
        BasedOn="{StaticResource itemImageRectangleStyle2}">
        <Setter
            Property="Stroke"
            Value="{StaticResource buttonSelectedBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="itemImageLabelContainerStyle"
        TargetType="Border">
        <Setter
            Property="Background"
            Value="{StaticResource itemImageLabelContainerColorBrush}" />
        <Setter
            Property="Opacity"
            Value="0.65" />
    </Style>
    <Style
        x:Key="itemImageNameStyle"
        TargetType="{x:Type controls:MeasureTextBlock}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource itemImageForegroundColorBrush}" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="FontSize"
            Value="14" />
        <Setter
            Property="Margin"
            Value="4,0,0,2" />
    </Style>
    <Style
        x:Key="itemImageCenterNameStyle"
        TargetType="{x:Type controls:MeasureTextBlock}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource itemImageForegroundColorBrush}" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="FontSize"
            Value="28" />
        <Setter
            Property="Margin"
            Value="4,0,0,2" />
    </Style>
    <Style
        x:Key="itemImageUPCStyle"
        TargetType="{x:Type controls:MeasureTextBlock}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontLight}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource itemImageForegroundColorBrush}" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="FontSize"
            Value="12" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="Margin"
            Value="4,0,0,2" />
    </Style>
    <Style
        x:Key="quickListItemDescriptionTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource itemImageNameStyle}">
        <Setter
            Property="FontSize"
            Value="13" />
    </Style>
    <Style
        x:Key="itemImageCategoryTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="FontSize"
            Value="20" />
        <Setter
            Property="Foreground"
            Value="{StaticResource itemImageForegroundColorBrush}" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style 
        x:Key="QRCodeErrorTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource itemImageCategoryTextStyle}">
        <Setter
            Property="FontSize"
            Value="15" />
    </Style>
    <Style
        x:Key="itemImageSubCategoryTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource itemImageCategoryTextStyle}">
        <Setter
            Property="FontSize"
            Value="18" />
    </Style>

    <!-- DropShadowBorder Styles-->
    <Style
        x:Key="dropShadowStyle"
        TargetType="controls:DropShadowBorder">
        <Style.Resources>
            <Style
                TargetType="Path">
                <Setter
                    Property="Stroke"
                    Value="{StaticResource borderColorBrush}" />
                <Setter
                    Property="StrokeThickness"
                    Value="0.1" />
                <Setter
                    Property="Fill"
                    Value="{StaticResource borderColorBrush}" />
                <Setter
                    Property="Opacity"
                    Value="1" />
                <Setter
                    Property="Stretch"
                    Value="Fill" />
            </Style>
        </Style.Resources>
        <Setter 
            Property="FocusVisualStyle" 
            Value="{x:Null}" />
        <Setter
            Property="ShowTip"
            Value="False" />
        <Setter
            Property="TipOffSet"
            Value="10" />
        <Setter
            Property="TipWidth"
            Value="30" />
        <Setter
            Property="TipHeight"
            Value="20" />
        <Setter
            Property="TipAlignment"
            Value="Top" />
        <Setter
            Property="Offset"
            Value="4" />
        <Setter
            Property="ShadowStyle"
            Value="pathShadowPopupStyle" />
    </Style>
    <Style
        x:Key="pathShadowStyle"
        TargetType="Path">
        <Setter
            Property="Fill">
            <Setter.Value>
                <LinearGradientBrush
                    StartPoint="0,0"
                    EndPoint="0,1">
                    <GradientStop
                        Color="{StaticResource pathShadowGradientStartColor}"
                        Offset="0" />
                    <GradientStop
                        Color="{StaticResource pathShadowGradientStopColor}"
                        Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Opacity"
            Value="0.30" />
        <Setter
            Property="Margin"
            Value="4,4,0,0" />
    </Style>
    <Style
        x:Key="pathShadowPopupStyle"
        TargetType="Path"
        BasedOn="{StaticResource pathShadowStyle}">
        <Setter
            Property="Margin"
            Value="4,4,0,0" />
    </Style>

    <Style
        x:Key="selectLanguagePopupDropShadowStyle"
        TargetType="controls:DropShadowBorder"
        BasedOn="{StaticResource dropShadowStyle}">
        <Setter
            Property="ShowTip"
            Value="True" />
        <Setter
            Property="TipHeight"
            Value="16" />
        <Setter
            Property="TipWidth"
            Value="32" />
        <Setter
            Property="TipOffSet"
            Value="97" />
    </Style>
    <Style
        x:Key="helpPopupDropShadowStyle"
        TargetType="controls:DropShadowBorder"
        BasedOn="{StaticResource dropShadowStyle}">
        <Setter
            Property="ShowTip"
            Value="True" />
        <Setter
            Property="TipOffSet"
            Value="32" />
    </Style>
    <Style
        x:Key="ownBagPopupDropShadowStyle"
        TargetType="controls:DropShadowBorder"
        BasedOn="{StaticResource dropShadowStyle}">
        <Setter
            Property="ShowTip"
            Value="True" />
        <Setter
            Property="TipOffSet"
            Value="134" />
    </Style>
    <Style
        x:Key="volumePopupDropShadowStyle"
        TargetType="controls:DropShadowBorder"
        BasedOn="{StaticResource dropShadowStyle}">
        <Setter
            Property="ShowTip"
            Value="True" />
        <Setter
            Property="TipHeight"
            Value="16" />
        <Setter
            Property="TipWidth"
            Value="32" />
        <Setter
            Property="TipOffSet"
            Value="50" />
    </Style>
    <Style
        x:Key="itemSearchTextBoxPathShadowStyle"
        TargetType="Path"
        BasedOn="{StaticResource pathShadowStyle}">
        <Setter
            Property="Margin"
            Value="2,2,0,0" />
    </Style>
    <Style
        x:Key="itemSearchTextBoxdropShadowStyle"
        TargetType="controls:DropShadowBorder"
        BasedOn="{StaticResource dropShadowStyle}">
        <Setter
            Property="ShadowStyle"
            Value="itemSearchTextBoxPathShadowStyle" />
        <Setter
            Property="Offset"
            Value="2" />
    </Style>
    <Style
        x:Key="itemImagePathShadowStyle"
        TargetType="Path"
        BasedOn="{StaticResource pathShadowStyle}">
        <Setter
            Property="Margin"
            Value="2,2,0,0" />
    </Style>
    <Style
        x:Key="itemImageDropShadowStyle"
        TargetType="controls:DropShadowBorder"
        BasedOn="{StaticResource dropShadowStyle}">
        <Setter
            Property="ShadowStyle"
            Value="itemImagePathShadowStyle" />
        <Setter
            Property="Offset"
            Value="2" />
    </Style>
    <Style
        x:Key="cardPanelPathShadowStyle"
        TargetType="Path"
        BasedOn="{StaticResource pathShadowStyle}">
        <Setter
            Property="Margin"
            Value="2,2,0,0" />
    </Style>
    <Style
        x:Key="cardPanelDropShadowStyle"
        TargetType="controls:DropShadowBorder"
        BasedOn="{StaticResource dropShadowStyle}">
        <Setter
            Property="ShadowStyle"
            Value="cardPanelPathShadowStyle" />
        <Setter
            Property="Offset"
            Value="2" />
    </Style>
    <Style
        x:Key="cardItemDescriptionTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="PreferredFontSize"
            Value="40" />
        <Setter
            Property="MinimumFontSize"
            Value="36" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="DockPanel.Dock"
            Value="Left" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Voided}"
                Value="True">
                <Setter
                    Property="TextDecorations"
                    Value="StrikeThrough" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource voidedItemForegroundColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="cardItemPriceTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="PreferredFontSize"
            Value="48" />
        <Setter
            Property="MinimumFontSize"
            Value="40" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="DockPanel.Dock"
            Value="Right" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Voided}"
                Value="True">
                <Setter
                    Property="TextDecorations"
                    Value="StrikeThrough" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource voidedItemForegroundColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="cardSubItemDescriptionTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="DockPanel.Dock"
            Value="Left" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Voided}"
                Value="True">
                <Setter
                    Property="TextDecorations"
                    Value="StrikeThrough" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource voidedItemForegroundColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="cardSubItemPriceTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="DockPanel.Dock"
            Value="Right" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Voided}"
                Value="True">
                <Setter
                    Property="TextDecorations"
                    Value="StrikeThrough" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource voidedItemForegroundColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="cardItemExtraLineTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Tag.Voided, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                Value="True">
                <Setter
                    Property="TextDecorations"
                    Value="Strikethrough" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource voidedItemForegroundColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NMIExtraLineTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource cardItemExtraLineTextStyle}">
        <Setter
            Property="FontSize"
            Value="40" />
    </Style>

    <!-- Elements -->
    <Style
        x:Key="CartButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="18" />
        <Setter
            Property="MinimumFontSize"
            Value="15" />
        <Setter
            Property="Visibility"
            Value="Collapsed" />
        <Setter
            Property="DockPanel.Dock"
            Value="Right" />
        <Setter
            Property="VerticalAlignment"
            Value=" Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StateParam, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="SmAssistMenu">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeMainButtonForegroundColorBrush}" />
                <Setter
                    Property="Background"
                    Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="RedCartButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource CartButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource removeButtonColorBrush}" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
    </Style>
    <Style
        x:Key="cartControlStyle"
        TargetType="Grid">
        <Setter
            Property="Background">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource Meijer_cartControlBackgroundColor}"
                    Opacity="0.7"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
        <Setter
            Property="Visibility"
            Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Visibility, RelativeSource={RelativeSource Self}}"
                Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard
                        Storyboard="{DynamicResource fadeInStoryboard}" />
                </DataTrigger.EnterActions>
            </DataTrigger>
            <DataTrigger
                Binding="{Binding DataContext.StateParam, RelativeSource={RelativeSource Self}, Converter={StaticResource StateToBooleanConverter}, 
                ConverterParameter='VoidItem,VoidItemWithReward,AM_VoidItem'}"
                Value="True">
                <Setter
                    Property="Panel.ZIndex"
                    Value="100" />
                <Setter
                    Property="Background">
                    <Setter.Value>
                        <SolidColorBrush
                            Color="{StaticResource cartControlBackgroundColor}"
                            Opacity="0.90"
                            PresentationOptions:Freeze="True" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger
                Binding="{Binding DataContext.StateParam, RelativeSource={RelativeSource Self}, Converter={StaticResource StateToBooleanConverter}, 
                ConverterParameter='ConfirmAbort,ConfirmVoid,AM_VoidItem'}"
                Value="True">
                <Setter
                    Property="Background">
                    <Setter.Value>
                        <SolidColorBrush
                            Color="{StaticResource cartControlBackgroundColor}"
                            Opacity="0.90"
                            PresentationOptions:Freeze="True" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="cartListBoxItemTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="Width"
            Value="194" />
        <Setter
            Property="FontSize"
            Value="{StaticResource ReceiptFontSize}" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="Margin"
            Value="0,0,8,0" />
        <Setter
            Property="Foreground"
            Value="{StaticResource cartListBoxItemTextForegroundColorBrush}" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Voided}"
                Value="True">
                <Setter
                    Property="TextDecorations"
                    Value="StrikeThrough" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource voidedItemForegroundColorBrush}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="True">
                <Setter
                    Property="FontSize"
                    Value="{StaticResource ReceiptBigFontSize}" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource cartListBoxItemTextForegroundColorBrush}" />
                <Setter
                    Property="FontFamily"
                    Value="Lato Bold" />
                <Setter
                    Property="Background"
                    Value="{StaticResource cartListBoxItemTextBackgroundColorBrush}" />
                <Setter
                    Property="NMI"
                    Value="True" />
                <Setter
                    Property="NMIMinHeightInMillimeters"
                    Value="{StaticResource NMILetterHeight}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="cartListBoxLineNumberTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource cartListBoxItemTextStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource cartListLineNumberForegroundColorBrush}" />
        <Setter
            Property="Margin"
            Value="8,8,-10,8" />
        <Setter
            Property="Width"
            Value="30" />
        <Setter
            Property="PreferredFontSize"
            Value="17" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Voided}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource voidedItemForegroundColorBrush}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding LineNumber}"
                Value="{x:Null}">
                <Setter
                    Property="Visibility"
                    Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NMICartListBoxLineNumberTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource cartListBoxLineNumberTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="19" />
        <Setter
            Property="Width"
            Value="Auto" />
        <Setter
            Property="MinWidth"
            Value="50" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="True">
                <Setter
                    Property="NMI"
                    Value="True" />
                <Setter
                    Property="NMIMinHeightInMillimeters"
                    Value="{StaticResource NMINumberHeight}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SMCartListBoxItemTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource cartListBoxItemTextStyle}">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding  Voided}"
                Value="False">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding Price}"
                Value="">
                <Setter
                    Property="Width"
                    Value="608" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding IsItemRapOnly}"
                Value="True">
                <Setter
                    Property="FontFamily"
                    Value="{StaticResource fontLight}" />
                <Setter
                    Property="Margin"
                    Value="12,-5,0,-5" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
                <Setter
                    Property="Width"
                    Value="300" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding IsStoreModeText}"
                Value="True">
                <Setter
                    Property="Margin"
                    Value="12,3" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
                <Setter
                    Property="Width"
                    Value="608" />
                <Setter
                    Property="FontSize"
                    Value="20" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsItemMessage}"
                        Value="False" />
                    <Condition
                        Binding="{Binding IsStoreModeText}"
                        Value="False" />
                    <Condition
                        Binding="{Binding IsItemRapOnly}"
                        Value="False" />
                    <Condition
                        Binding="{Binding Price}"
                        Value="" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Foreground"
                    Value="{StaticResource cartListSubItemDescForegroundColorBrush}" />
                <Setter
                    Property="FontFamily"
                    Value="{StaticResource fontLightItalic}" />
                <Setter
                    Property="Margin"
                    Value="12,-5,0,-5" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="cartListItemDescTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource cartListBoxItemTextStyle}">
        <Setter
            Property="DockPanel.Dock"
            Value="Left" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="cartControlListItemDescTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cartListBoxItemTextStyle}">
        <Setter
            Property="Width"
            Value="208" />
    </Style>
    <Style
        x:Key="NMIPopupListItemDescTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cartListBoxItemTextStyle}">
        <Setter
            Property="Width"
            Value="417" />
        <Setter
            Property="NMIMinHeightInMillimeters"
            Value="{StaticResource NMINumberHeight}" />
    </Style>
    <Style
        x:Key="cartListItemPriceTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource cartListBoxItemTextStyle}">
        <Setter
            Property="Width"
            Value="70" />
        <Setter
            Property="DockPanel.Dock"
            Value="Right" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="Margin"
            Value="0" />
        <Setter
            Property="TextWrapping"
            Value="NoWrap" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding LineNumber}"
                Value="{x:Null}">
                <Setter
                    Property="Width"
                    Value="90" />
                <Setter
                    Property="Margin"
                    Value="0,0,4,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SMCartListItemPriceTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource SMCartListBoxItemTextStyle}">
        <Setter
            Property="Width"
            Value="100" />
        <Setter
            Property="DockPanel.Dock"
            Value="Right" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="Margin"
            Value="0" />
        <Setter
            Property="TextWrapping"
            Value="NoWrap" />
    </Style>
    <Style
        x:Key="NMIPopupListItemPriceTextStyle"
        TargetType="PriceTextBlock"
        BasedOn="{StaticResource cartListBoxItemTextStyle}">
        <Setter
            Property="Width"
            Value="245" />
        <Setter
            Property="DockPanel.Dock"
            Value="Right" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="Margin"
            Value="0" />
        <Setter
            Property="TextWrapping"
            Value="NoWrap" />
        <Setter
            Property="NMIMinHeightInMillimeters"
            Value="{StaticResource NMINumberHeight}" />
    </Style>
    <Style
        x:Key="NMIListItemDescTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cartListBoxItemTextStyle}">
        <Setter
            Property="Width"
            Value="530" />
        <Setter
            Property="PreferredFontSize"
            Value="19" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="True">
                <Setter
                    Property="NMI"
                    Value="True" />
                <Setter
                    Property="NMIMinHeightInMillimeters"
                    Value="{StaticResource NMILetterHeight}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding DataContext.Price, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="">
                <Setter
                    Property="Width"
                    Value="590" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                        Value="True" />
                    <Condition
                        Binding="{Binding LineNumber}"
                        Value="{x:Null}" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Margin"
                    Value="0,0,4,0" />
                <Setter
                    Property="Width"
                    Value="600" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NMIListItemPriceTextStyle"
        TargetType="PriceTextBlock"
        BasedOn="{StaticResource cartListItemPriceTextStyle}">
        <Setter
            Property="Width"
            Value="Auto" />
        <Setter
            Property="DockPanel.Dock"
            Value="Right" />
        <Setter
            Property="PreferredFontSize"
            Value="19" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.LineNumber, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="{x:Null}">
                <Setter
                    Property="Width"
                    Value="360" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                        Value="True" />
                    <Condition
                        Binding="{Binding DataContext.LineNumber, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                        Value="{x:Null}" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="TextAlignment"
                    Value="Right" />
                <Setter
                    Property="Margin"
                    Value="0" />
            </MultiDataTrigger>
            <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="True">
                <Setter
                    Property="Margin"
                    Value="-18,0,0,0" />
                <Setter
                    Property="NMI"
                    Value="True" />
                <Setter
                    Property="NMIMinHeightInMillimeters"
                    Value="{StaticResource NMINumberHeight}" />
                <Setter
                    Property="TextAlignment"
                    Value="Right" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="cartListBoxSubItemTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="{StaticResource ReceiptFontSize}" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontLightItalic}" />
        <Setter
            Property="Width"
            Value="194" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Tag.Voided, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                Value="True">
                <Setter
                    Property="TextDecorations"
                    Value="StrikeThrough" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource voidedItemForegroundColorBrush}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="True">
                <Setter
                    Property="FontSize"
                    Value="{StaticResource ReceiptBigFontSize}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SMCartListBoxSubItemTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource cartListBoxSubItemTextStyle}">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Tag.Voided, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                Value="False">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NMICartListBoxSubItemTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cartListBoxSubItemTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="19" />
        <Setter
            Property="Width"
            Value="1004" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="True">
                <Setter
                    Property="NMI"
                    Value="True" />
                <Setter
                    Property="NMIMinHeightInMillimeters"
                    Value="{StaticResource NMINumberHeight}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NMIPopupListBoxSubItemTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cartListBoxSubItemTextStyle}">
        <Setter
            Property="Width"
            Value="500" />
        <Setter
            Property="NMIMinHeightInMillimeters"
            Value="{StaticResource NMINumberHeight}" />
        <Setter
            Property="Margin"
            Value="12,0,6,0" />
    </Style>
    <Style
        x:Key="cartListBoxSubItemDescTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource cartListBoxSubItemTextStyle}">
        <Setter
            Property="DockPanel.Dock"
            Value="Left" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontLight}" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Voided}"
                Value="True">
                <Setter
                    Property="TextDecorations"
                    Value="StrikeThrough" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource voidedItemForegroundColorBrush}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding Price}"
                Value="">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource cartListSubItemDescForegroundColorBrush}" />
                <Setter
                    Property="FontFamily"
                    Value="{StaticResource fontLightItalic}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SMCartListBoxSubItemDescTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource cartListBoxSubItemDescTextStyle}">
        <Setter
            Property="Margin"
            Value="0" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Voided}"
                Value="False">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NMICartListBoxSubItemDescTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cartListBoxSubItemDescTextStyle}">
        <Setter
            Property="Width"
            Value="654" />
        <Setter
            Property="PreferredFontSize"
            Value="19" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="True">
                <Setter
                    Property="NMI"
                    Value="True" />
                <Setter
                    Property="NMIMinHeightInMillimeters"
                    Value="{StaticResource NMILetterHeight}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NMIPopupCartListBoxSubItemDescTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cartListBoxSubItemDescTextStyle}">
        <Setter
            Property="Width"
            Value="392" />
        <Setter
            Property="NMIMinHeightInMillimeters"
            Value="{StaticResource NMINumberHeight}" />
    </Style>
    <Style
        x:Key="cartListBoxSubItemPriceTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource cartListBoxSubItemDescTextStyle}">
        <Setter
            Property="Width"
            Value="70" />
        <Setter
            Property="DockPanel.Dock"
            Value="Right" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="TextWrapping"
            Value="NoWrap" />
        <Setter
            Property="Margin"
            Value="0" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.LineNumber, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="">
                <Setter
                    Property="Width"
                    Value="50" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding DataContext.LineNumber, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="{x:Null}">
                <Setter
                    Property="Margin"
                    Value="0,0,4,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SMCartListBoxSubItemPriceTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource SMCartListBoxSubItemDescTextStyle}">
        <Setter
            Property="Width"
            Value="100" />
        <Setter
            Property="DockPanel.Dock"
            Value="Right" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="Margin"
            Value="0" />
        <Setter
            Property="TextWrapping"
            Value="NoWrap" />
    </Style>
    <Style
        x:Key="cartControlListBoxSubItemPriceTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource cartListBoxSubItemPriceTextStyle}">
        <Setter
            Property="Margin"
            Value="0" />
    </Style>
    <Style
        x:Key="NMICartListBoxSubItemPriceTextStyle"
        TargetType="PriceTextBlock"
        BasedOn="{StaticResource cartListBoxSubItemPriceTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="19" />
        <Setter
            Property="Width"
            Value="Auto" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="True">
                <Setter
                    Property="NMI"
                    Value="True" />
                <Setter
                    Property="NMIMinHeightInMillimeters"
                    Value="{StaticResource NMINumberHeight}" />
                <Setter
                    Property="TextAlignment"
                    Value="Right" />
                <Setter
                    Property="Margin"
                    Value="-22,0,0,0" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding DataContext.LineNumber, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="{x:Null}">
                <Setter
                    Property="Width"
                    Value="350" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                        Value="True" />
                    <Condition
                        Binding="{Binding DataContext.LineNumber, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                        Value="{x:Null}" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="TextAlignment"
                    Value="Right" />
                <Setter
                    Property="Margin"
                    Value="0,0,4,0" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NMIPopupCartListBoxSubItemPriceTextStyle"
        TargetType="PriceTextBlock"
        BasedOn="{StaticResource cartListBoxSubItemPriceTextStyle}">
        <Setter
            Property="Width"
            Value="204" />
        <Setter
            Property="NMIMinHeightInMillimeters"
            Value="{StaticResource NMINumberHeight}" />
    </Style>
    <Style
        x:Key="CartDelayedInterventionMainStyle"
        TargetType="StackPanel">
        <Setter
            Property="Visibility"
            Value="Collapsed" />
        <Setter
            Property="Margin"
            Value="0,2,0,0" />
        <Style.Resources>
            <Style
                TargetType="Image">
                <Setter
                    Property="Source">
                    <Setter.Value>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing
                                    Brush="{StaticResource interventionIconColorBrush}"
                                    Geometry="{StaticResource icon-exclamation-circle}" />
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="Width"
                    Value="20" />
                <Setter
                    Property="Height"
                    Value="20" />
                <Setter
                    Property="Margin"
                    Value="0,0,6,0" />
                <Setter
                    Property="Stretch"
                    Value="Uniform" />
            </Style>
        </Style.Resources>
    </Style>
    <Style
        x:Key="CartDelayedInterventionStyle"
        BasedOn="{StaticResource CartDelayedInterventionMainStyle}"
        TargetType="StackPanel">
        <Style.Resources>
            <Style
                TargetType="{x:Type controls:MeasureTextBlock}">
                <Setter
                    Property="FontFamily"
                    Value="{StaticResource fontLight}" />
                <Setter
                    Property="FontSize"
                    Value="{StaticResource ReceiptFontSize}" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource cartDelayedInterventionTextColorBrush}" />
                <Setter
                    Property="Width"
                    Value="284" />
                <Setter
                    Property="TextBlock.TextWrapping"
                    Value="Wrap" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                        Value="True">
                        <Setter
                            Property="FontSize"
                            Value="{StaticResource ReceiptBigFontSize}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style
        x:Key="NMICartDelayedInterventionStyle"
        BasedOn="{StaticResource CartDelayedInterventionStyle}"
        TargetType="StackPanel">
        <Style.Resources>
            <Style
                TargetType="{x:Type controls:MeasureTextBlock}">
                <Setter
                    Property="FontFamily"
                    Value="{StaticResource fontLight}" />
                <Setter
                    Property="Foreground"
                    Value="{StaticResource cartDelayedInterventionTextColorBrush}" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                        Value="True">
                        <Setter
                            Property="NMI"
                            Value="True" />
                        <Setter
                            Property="NMIMinHeightInMillimeters"
                            Value="{StaticResource NMINumberHeight}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style
        x:Key="ApprovedImageStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource approvalIconColorBrush}"
                            Geometry="{StaticResource icon-check-circle}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="100" />
        <Setter
            Property="Height"
            Value="100" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="ApprovedTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="30" />
        <Setter
            Property="Margin"
            Value="0,10,0,0" />
    </Style>
    <Style
        x:Key="ApprovedImageQuickPickStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource approvalIconColorBrush}"
                            Geometry="{StaticResource icon-check-circle}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="100" />
        <Setter
            Property="Height"
            Value="100" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
        <Setter
            Property="Width"
            Value="60" />
        <Setter
            Property="Height"
            Value="60" />
        <Setter
            Property="RenderOptions.BitmapScalingMode"
            Value="Fant" />
    </Style>
    <Style
        x:Key="ApprovedTextQuickPickStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="20" />
        <Setter
            Property="Margin"
            Value="0,10,0,0" />
    </Style>
    <Style
        x:Key="cartReceiptStyle"
        TargetType="{x:Type c:SSCOUITouchListBox}">
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="Background"
            Value="{StaticResource cartReceiptBackgroundColorBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource cartReceiptForegroundColorBrush}" />        
        <Setter
            Property="HorizontalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Disabled" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Hidden" />
        <Setter
            Property="ScrollViewer.CanContentScroll"
            Value="False" />
        <Setter
            Property="ScrollViewer.Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ListBox}">
                    <controls:FadingScrollViewer
                        x:Name="ScrollViewer"
                        Style="{StaticResource mainFadingScrollViewerStyle}"
                        Background="{TemplateBinding Background}"
                        ClipToBounds="True"
                        Padding="-1,-1,-4,-1">                        
                        <ItemsPresenter />
                    </controls:FadingScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="cartTopSeparatorStyle"
        TargetType="Rectangle"
        BasedOn="{StaticResource mainSeparatorStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="HorizontalAlignment"
            Value="Stretch" />
    </Style>
    <Style
        x:Key="cartBottomSeparatorStyle"
        TargetType="Rectangle"
        BasedOn="{StaticResource cartTopSeparatorStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
    </Style>
    <Style
        x:Key="NMICartBottomSeparatorStyle"
        TargetType="Rectangle"
        BasedOn="{StaticResource cartBottomSeparatorStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
    </Style>
    <Style
        x:Key="categoryListBoxItemStyle"
        TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ListBoxItem">
                    <Grid
                        Margin="2,0,2,0"
                        Height="56">
                        <Polygon
                            x:Name="tabItem"
                            Stroke="{StaticResource categoryListBoxItemBorderColorBrush}"
                            StrokeThickness="2"
                            Points="0,0 0,44 104,44 104,0"
                            Fill="{StaticResource mainButtonBackgroundColorBrush}" />
                        <controls:MeasureTextBlock
                            x:Name="tabText"
                            TextWrapping="Wrap"
                            Width="104"
                            MaxHeight="44"
                            Margin="0,0,0,12"
                            Text="{Binding Text}"
                            FontFamily="{StaticResource fontRegular}"
                            Foreground="{StaticResource categoryListForegroundColorBrush}"
                            TextAlignment="Center"
                            VerticalAlignment="Center"
                            PreferredFontSize="18"
                            MinimumFontSize="16" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                            Value="True">
                            <Setter
                                TargetName="tabItem"
                                Property="Fill"
                                Value="{StaticResource categoryTabSelectedBackgroundColorBrush}" />
                            <Setter
                                TargetName="tabText"
                                Property="Foreground"
                                Value="{StaticResource mainButtonBackgroundColorBrush}" />
                            <Setter
                                TargetName="tabItem"
                                Property="Stroke"
                                Value="{StaticResource categoryListBoxItemBorderSelectedColorBrush}" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding IsVisible}"
                            Value="False">
                            <Setter
                                Property="Visibility"
                                Value="Collapsed" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type c:View}}, Path=DataContext.IsUNavEnabled}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                TargetName="tabItem"
                                Property="StrokeThickness"
                                Value="3" />
                            <Setter
                                TargetName="tabItem"
                                Property="Stroke"
                                Value="{StaticResource buttonSelectedBackgroundColorBrush}" />
                            <Setter
                                TargetName="tabItem"
                                Property="Points"
                                Value="1.5,1.5 1.5,42.5 103.5,42.5 103.5,1.5" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="categoryListBoxItemStyleWithArrow"
        TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ListBoxItem">
                    <Grid
                        Margin="2,0,2,0"
                        Height="56">
                        <Polygon
                            x:Name="tabItem"
                            Stroke="{StaticResource categoryListBoxItemBorderColorBrush}"
                            StrokeThickness="2"
                            Points="0,0 0,44 104,44 104,0"
                            Fill="{StaticResource mainButtonBackgroundColorBrush}" />
                        <controls:MeasureTextBlock
                            x:Name="tabText"
                            TextWrapping="Wrap"
                            Width="104"
                            MaxHeight="44"
                            Margin="0,0,0,12"
                            Text="{Binding Text}"
                            FontFamily="{StaticResource fontRegular}"
                            Foreground="{StaticResource categoryListForegroundColorBrush}"
                            TextAlignment="Center"
                            VerticalAlignment="Center"
                            PreferredFontSize="18"
                            MinimumFontSize="16" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                            Value="True">
                            <Setter
                                TargetName="tabItem"
                                Property="Fill"
                                Value="{StaticResource categoryTabSelectedBackgroundColorBrush}" />
                            <Setter
                                TargetName="tabItem"
                                Property="Points"
                                Value="0,0 0,44 39,44 52,56 65,44 104,44 104,0" />
                            <Setter
                                TargetName="tabText"
                                Property="Foreground"
                                Value="{StaticResource mainButtonBackgroundColorBrush}" />
                            <Setter
                                TargetName="tabItem"
                                Property="Stroke"
                                Value="{StaticResource categoryListBoxItemBorderSelectedColorBrush}" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding IsVisible}"
                            Value="False">
                            <Setter
                                Property="Visibility"
                                Value="Collapsed" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type c:View}}, Path=DataContext.IsUNavEnabled}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                TargetName="tabItem"
                                Property="StrokeThickness"
                                Value="3" />
                            <Setter
                                TargetName="tabItem"
                                Property="Stroke"
                                Value="{StaticResource buttonSelectedBackgroundColorBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type c:View}}, Path=DataContext.IsUNavEnabled}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                TargetName="tabItem"
                                Property="Points"
                                Value="1.5,1.5 1.5,42.5 42,42.5 52,54 62,42.5 103.5,42.5 103.5,1.5" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type c:View}}, Path=DataContext.IsUNavEnabled}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                TargetName="tabItem"
                                Property="Points"
                                Value="1.5,1.5 1.5,42.5 103.5,42.5 103.5,1.5" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="categoryListBoxStyle"
        TargetType="{x:Type controls:TouchListBox}"
        BasedOn="{StaticResource mainTouchListBoxStyle}">
        <Setter
            Property="VerticalContentAlignment"
            Value="Top" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Disabled" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Hidden" />
        <Setter
            Property="ItemContainerStyle"
            Value="{StaticResource categoryListBoxItemStyle}" />
        <Setter
            Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel
                        IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
		<Setter
            Property="ScrollViewer.Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ListBox}">
                    <controls:FadingScrollViewer
                        x:Name="ScrollViewer"
                        Background="Transparent">
                        <ItemsPresenter />
                    </controls:FadingScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="logoImageStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source"
            Value="/SSCOUISkin;component/Images/Logo.png" />
    </Style>
    <Style
        x:Key="extendedLogoImageStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source"
            Value="/SSCOUISkin;component/Images/MeijerLogo_Med.png" />
    </Style>
    <Style
        x:Key="searchItemListBoxItemStyle"
        TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ListBoxItem">
                    <Grid
                        x:Name="gridButton"
                        Margin="0,0,12,16">
                        <controls:DropShadowBorder
                            Style="{DynamicResource itemImageDropShadowStyle}"
                            IsPopup="false" />
                        <Rectangle
                            Name="buttonRect"
                            Width="154"
                            Height="96"
                            Style="{DynamicResource itemImageRectangleStyle}" />
                        <Image
                            x:Name="itemImage"
                            Source="{Binding Data, Converter={StaticResource ItemImageConverter}, ConverterParameter='PickList'}"
                            Stretch="None">
                            <Image.Clip>
                                <RectangleGeometry
                                    Rect="0,0,146,88" />
                            </Image.Clip>
                        </Image>
                        <DockPanel
                            LastChildFill="False">
                            <Grid
                                Name="subCategoryButton"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                                <Border
                                    Style="{StaticResource itemImageLabelContainerStyle}"
                                    Margin="4,0,0,0" />
                                <StackPanel>
                                    <controls:MeasureTextBlock
                                        Text="{Binding SubData[SubCategoryDescription.Text]}"
                                        Width="145"
                                        Margin="2,3,2,0"
                                        MaxHeight="96">
                                        <controls:MeasureTextBlock.Style>
                                            <Style
                                                TargetType="{x:Type controls:MeasureTextBlock}"
                                                BasedOn="{StaticResource itemImageSubCategoryTextStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding SubData[SubCategoryDescription.Text]}"
                                                        Value="">
                                                        <Setter
                                                            Property="controls:MeasureTextBlock.Visibility"
                                                            Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:MeasureTextBlock.Style>
                                    </controls:MeasureTextBlock>
                                    <StackPanel.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding SubData[CategoryDescription.Text]}"
                                                            Value="" />
                                                        <Condition
                                                            Binding="{Binding SubData[SubCategoryDescription.Text]}"
                                                            Value="" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter
                                                        Property="controls:MeasureTextBlock.Visibility"
                                                        Value="Collapsed" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                </StackPanel>
                            </Grid>
                            <Grid
                                Name="itemButton"
                                VerticalAlignment="Top"
                                DockPanel.Dock="Top">
                                <Border
                                    Style="{StaticResource itemImageLabelContainerStyle}"
                                    Margin="0,4,4,2" />
                                <StackPanel>
                                    <controls:MeasureTextBlock
                                        Width="146"
                                        Text="{Binding SubData[ItemDescription.Text]}"
                                        Margin="2,3,2,0">
                                        <controls:MeasureTextBlock.Style>
                                            <Style
                                                BasedOn="{StaticResource itemImageNameStyle}"
                                                TargetType="{x:Type controls:MeasureTextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding SubData[ItemDescription.Text]}"
                                                        Value="">
                                                        <Setter
                                                            Property="controls:MeasureTextBlock.Visibility"
                                                            Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:MeasureTextBlock.Style>
                                    </controls:MeasureTextBlock>
                                    <controls:MeasureTextBlock
                                        Text="{Binding SubData[ItemCode.Text]}">
                                        <controls:MeasureTextBlock.Style>
                                            <Style
                                                BasedOn="{StaticResource itemImageUPCStyle}"
                                                TargetType="{x:Type controls:MeasureTextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding SubData[ItemCode.Text]}"
                                                        Value="">
                                                        <Setter
                                                            Property="controls:MeasureTextBlock.Visibility"
                                                            Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:MeasureTextBlock.Style>
                                    </controls:MeasureTextBlock>
                                </StackPanel>
                            </Grid>
                            <Grid
                                Name="noImageButton"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Visibility="Collapsed">
                                <StackPanel>
                                    <controls:MeasureTextBlock
                                        Text="{Binding SubData[SubCategoryDescription.Text]}"
                                        Foreground="{StaticResource categoryListForegroundColorBrush}"
                                        Width="148"
                                        Margin="3,0,3,0"
                                        MaxHeight="96">
                                        <controls:MeasureTextBlock.Style>
                                            <Style
                                                TargetType="{x:Type controls:MeasureTextBlock}"
                                                BasedOn="{StaticResource itemImageSubCategoryTextStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding SubData[SubCategoryDescription.Text]}"
                                                        Value="">
                                                        <Setter
                                                            Property="controls:MeasureTextBlock.Visibility"
                                                            Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:MeasureTextBlock.Style>
                                    </controls:MeasureTextBlock>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding Data, Converter={StaticResource ItemImageConverter}, ConverterParameter='PickList'}"
                                    Value="{x:Null}" />
                                <Condition
                                    Binding="{Binding SubData[ItemDescription.Text]}"
                                    Value="" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                TargetName="buttonRect"
                                Property="Style"
                                Value="{DynamicResource itemImageRectangleStyle2}" />
                            <Setter
                                TargetName="subCategoryButton"
                                Property="Visibility"
                                Value="Collapsed" />
                            <Setter
                                TargetName="itemButton"
                                Property="Visibility"
                                Value="Collapsed" />
                            <Setter
                                TargetName="noImageButton"
                                Property="Visibility"
                                Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type c:View}}, Path=DataContext.IsUNavEnabled}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                TargetName="buttonRect"
                                Property="Style"
                                Value="{StaticResource itemImageRectangleStyleUNav}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding Data, Converter={StaticResource ItemImageConverter}, ConverterParameter='PickList'}"
                                    Value="{x:Null}" />
                                <Condition
                                    Binding="{Binding SubData[ItemDescription.Text]}"
                                    Value="" />
                                <Condition
                                    Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type c:View}}, Path=DataContext.IsUNavEnabled}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                TargetName="buttonRect"
                                Property="Style"
                                Value="{DynamicResource itemImageRectangleStyle2UNav}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="searchItemGridPageStyle"
        TargetType="{x:Type c:SSCOUISlidingGridPage}"
        BasedOn="{StaticResource mainSlidingGridPageStyle}">
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="ItemContainerStyle"
            Value="{DynamicResource searchItemListBoxItemStyle}" />
    </Style>
    <Style
        x:Key="pageIndicatorStyle"
        TargetType="{x:Type sgp:PageIndicator}">
        <Setter
            Property="PageIndicatorColor"
            Value="{StaticResource Meijer_PageIndicator}" />
        <Setter
            Property="CurrentPageIndicatorColor"
            Value="{StaticResource currentPageIndicatorColorBrush}" />
        <Setter
            Property="IndicatorSize"
            Value="10" />
    </Style>
    <Style
        x:Key="pickListPageIndicatorStyle"
        TargetType="{x:Type sgp:PageIndicator}"
        BasedOn="{StaticResource pageIndicatorStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
    </Style>
    <Style
        x:Key="genericWeightLabelStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="14" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
    </Style>
    <Style
        x:Key="genericWeightValueStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource genericWeightLabelStyle}">
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="Margin"
            Value="2,0,0,0" />
    </Style>
    <Style
        x:Key="popupTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="30" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="numericPopupTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource popupTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="30" />
        <Setter
            Property="MinimumFontSize"
            Value="25" />
    </Style>
    <Style
        x:Key="popupTextStyleWithImage"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource popupTextStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
    </Style>
    <Style
        x:Key="popupTitleTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="30" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="searchScanButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-search}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="23,23" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Left" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
    </Style>
    <Style
        x:Key="keyInCodeButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-keyboard}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="23,23" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Left" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
    </Style>    
    <Style
        x:Key="keyboardScanButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource searchScanButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-keyboard}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="taxTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="15" /> <!--SSCOI 45963-->	
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="Foreground"
            Value="{StaticResource Meijer_taxTextForegroundColor}" />
    </Style>
    <Style
        x:Key="taxValueTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource taxTextStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
    </Style>
    <Style
        x:Key="totalTextCustomerModeStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource taxTextStyle}">
        <Setter
            Property="FontSize"
            Value="18" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
    </Style>
    <Style
        x:Key="totalTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource totalTextCustomerModeStyle}">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="totalValueTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource totalTextStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
    </Style>
    <Style
        x:Key="NMITaxTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource taxTextStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="PreferredFontSize"
            Value="19" />
    </Style>
    <Style
        x:Key="NMITaxValueTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource NMITaxTextStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
    </Style>
    <Style
        x:Key="NMITotalTextCustomerModeStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource totalTextCustomerModeStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="20" />
    </Style>
    <Style
        x:Key="NMITotalTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource totalTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="20" />
    </Style>
    <Style
        x:Key="NMITotalValueTextStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource NMITotalTextStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
    </Style>

    <!-- Tender.xaml, and TenderOptions.xaml-->

    <Style
        x:Key="cardTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-credit-card-alt}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="CreditCardTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource CreditCardmainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-credit-card-alt}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="cashTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-cash}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="debitTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-credit-card}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="debitCashBackTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing
                                Brush="{StaticResource mainIconColorBrush}"
                                Geometry="{StaticResource icon-cashback}" />
                        </DrawingGroup>
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="loyaltyTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-storeCard}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="voucherTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-voucher}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="checkTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-cheque}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="ebtTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-ebt}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="ebtFoodStampsTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-ebt}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="couponTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-barcode}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="genericTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-otherTender}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="otherTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-otherTender}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="giftCardTenderButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainTenderButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-giftcard}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="100,65" />
    </Style>
    <Style
        x:Key="cardTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-credit-card-alt}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="cashTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-cash}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="debitTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-credit-card}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="debitCashBackTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing
                                Brush="{StaticResource mainIconColorBrush}"
                                Geometry="{StaticResource icon-cashback}" />
                        </DrawingGroup>
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="loyaltyTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-storeCard}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="voucherTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-voucher}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="checkTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-cheque}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="ebtTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-ebt}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="ebtFoodStampsTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-ebt}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="couponTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-barcode}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="genericTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-otherTender}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="otherTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-otherTender}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="giftCardTenderLogoStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-giftcard}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="buttonGoBackStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-angle-left}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="24,40" />
        <Setter
            Property="Width"
            Value="184" />
        <Setter
            Property="Height"
            Value="54" />
        <Setter
            Property="Margin"
            Value="0,12,0,0" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Left" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="22" />
    </Style>
    <Style
        x:Key="storeModeButtonGoBackStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource buttonGoBackStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="cancelPaymentStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-close}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="25,25" />
        <Setter
            Property="Width"
            Value="280" />
        <Setter
            Property="Height"
            Value="56" />
        <Setter
            Property="Margin"
            Value="0,12,0,0" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="otherTenderBorderStyle"
        TargetType="Border">
        <Setter
            Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource otherTenderBorderColor}"
                    Opacity="0.20"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="tenderBorderStyle"
        TargetType="Border"
        BasedOn="{StaticResource otherTenderBorderStyle}">
        <Setter
            Property="BorderThickness"
            Value="2" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
    </Style>
    <Style
        x:Key="otherTenderListBoxItemStyle"
        TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource otherTenderListBoxItemFocusVisualStyle}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ListBoxItem">
                    <Grid
                        Height="94"
                        Width="290"
                        Margin="1,1,-1,-1">
                        <Border
                            BorderThickness="0,0,1,1"
                            Style="{StaticResource otherTenderBorderStyle}"
                            x:Name="tenderGridBorder"
                            Background="{StaticResource transparentBackgroundColorBrush}">
                            <Grid
                                x:Name="tenderGrid"
                                Margin="18,0,6,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="40" />
                                    <ColumnDefinition
                                        Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image
                                    Style="{Binding Logo, Converter={StaticResource StyleConverter}}" />
                                <controls:MeasureTextBlock
                                    Grid.Column="1"
                                    Margin="10,0,0,0"
                                    Width="216"
                                    MaxHeight="94"
                                    Text="{Binding Text}"
                                    MinimumFontSize="20"
                                    PreferredFontSize="24"
                                    Foreground="{StaticResource mainTextColorBrush}"
                                    FontFamily="{StaticResource fontRegular}"
                                    TextWrapping="Wrap"
                                    VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding IsVisible}"
                            Value="false">
                            <Setter
                                TargetName="tenderGrid"
                                Property="Visibility"
                                Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding IsEnabled}"
                            Value="False">
                            <Setter
                                TargetName="tenderGrid"
                                Property="Opacity"
                                Value="{StaticResource disabledButtonOpacity}" />
                            <Setter
                                Property="IsEnabled"
                                Value="False" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type c:View}}, Path=DataContext.UNav}"
                                    Value="" />
                                <Condition
                                    Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding IsEnabled}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                TargetName="tenderGridBorder"
                                Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush
                                        Color="{StaticResource buttonClickBackgroundColor}"
                                        PresentationOptions:Freeze="True" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <EventTrigger
                            RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="tenderGridBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource transparentBackgroundColor}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="otherTenderListBoxStyle"
        TargetType="{x:Type c:SSCOUISlidingGridPage}"
        BasedOn="{StaticResource mainSlidingGridPageStyle}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="ClickSound"
            Value="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource bttnValidClickSound}}" />
        <Setter
            Property="ItemContainerStyle"
            Value="{StaticResource otherTenderListBoxItemStyle}" />
        <Setter
            Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel
                        Width="600"
                        Orientation="Horizontal"
                        IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="tenderOtherPaymentStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainLinkButtonStyle}">
        <Setter
            Property="Margin"
            Value="0,0,0,36" />
        <Setter
            Property="PreferredFontSize"
            Value="32" />
        <Setter
            Property="MinimumFontSize"
            Value="26" />
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="Width"
            Value="360" />
        <Setter
            Property="Padding"
            Value="0" />
    </Style>
    <!-- +RFQ 9445 -->
    <Style
        x:Key="SNDCenterNameStyle"
        TargetType="{x:Type controls:MeasureTextBlock}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="FontSize"
            Value="28" />
        <Setter
            Property="Margin"
            Value="4,0,0,2" />
    </Style>
    <Style
        x:Key="SNDtenderOtherPaymentStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainLinkButtonStyle}">
        <Setter
            Property="Margin"
            Value="0,0,0,0" />
        <Setter
            Property="FontSize"
            Value="26" />
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="Width"
            Value="560" />
        <Setter
            Property="Padding"
            Value="0" />
    </Style>
    <!-- -RFQ 9445 -->
    <Style
        x:Key="tenderTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="PreferredFontSize"
            Value="50" />
        <Setter
            Property="MinimumFontSize"
            Value="30" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="tenderAmountDueTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="30" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="LineHeight"
            Value="35" />
    </Style>
    <Style
        x:Key="tenderAmountPaidTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="LineHeight"
            Value="35" />
    </Style>
    <Style
        x:Key="dueTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="PreferredFontSize"
            Value="46" />
        <Setter
            Property="MinimumFontSize"
            Value="18" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NMIDueTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource dueTextStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="NMIMinHeightInMillimeters"
            Value="{StaticResource NMINumberHeight}" />
    </Style>
    <!--TenderStep XAML -->
    <Style
        x:Key="tenderLightTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="TextAlignment"
            Value="Right" />
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
        <Setter
            Property="TextWrapping"
            Value="NoWrap" />
    </Style>
    <Style
        x:Key="paidDueLabelTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource tenderLightTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="45" />
        <Setter
            Property="MinimumFontSize"
            Value="21" />
        <Setter
            Property="LineHeight"
            Value="50" />
        <Setter
            Property="LineStackingStrategy"
            Value="BlockLineHeight" />
    </Style>
    <Style
        x:Key="tenderValueTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource tenderLightTextStyle}">
        <Setter
            Property="FontSize"
            Value="45" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="tenderInstructionTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="PreferredFontSize"
            Value="38" />
        <Setter
            Property="MinimumFontSize"
            Value="22" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="tenderStepButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
    </Style>
    <!--Welcome XAML-->
    <Style
        x:Key="welcomeButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-search}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="23,23" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Left" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
    </Style>
    <Style
        x:Key="welcomeKeyboardButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource welcomeButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-keyboard}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="welcomeTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="38" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    <!-- Start CRD 127021 meijer go only -->

    <Style
        x:Key="meijerGoLogo"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-attract-ss-s}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-attract-ss-h}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-attract-ss-o}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-attract-ss-p}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-attract-ss-amp}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-attract-ss-s2}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-attract-ss-c}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-attract-ss-a}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-attract-ss-n}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoRedColor}"
                                Geometry="{StaticResource icon-attract-ss-m}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-attract-ss-phone}" />
                        </DrawingGroup>
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform
                    ScaleX="0.5"
                    ScaleY="0.5">
                </ScaleTransform>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="644" />
        <Setter
            Property="Height"
            Value="481" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Stretch" />
    </Style>
    <!-- End CRD 127021 -->

    <!-- Start CRD 127021 meijer go logo 2 -->
    <Style
        x:Key="meijerGoLogo2"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-shop-s}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-shop-h}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-shop-o}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-shop-p}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-shop-amp}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-scan-s}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-scan-c}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-scan-a}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-scan-n}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoRedColor}"
                                Geometry="{StaticResource icon-ss-m}" />
                            <GeometryDrawing
                                Brush="{StaticResource MeijerGoLogoBlueColor}"
                                Geometry="{StaticResource icon-ss-phone}" />
                        </DrawingGroup>
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform
                    ScaleX="0.5"
                    ScaleY="0.5">
                </ScaleTransform>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="644" />
        <Setter
            Property="Height"
            Value="481" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Stretch" />
    </Style>
    <!-- End CRD 127021 meijer go logo 2 -->

    <Style
        x:Key="welcomeInstructionBox"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="FontSize"
            Value="60" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <!--SSCOI 44290-->
        <Setter
            Property="Image"
            Value="/SSCOUISkin;component/Images/Mperk Promo Image.png" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />        
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid
                        Width="640">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="75" />
                            <RowDefinition
                                Height="323" />
                        </Grid.RowDefinitions>
                        <Border
                            x:Name="innerBorder"
                            Style="{StaticResource glowBorderStyle}" />
                        <!--SSCOI 44290-->
                        <TextBlock
                            Text="{Loc StartScanning}"
                            Grid.Row="0"
                            TextAlignment="Center"
                            Width="640"
                            HorizontalAlignment="Center" />
                        <ContentPresenter
                            Grid.Row="1"                           
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        <!--SSCOI 44290-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style
                TargetType="{x:Type controls:MeasureTextBlock}">
                <Setter
                    Property="TextWrapping"
                    Value="Wrap" />
                <Setter
                    Property="TextAlignment"
                    Value="Center" />
                <Setter
                    Property="MaxWidth"
                    Value="634" />
            </Style>
        </Style.Resources>
    </Style>

    <Style
        x:Key="SNDwelcomeInstructionBox"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="FontSize"
            Value="60" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <!--SSCOI 44290-->
        <Setter
            Property="Image"
            Value="/SSCOUISkin;component/Images/SND logo - Lg.png" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            Style="{StaticResource glowBorderStyle}" />
                        <!--SSCOI 44290-->
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            Margin="0,0,0,280" />
                        <TextBlock
                            Text="{Loc ScotApp_9506}"
                            HorizontalAlignment="Center"
                            FontSize="30"
                            TextAlignment="Center"
                            Margin="0,180,0,0" />

                        <!--SSCOI 44290-->
                        <Grid
                            Margin="36,32,20,20"
                            Width="612"
                            Height="100"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="516" />
                                <ColumnDefinition
                                    Width="*" />
                            </Grid.ColumnDefinitions>
                            <controls:MeasureTextBlock
                                Text="{Loc ScanQRCodeInstruction}"
                                FontSize="24"
                                TextAlignment="Right"
                                Grid.Column="0"
                                Margin="0,20,16,0"
                                Visibility="Collapsed">
                                <controls:MeasureTextBlock.Style>
                                    <Style
                                        TargetType="MeasureTextBlock">
                                        <Setter
                                            Property="Visibility"
                                            Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding NextGenUIMobileEnabled}"
                                                Value="-1">
                                                <Setter
                                                    Property="Visibility"
                                                    Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:MeasureTextBlock.Style>
                            </controls:MeasureTextBlock>
                            <Image
                                Grid.Column="1"
                                Stretch="Fill"
                                Source="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource scanQRCodeImage}}">
                                <Image.Style>
                                    <Style
                                        TargetType="Image">
                                        <Setter
                                            Property="Visibility"
                                            Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding NextGenUIMobileEnabled}"
                                                Value="-1">
                                                <Setter
                                                    Property="Visibility"
                                                    Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Grid>
                        <Grid
                            Margin="0,300,0,0"
                            Width="612"
                            Height="100"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image
                                Source="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource SNDStartImage}}">
                                <Image.Style>
                                    <Style
                                        TargetType="Image">
                                        <Setter
                                            Property="Visibility"
                                            Value="Visible" />
                                    </Style>
                                </Image.Style>
                            </Image>
                            <controls:MeasureTextBlock
                                Text="{Loc SNDStartText}"
                                FontSize="50"
                                TextAlignment="Center"
                                Grid.Column="0"
                                Margin="0,20,16,0">
                                <controls:MeasureTextBlock.Style>
                                    <Style
                                        TargetType="MeasureTextBlock">
                                        <Setter
                                            Property="Foreground"
                                            Value="{StaticResource mainButtonForegroundColorBrush}" />
                                        <Setter
                                            Property="Visibility"
                                            Value="Visible" />
                                    </Style>
                                </controls:MeasureTextBlock.Style>
                            </controls:MeasureTextBlock>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style
                TargetType="{x:Type controls:MeasureTextBlock}">
                <Setter
                    Property="TextWrapping"
                    Value="Wrap" />
                <Setter
                    Property="TextAlignment"
                    Value="Center" />
                <Setter
                    Property="MaxWidth"
                    Value="634" />
            </Style>
        </Style.Resources>
    </Style>

    <Style
        x:Key="SNDUnderlinetenderTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="TextDecorations"
            Value="Underline" />
        <Setter
            Property="PreferredFontSize"
            Value="50" />
        <Setter
            Property="MinimumFontSize"
            Value="30" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>

    <Style
        x:Key="enhancedImageButton"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="FontSize"
            Value="60" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <!--SSCOI 44290-->
        <Setter
            Property="Image"
            Value="/SSCOUISkin;component/Images/mperks screen logo - Lg.png" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            Style="{StaticResource glowBorderStyle}" />
                        <!--SSCOI 44290-->
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        <TextBlock
                            Text="{Loc StartScanning}"
                            HorizontalAlignment="Center"
                            Margin="0,280,0,0" />
                        <!--SSCOI 44290-->
                        <Grid
                            Margin="36,32,20,20"
                            Width="612"
                            Height="100"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="516" />
                                <ColumnDefinition
                                    Width="*" />
                            </Grid.ColumnDefinitions>
                            <controls:MeasureTextBlock
                                Text="{Loc ScanQRCodeInstruction}"
                                FontSize="24"
                                TextAlignment="Right"
                                Grid.Column="0"
                                Margin="0,43,16,0">
                                <controls:MeasureTextBlock.Style>
                                    <Style
                                        TargetType="MeasureTextBlock">
                                        <Setter
                                            Property="Visibility"
                                            Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding NextGenUIMobileEnabled}"
                                                Value="-1">
                                                <Setter
                                                    Property="Visibility"
                                                    Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:MeasureTextBlock.Style>
                            </controls:MeasureTextBlock>
                            <Grid
                                Grid.Column="1">
                                <Grid>
                                    <controls:DropShadowBorder
                                        Style="{StaticResource itemImageDropShadowStyle}"
                                        IsPopup="False" />
                                    <Image
                                        Source="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource scanQRCodeImage}}" />
                                    <Grid.Style>
                                        <Style>
                                            <Setter
                                                Property="Grid.Visibility"
                                                Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding NextGenUIMobileEnabled}"
                                                    Value="-1">
                                                    <Setter
                                                        Property="Grid.Visibility"
                                                        Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                </Grid>
                                <Grid>
                                    <controls:DropShadowBorder
                                        Style="{StaticResource itemImageDropShadowStyle}"
                                        IsPopup="False" />
                                    <controls:MeasureTextBlock
                                        Text="{Loc QRCodeErrorText}"
                                        Margin="4,0,0,0"
                                        Style="{StaticResource QRCodeErrorTextStyle}" />
                                    <Grid.Style>
                                        <Style>
                                            <Setter
                                                Property="Grid.Visibility"
                                                Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding NextGenUIMobileEnabled}"
                                                            Value="-1" />
                                                        <Condition
                                                            Binding="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource scanQRCodeImage}}"
                                                            Value="{x:Null}" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter
                                                        Property="Grid.Visibility"
                                                        Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style
                TargetType="{x:Type controls:MeasureTextBlock}">
                <Setter
                    Property="TextWrapping"
                    Value="Wrap" />
                <Setter
                    Property="TextAlignment"
                    Value="Center" />
                <Setter
                    Property="MaxWidth"
                    Value="634" />
            </Style>
        </Style.Resources>
    </Style>
    <!--
      RFQ 7477
      Added by Toua Moua 06.02.16
      Added new style for MPerk button on the Welcome View.
    -->
    <Style
        x:Key="mPerksButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Width"
            Value="240" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mPerksButtonForegroundColorBrush}" />        
        <Setter
            Property="Height"
            Value="44" />
        <!--SSCOI-44290-->
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing
                                Pen="{StaticResource pen-mperks1}"
                                Geometry="{StaticResource icon-mperks1}" />
					        <GeometryDrawing 
                                Pen="{StaticResource pen-mperks1}"
                                Geometry="{StaticResource icon-mperks2}" />	
						    <GeometryDrawing
                                Pen="{StaticResource pen-mperks1}"
                                Geometry="{StaticResource icon-mperks3}" />	
                            <GeometryDrawing
                                Pen="{StaticResource pen-mperks2}"
                                Geometry="{StaticResource icon-mperks4}" />
					        <GeometryDrawing
                                Pen="{StaticResource pen-mperks2}"
                                Geometry="{StaticResource icon-mperks5}" />	
						    <GeometryDrawing
                                Brush="#ff005fa8"
                                Geometry="{StaticResource icon-mperks6}" />		
						    <GeometryDrawing
                                Brush="#ffee342f"
                                Geometry="{StaticResource icon-mperks7}" />									
                        </DrawingGroup>
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="87,32" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Center" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    <!--
      RFQ 7477
      Added by Toua Moua 06.02.16
      Added new style for buttons on the Welcome View.
    -->
    <Style
        x:Key="welcomeMeijerButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Width"
            Value="200" />
        <Setter
            Property="Height"
            Value="45" />
        <Setter
            Property="FontSize"
            Value="20" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="ScanAndBagMeijerButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Width"
            Value="200" />
        <Setter
            Property="Height"
            Value="44" />
        <Setter
            Property="PreferredFontSize"
            Value="20" />
        <Setter
            Property="MinimumFontSize"
            Value="17" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="MeijerEBTButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Width"
            Value="200" />
        <Setter
            Property="Height"
            Value="44" />
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Center" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="Padding"
            Value="0,-20,0,0" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainButtonForegroundColorBrush}"
                            Geometry="{StaticResource icon-ebt}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="35,35" />
    </Style>
    <Style
        x:Key="MeijerOwnBagButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Width"
            Value="200" />
        <Setter
            Property="Height"
            Value="44" />
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Center" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Bottom" />        
        <Setter
            Property="Padding"
            Value="0,-20,0,0" />       
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainButtonForegroundColorBrush}"
                            Geometry="{StaticResource icon-bag}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="35,35" />
    </Style>
    <Style
        x:Key="MeijerPrintGiftReceiptButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Width"
            Value="200" />
        <Setter
            Property="Height"
            Value="44" />
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Center" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="Padding"
            Value="0,-20,0,0" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainButtonForegroundColorBrush}"
                            Geometry="{StaticResource icon-print}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="35,35" />
    </Style>
    <Style
        x:Key="MeijerSearchButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Width"
            Value="200" />
        <Setter
            Property="Height"
            Value="44" />
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Center" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="Padding"
            Value="0,-20,0,0" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainButtonForegroundColorBrush}"
                            Geometry="{StaticResource icon-search}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="35,35" />
    </Style>
    <!-- +CRD 125377 -->
    <Style
        x:Key="SNDGreenButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource SNDGreenButtonBackgroundColorBrush}" />
        <Setter
            Property="Width"
            Value="200" />
        <Setter
            Property="Height"
            Value="44" />
        <Setter
            Property="PreferredFontSize"
            Value="20" />
        <Setter
            Property="MinimumFontSize"
            Value="17" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="SNDRedButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource SNDRedButtonBackgroundColorBrush}" />
        <Setter
            Property="Width"
            Value="200" />
        <Setter
            Property="Height"
            Value="44" />
        <Setter
            Property="PreferredFontSize"
            Value="20" />
        <Setter
            Property="MinimumFontSize"
            Value="17" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    <!-- -CRD 125377 -->
    <!--Finish XAML -->
    <Style
        x:Key="finishSmallImageStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-bag}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="202" />
        <Setter
            Property="Height"
            Value="300" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
    </Style>
    <Style
        x:Key="finishAmountLabelStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="35" />
        <Setter
            Property="TextTrimming"
            Value="None" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
    </Style>
    <Style
        x:Key="finishAmountValueStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource finishAmountLabelStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource actionButtonBackgroundColor}" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
    </Style>
    <!-- SSCOI-44990 change min font size from 36 to 20 -->
    <Style
        x:Key="finishHeaderTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="PreferredFontSize"
            Value="40" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="LineStackingStrategy"
            Value="BlockLineHeight" />
    </Style>
    <Style
        x:Key="finishInstructionTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="PreferredFontSize"
            Value="38" />
        <Setter
            Property="MinimumFontSize"
            Value="32" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="LineStackingStrategy"
            Value="BlockLineHeight" />
    </Style>
    <Style
        x:Key="printReceiptButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
    </Style>
    <Style
        x:Key="cartImageStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-shopping-cart}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="32" />
        <Setter
            Property="Width"
            Value="32" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
        <Setter
            Property="DockPanel.Dock"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Source">
                    <Setter.Value>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing
                                    Brush="{StaticResource storeModeMainIconColorBrush}"
                                    Geometry="{StaticResource icon-shopping-cart}" />
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="itemsCountAndTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="PreferredFontSize"
            Value="20" />
        <Setter
            Property="MinimumFontSize"
            Value="18" />
        <Setter
            Property="DockPanel.Dock"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="rewardGreetingStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="18" />
    </Style>
    <Style
        x:Key="pointsAmountEarnedStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="Foreground"
            Value="{StaticResource rewardsInfoForegroundColorBrush}" />
        <Setter
            Property="FontSize"
            Value="15" /> <!-- SSCOI-45863 -->
    </Style>
    <Style
        x:Key="pointsAmountEarnedLabelStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource pointsAmountEarnedStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="pointsAmountEarnedValueStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource pointsAmountEarnedStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
    </Style>
    <Style
        x:Key="mainFlashButtonStyle"
        TargetType="{x:Type controls:AnimationButton}">
        <Setter
            Property="Foreground"
            Value="{StaticResource mainButtonForegroundColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource mainButtonBackgroundColorBrush}"/>
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="Focusable"
            Value="True" />
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource mainFocusVisualStyle}" />
        <Setter
            Property="ClickSound"
            Value="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource bttnValidClickSound}}" />
        <Setter
            Property="Storyboard"
            Value="{DynamicResource payAnimation}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:AnimationButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            BorderThickness="0" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
	 <!--SSCOI 50040 -->	    
	<!--
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard
                                    x:Name="payAnimation">
                                    <Storyboard
                                        Duration="0:0:3"
                                        BeginTime="0:0:2"
                                        RepeatBehavior="Forever">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Offset)"
                                            From="-0.5"
                                            To="1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                            From="-0.25"
                                            To="1.25" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Background).(LinearGradientBrush.GradientStops)[2].(GradientStop.Offset)"
                                            From="-0.0"
                                            To="1.50" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard
                                    BeginStoryboardName="payAnimation" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
					-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="{StaticResource disabledButtonOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="payCartButtonStyle"
        TargetType="{x:Type controls:AnimationButton}"
        BasedOn="{StaticResource mainFlashButtonStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
	<!--SSCOI 45963-->	    
        <Setter
            Property="Background">
            <Setter.Value>
                <LinearGradientBrush
                    StartPoint="0,0"
                    EndPoint="1,1">
                    <GradientStop
                        x:Name="GradientBegin"
                        Color="{StaticResource MeijerMainButtonBackgroundColor}"
                        Offset="-0.5" />
                    <GradientStop
                        x:Name="GradientMiddle"
                        Color="{StaticResource MeijerPayButtonAnimationSecondColor}"
                        Offset="-0.25" />
                    <GradientStop
                        x:Name="GradientEnd"
                        Color="{StaticResource MeijerMainButtonBackgroundColor}"
                        Offset="0.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
	<!--SSCOI 45963-->	
        <Setter
            Property="Foreground"
            Value="{StaticResource mainButtonForegroundColorBrush}"/>
    </Style>
    <Style
        x:Key="payAmountStyle"
        TargetType="{x:Type controls:PriceTextBlock}">
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="FontSize"
            Value="44" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
    </Style>
    <Style
        x:Key="totalAmountCustomerModeStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource payAmountStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
        <Setter
            Property="TextAlignment"
            Value="Right" />
    </Style>
    <Style
        x:Key="totalAmountStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource totalAmountCustomerModeStyle}">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="SMTotalAmountStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource totalAmountStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
    </Style>
    <Style
        x:Key="NMITotalAmountCustomerModeStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource totalAmountCustomerModeStyle}">
        <Setter
            Property="NMIMinHeightInMillimeters"
            Value="{StaticResource NMINumberHeight}" />
    </Style>
    <Style
        x:Key="NMITotalAmountStyle"
        TargetType="{x:Type controls:PriceTextBlock}"
        BasedOn="{StaticResource totalAmountStyle}">
        <Setter
            Property="NMIMinHeightInMillimeters"
            Value="{StaticResource NMINumberHeight}" />
    </Style>
    <Style
        x:Key="payTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="Foreground"
            Value="{StaticResource highlightedTextColorBrush}" />
        <Setter
            Property="PreferredFontSize"
            Value="46" />
        <Setter
            Property="MinimumFontSize"
            Value="18" />
        <Setter
            Property="DockPanel.Dock"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="payArrowForwardStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-angle-right}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="24" />
        <Setter
            Property="Height"
            Value="40" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="DockPanel.Dock"
            Value="Right" />
    </Style>

    <!-- SystemFunction control-->
    <Style
        x:Key="extendedWeightTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="46" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="weightTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource extendedWeightTextStyle}">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource Self}}"
                Value="true">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!-- SSCOI-44696 updated value from 12 to 11 -->
    <Style
        x:Key="versionTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="11" />
    </Style>
    <Style
        x:Key="measuresImageUnitStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="24" />
    </Style>
    <Style
        x:Key="measuresImageLabelCustomerModeStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="9" />
        <Setter
            Property="TextWrapping"
            Value="WrapWithOverflow" />
    </Style>
    <Style
        x:Key="measuresImageLabelStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource measuresImageLabelCustomerModeStyle}">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource Self}}"
                Value="true">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="assistanceSystemButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainSystemFunctionsButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="12" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-user}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="30,30" />
    </Style>
    <Style
        x:Key="languageSystemButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainSystemFunctionsButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="12" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-language}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="30,30" />
    </Style>
    <Style
        x:Key="volumeSystemButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainSystemFunctionsButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="12" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-volume-up}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="30,30" />
    </Style>
    <Style
        x:Key="ownBagSystemButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainSystemFunctionsButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="12" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-bag}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="30,30" />
    </Style>
    <Style
        x:Key="accessibilitySystemButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainSystemFunctionsButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="12" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-wheelchair}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="30,30" />
        <Setter
            Property="Focusable"
            Value="False" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.IsUNavEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="{x:Type controls:ImageButton}">
                            <Border
                                controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                                BorderThickness="0"
                                Padding="0,5,0,0">
                                <Border.Background>
                                    <SolidColorBrush
                                        x:Name="innerBackgroundBrush"
                                        Color="{StaticResource buttonClickBackgroundColor}" />
                                </Border.Background>
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="scaleLogoCustomerModeStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-scaleLogo}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="16" />
        <Setter
            Property="Height"
            Value="10" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
        <Setter
            Property="Margin"
            Value="3,2,3,-2" />
    </Style>
    <Style
        x:Key="scaleLogoStyle"
        TargetType="Image"
        BasedOn="{StaticResource scaleLogoCustomerModeStyle}">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Source">
                    <Setter.Value>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing
                                    Brush="{StaticResource storeModeMainIconColorBrush}"
                                    Geometry="{StaticResource icon-scaleLogo}" />
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="popupShroudStyle"
        TargetType="Rectangle">
        <Setter
            Property="Fill">
            <Setter.Value>
                <LinearGradientBrush
                    StartPoint="0,0"
                    EndPoint="0,1">
                    <GradientStop
                        Color="{StaticResource popupShroudGradientStartColor}"
                        Offset="0" />
                    <GradientStop
                        Color="{StaticResource popupShroudGradientStopColor}"
                        Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="popupBackgroundStyleDarken"
        TargetType="Canvas">
        <Setter
            Property="Background"
            Value="{StaticResource popupBackgroundDarkColorBrush}" />
        <Setter
            Property="Opacity"
            Value="0.5" />
    </Style>

    <!-- Search XAML -->
    <Style
        x:Key="searchKeypadButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource Meijer_searchKeypadButtonStyle}">
        <Setter
            Property="FontSize"
            Value="32" />
        <Setter
            Property="Height"
            Value="54" />
        <Setter
            Property="Width"
            Value="58" />
    </Style>
    <Style
        x:Key="searchNumpadButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainKeypadButtonStyle}">
        <Setter
            Property="FontSize"
            Value="32" />
    </Style>    
    <Style
        x:Key="keypadSpaceButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainKeypadButtonStyle}">
    </Style>
    <Style
        x:Key="backSpaceButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource backspaceIconColorBrush}"
                            Geometry="{StaticResource icon-backspace}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="40,28" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Center" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Center" />
        <Setter
            Property="Foreground">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource backSpaceButtonForegroundColor}"
                    Opacity="0.30"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
        <Setter
            Property="Height"
            Value="54" />
    </Style>
    <Style
        x:Key="itemSearchTextBoxStyle"
        TargetType="{x:Type controls:WatermarkTextBox}"
        BasedOn="{StaticResource mainWaterMarkTextBoxStyle}">
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource borderColorBrush}" />
    </Style>
    <Style
        x:Key="picklistLabelStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="18" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainButtonForegroundColorBrush}" />
        <Setter
            Property="TextTrimming"
            Value="CharacterEllipsis" />
    </Style>
    <Style
        x:Key="picklistPageIndicatorLabelStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource picklistLabelStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="18" />
        <Setter
            Property="MinimumFontSize"
            Value="11" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextTrimming"
            Value="None" />
    </Style>
    <Style
        x:Key="navigationLabelStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource picklistLabelStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
    </Style>
    <Style
        x:Key="returnToScanButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-angle-left}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="24,40" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Left" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="picklistSearchKeyInItem"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource searchScanButtonStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="picklistKeyInItem"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource keyInCodeButtonStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
    </Style>    
    <Style
        x:Key="multipickFinishButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-check}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="24,24" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Left" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="multipickItemTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="18" />
    </Style>
    <Style
        x:Key="upTabButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-uptab}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="24,42" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Center" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger
                            RoutedEvent="Button.TouchDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="innerBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource buttonClickBackgroundColor}"
                                            Duration="0:0:.3"
                                            FillBehavior="Stop"
                                            AccelerationRatio="0.3"
                                            DecelerationRatio="0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Sale XAML-->
    <Style
        x:Key="statusTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="trilightInterventionRectangleStyle"
        TargetType="Rectangle">
        <Style.Resources>
            <LinearGradientBrush
                x:Key="noIntervention"
                PresentationOptions:Freeze="True">
                <GradientStop
                    Color="{StaticResource noInterventionGradientStartColor}"
                    Offset="0" />
                <GradientStop
                    Color="{StaticResource noInterventionGradientStopColor}"
                    Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush
                x:Key="delayedIntervention"
                PresentationOptions:Freeze="True">
                <GradientStop
                    Color="{StaticResource delayedInterventionGradientStartColor}"
                    Offset="0" />
                <GradientStop
                    Color="{StaticResource delayedInterventionGradientStopColor}"
                    Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush
                x:Key="immediateIntervention"
                PresentationOptions:Freeze="True">
                <GradientStop
                    Color="{StaticResource immediateInterventionGradientStartColor}"
                    Offset="0" />
                <GradientStop
                    Color="{StaticResource immediateInterventionGradientStopColor}"
                    Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush
                x:Key="offIntervention"
                PresentationOptions:Freeze="True">
                <GradientStop
                    Color="{StaticResource offInterventionGradientStartColor}"
                    Offset="0" />
                <GradientStop
                    Color="{StaticResource offInterventionGradientStopColor}"
                    Offset="1" />
            </LinearGradientBrush>
        </Style.Resources>
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding TrilightIntervention}"
                Value="none">
                <Setter
                    Property="Fill"
                    Value="{StaticResource noIntervention}"></Setter>
            </DataTrigger>
            <DataTrigger
                Binding="{Binding TrilightIntervention}"
                Value="delayed">
                <Setter
                    Property="Fill"
                    Value="{StaticResource delayedIntervention}"></Setter>
            </DataTrigger>
            <DataTrigger
                Binding="{Binding TrilightIntervention}"
                Value="immediate">
                <Setter
                    Property="Fill"
                    Value="{StaticResource immediateIntervention}"></Setter>
            </DataTrigger>
            <DataTrigger
                Binding="{Binding TrilightIntervention}"
                Value="off">
                <Setter
                    Property="Fill"
                    Value="{StaticResource offIntervention}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="statusContainerStyle"
        TargetType="Grid">
        <Setter
            Property="Background">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource statusContainerBackgroundColor}"
                    Opacity="0.55"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="skipBaggingButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource actionButtonBackgroundColor}" />
        <Setter
            Property="Visibility"
            Value="Collapsed" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="17" />
    </Style>
    <Style
        x:Key="loyaltyTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="PreferredFontSize"
            Value="30" />
        <Setter
            Property="MinimumFontSize"
            Value="17" />
        <Setter
            Property="Foreground"
            Value="{StaticResource cardMessageForegroundColorBrush}" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
        <Setter
            Property="Margin"
            Value="0,0,24,24" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="quickPickloyaltyTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource loyaltyTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="22" />
        <Setter
            Property="Margin"
            Value="0,0,24,24" />
    </Style>
    <Style
        x:Key="loyaltySmallTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource loyaltyTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="20" />
    </Style>
    <Style
        x:Key="quickPickLoyaltySmallTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource loyaltySmallTextStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="quickPickItemListBoxItemStyle"
        TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ListBoxItem">
                    <Grid
                        x:Name="gridButton"
                        Margin="0,0,10,0">
                        <controls:DropShadowBorder
                            Style="{DynamicResource itemImageDropShadowStyle}"
                            IsPopup="false" />
                        <Rectangle
                            Name="buttonRect"
                            Width="99"
                            Height="110"
                            Style="{DynamicResource itemImageRectangleStyle}">
                            <Rectangle.Fill>
                                <SolidColorBrush
                                    x:Name="innerBackgroundBrush"
                                    Color="{StaticResource quickPickInnerBackgroundColor}"
                                    PresentationOptions:Freeze="True" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Image
                            x:Name="itemImage"
                            Stretch="None"
                            Source="{Binding Data, Converter={StaticResource ItemImageConverter}, ConverterParameter='QuickPick'}">
                            <Image.Clip>
                                <RectangleGeometry
                                    Rect="0,0,91,102" />
                            </Image.Clip>
                        </Image>
                        <DockPanel
                            LastChildFill="False">
                            <Grid
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                                <Border
                                    Style="{StaticResource itemImageLabelContainerStyle}"
                                    Margin="4,0,0,0" />
                                <StackPanel>
                                    <controls:MeasureTextBlock
                                        Text="{Binding SubData[CategoryDescription.Text]}"
                                        Width="91"
                                        Margin="4,0,0,0"
                                        MaxHeight="100">
                                        <controls:MeasureTextBlock.Style>
                                            <Style
                                                TargetType="{x:Type controls:MeasureTextBlock}"
                                                BasedOn="{StaticResource itemImageCategoryTextStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding SubData[CategoryDescription.Text]}"
                                                        Value="">
                                                        <Setter
                                                            Property="controls:MeasureTextBlock.Visibility"
                                                            Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:MeasureTextBlock.Style>
                                    </controls:MeasureTextBlock>
                                    <controls:MeasureTextBlock
                                        Text="{Binding SubData[SubCategoryDescription.Text]}"
                                        Width="91"
                                        Margin="4,0,0,0"
                                        MaxHeight="100">
                                        <controls:MeasureTextBlock.Style>
                                            <Style
                                                TargetType="{x:Type controls:MeasureTextBlock}"
                                                BasedOn="{StaticResource itemImageSubCategoryTextStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding SubData[SubCategoryDescription.Text]}"
                                                        Value="">
                                                        <Setter
                                                            Property="controls:MeasureTextBlock.Visibility"
                                                            Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:MeasureTextBlock.Style>
                                    </controls:MeasureTextBlock>
                                    <StackPanel.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding SubData[CategoryDescription.Text]}"
                                                            Value="" />
                                                        <Condition
                                                            Binding="{Binding SubData[SubCategoryDescription.Text]}"
                                                            Value="" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter
                                                        Property="controls:MeasureTextBlock.Visibility"
                                                        Value="Collapsed" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                </StackPanel>
                            </Grid>
                            <Grid
                                VerticalAlignment="Top"
                                DockPanel.Dock="Top">
                                <Border
                                    Style="{StaticResource itemImageLabelContainerStyle}"
                                    Margin="0,4,4,2" />
                                <StackPanel>
                                    <controls:MeasureTextBlock
                                        Text="{Binding SubData[ItemDescription.Text]}"
                                        Width="91"
                                        TextAlignment="Center"
                                        Margin="0,4,0,0"
                                        HorizontalAlignment="Center"
                                        TextWrapping="Wrap">
                                        <controls:MeasureTextBlock.Style>
                                            <Style
                                                BasedOn="{StaticResource quickListItemDescriptionTextStyle}"
                                                TargetType="{x:Type controls:MeasureTextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding SubData[ItemDescription.Text]}"
                                                        Value="">
                                                        <Setter
                                                            Property="controls:MeasureTextBlock.Visibility"
                                                            Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:MeasureTextBlock.Style>
                                    </controls:MeasureTextBlock>
                                    <controls:MeasureTextBlock
                                        Text="{Binding SubData[ItemCode.Text]}"
                                        TextAlignment="Center"
                                        Width="91">
                                        <controls:MeasureTextBlock.Style>
                                            <Style
                                                BasedOn="{StaticResource itemImageUPCStyle}"
                                                TargetType="{x:Type controls:MeasureTextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding SubData[ItemCode.Text]}"
                                                        Value="">
                                                        <Setter
                                                            Property="controls:MeasureTextBlock.Visibility"
                                                            Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:MeasureTextBlock.Style>
                                    </controls:MeasureTextBlock>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type c:View}}, Path=DataContext.IsUNavEnabled}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                TargetName="buttonRect"
                                Property="Style"
                                Value="{StaticResource itemImageRectangleStyleUNav}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="quickpickItemListBoxStyle"
        TargetType="{x:Type c:SSCOUISlidingGridPage}"
        BasedOn="{StaticResource mainSlidingGridPageStyle}">
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="ItemContainerStyle"
            Value="{DynamicResource quickPickItemListBoxItemStyle}" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Hidden" />
        <Style.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="0.30" />
                <Setter
                    Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Disabled" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="scanAndBagTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="PreferredFontSize"
            Value="55" />
        <Setter
            Property="MinimumFontSize"
            Value="42" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <!-- NumericKeyPad XAML -->
    <Style
        x:Key="numericTextBoxStyle"
        TargetType="{x:Type controls:WatermarkTextBox}"
        BasedOn="{StaticResource mainWaterMarkTextBoxStyle}">
        <Setter
            Property="FontStyle"
            Value="Normal" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource borderColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource textBoxBackgroundColorBrush}" />
        <Setter
            Property="FontSize"
            Value="40" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource Self}}"
                Value="true">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="mediumNumericTextBoxStyle"
        TargetType="{x:Type controls:WatermarkTextBox}"
        BasedOn="{StaticResource numericTextBoxStyle}">
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="FontSize"
            Value="35" />
    </Style>
    <Style
        x:Key="smallNumericTextBoxStyle"
        TargetType="{x:Type controls:WatermarkTextBox}"
        BasedOn="{StaticResource numericTextBoxStyle}">
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="FontSize"
            Value="26" />
    </Style>
    <!-- +SSCOI-45677 -->
    <Style
        x:Key="mPerksNumericTextBoxStyle"
        TargetType="{x:Type controls:WatermarkTextBox}"
        BasedOn="{StaticResource numericTextBoxStyle}">
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="FontSize"
            Value="24" />
    </Style>
    <!-- +SSCOI-45677 -->
    <Style
        x:Key="numericGoBackButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainLinkButtonStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="numericOkButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource actionButtonBackgroundColor}" />
    </Style>
    <Style
        x:Key="popupTextBoxBorderStyle"
        TargetType="Border">
        <Setter
            Property="Background"
            Value="{StaticResource textBoxBackgroundColorBrush}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource textBoxBorderColorBrush}" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="BorderThickness"
            Value="1" />
    </Style>

    <Style
        x:Key="popupTextBoxInnerShadowStyle"
        TargetType="Border">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource textBoxBorderColorBrush}" />
        <Setter
            Property="CornerRadius"
            Value="2" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Margin"
            Value="-2" />
    </Style>

    <Style
        x:Key="backgroundTextBoxBorderStyle"
        TargetType="Border">
    </Style>

    <Style
        x:Key="backgroundTextBoxInnerShadowStyle"
        TargetType="Border">
    </Style>

    <!-- CustomPop XAML-->
    <Style
        x:Key="customTitleStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="30" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="customInstructionsStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource customTitleStyle}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontLight}" />
    </Style>
    <Style
        x:Key="customButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
    </Style>
    <!-- GridInput XAML -->
    <Style
        x:Key="gridInputHeaderPanel"
        TargetType="StackPanel">
        <Setter
            Property="Height"
            Value="98" />
        <Setter
            Property="Margin"
            Value="20,20,0,20" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="gridInputHeaderTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource gridInputTextBlockStyle}">
        <Setter
            Property="FontSize"
            Value="36" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="gridInputListItemTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource gridInputTextBlockStyle}">
        <Setter
            Property="FontSize"
            Value="20" />
        <Setter
            Property="Foreground"
            Value="{StaticResource gridInputListItemTextColorBrush}" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="DockPanel.Dock"
            Value="Left" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeGridInputListItemTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="gridInputButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="20" />
        <Setter
            Property="MinimumFontSize"
            Value="19" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeMainButtonForegroundColorBrush}" />
                <Setter
                    Property="Background"
                    Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="gridInputSubMessageTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}">
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="Foreground"
            Value="{StaticResource highlightedTextColorBrush}" />
    </Style>
    <Style
        x:Key="cmdListStackPanelStyle"
        TargetType="StackPanel">
        <Setter
            Property="Margin"
            Value="20,0,20,0" />
        <Setter
            Property="Background">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource cmdListStackPanelBackgroundColor}"
                    Opacity="0.7"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="containerCmdListBorderStyle"
        TargetType="Border">
        <Setter
            Property="BorderBrush"
            Value="{StaticResource borderColorBrush}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
    </Style>
    <Style
        x:Key="containerCmdList"
        TargetType="{x:Type controls:TouchListBox}"
        BasedOn="{StaticResource mainTouchListBoxStyle}">
        <Setter
            Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel
                        Orientation="Vertical"
                        IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource Self}}"
                Value="True">
                <Setter
                    Property="Background">
                    <Setter.Value>
                        <SolidColorBrush
                            Color="{StaticResource cartControlBackgroundColor}"
                            Opacity="0.4"
                            PresentationOptions:Freeze="True" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="containerListBoxItemSMDataEntryWithDetailsListStyle"
        TargetType="ListBoxItem">
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ListBoxItem">
                    <Grid
                        Margin="8,0,8,12">
                        <controls:DropShadowBorder
                            Style="{DynamicResource itemImageDropShadowStyle}"
                            IsPopup="false" />
                        <Rectangle
                            Width="99"
                            Height="110"
                            Margin="0"
                            Style="{DynamicResource itemImageRectangleStyle}" />
                        <Image
                            x:Name="itemImage"
                            Width="91"
                            Height="80"
                            Margin="0,0,0,0"
                            Stretch="Fill"
                            Source="{Binding Logo, Converter={StaticResource ItemImageConverter}}">
                            <Image.Clip>
                                <RectangleGeometry
                                    Rect="0,0,91,80" />
                            </Image.Clip>
                        </Image>
                        <DockPanel
                            LastChildFill="False">
                            <Grid
                                VerticalAlignment="Top"
                                DockPanel.Dock="Top">
                                <Border
                                    Style="{StaticResource itemImageLabelContainerStyle}"
                                    Margin="4,3,4,2" />
                                <controls:MeasureTextBlock
                                    Margin="8,4,4,2"
                                    Width="91"
                                    Text="{Binding Text}"
                                    Style="{StaticResource itemImageNameStyle}" />
                            </Grid>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding Data}"
                            Value="">
                            <Setter
                                Property="Opacity"
                                Value="0.30" />
                            <Setter
                                Property="IsEnabled"
                                Value="False" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="containerListBoxItemSmAssistSelectDeptStyle"
        TargetType="ListBoxItem">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ListBoxItem">
                    <Grid
                        x:Name="gridButton"
                        Margin="10,0,10,16">
                        <controls:DropShadowBorder
                            Style="{DynamicResource itemImageDropShadowStyle}"
                            IsPopup="false" />
                        <Rectangle
                            Width="99"
                            Height="110"
                            Style="{DynamicResource itemImageRectangleStyle}">
                            <Rectangle.Fill>
                                <SolidColorBrush
                                    x:Name="innerBackgroundBrush"
                                    Color="{StaticResource quickPickInnerBackgroundColor}"
                                    PresentationOptions:Freeze="True" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <DockPanel
                            LastChildFill="False">
                            <Grid
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                                <Border
                                    Style="{StaticResource itemImageLabelContainerStyle}"
                                    Margin="4,0,0,0" />
                                <StackPanel>
                                    <controls:MeasureTextBlock
                                        Text="{Binding Text}"
                                        Width="91"
                                        Margin="4,0,0,0"
                                        MaxHeight="100"
                                        Style="{StaticResource itemImageCategoryTextStyle}" />
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="containerListBoxItemStyle"
        TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ListBoxItem">
                    <Grid
                        x:Name="ListBoxGrid"
                        Margin="0,0,12,16">
                        <controls:DropShadowBorder
                            Style="{DynamicResource itemImageDropShadowStyle}"
                            IsPopup="false" />
                        <Rectangle
                            x:Name="itemRectangle"
                            Width="154"
                            Height="96"
                            Margin="0"
                            Style="{DynamicResource itemImageRectangleStyle}" />
                        <Image
                            x:Name="itemImage"
                            Width="146"
                            Height="88"
                            Margin="0,0,0,0"
                            Stretch="Fill"
                            Source="{Binding Logo, Converter={StaticResource ItemImageConverter}}">
                            <Image.Clip>
                                <RectangleGeometry
                                    Rect="0,0,146,88" />
                            </Image.Clip>
                        </Image>
                        <DockPanel
                            x:Name="ImageTopLabel"
                            LastChildFill="False">
                            <Grid
                                VerticalAlignment="Top"
                                DockPanel.Dock="Top">
                                <Border
                                    Style="{StaticResource itemImageLabelContainerStyle}"
                                    Margin="4,3,4,2" />
                                <controls:MeasureTextBlock
                                    Margin="8,4,4,2"
                                    Width="142"
                                    Text="{Binding Text}"
                                    Style="{StaticResource itemImageNameStyle}" />
                            </Grid>
                        </DockPanel>
                        <Grid
                            x:Name="ImageCenterLabel"
                            Visibility="Collapsed"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">
                            <Border
                                Style="{StaticResource itemImageLabelContainerStyle}" />
                            <controls:MeasureTextBlock
                                Width="142"
                                Text="{Binding Text}"
                                Style="{StaticResource itemImageCenterNameStyle}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding Data}"
                            Value="">
                            <Setter
                                Property="Opacity"
                                Value="0.30" />
                            <Setter
                                Property="IsEnabled"
                                Value="False" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding DataContext.StateParam, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Converter={StaticResource StateToBooleanConverter}, 
                                ConverterParameter='CmPrePayFuelAmount'}"
                            Value="True">
                            <Setter
                                Property="Visibility"
                                TargetName="ImageCenterLabel"
                                Value="Visible" />
                            <Setter
                                Property="Fill"
                                TargetName="itemRectangle"
                                Value="{StaticResource rectangleBackgroundColorBrush}" />
                            <Setter
                                Property="Visibility"
                                TargetName="ListBoxGrid"
                                Value="Visible" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding DataContext.StateParam, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Converter={StaticResource StateToBooleanConverter}, 
                                ConverterParameter='AM_SelectTare,CmDataEntryWithButtonList,CmDataEntryWithCmdList,SelectTAre,SmDataEntryWithCmdList,CmPrePayFuel,CmLottery,EnterQuantity'}"
                            Value="True">
                            <Setter
                                Property="Visibility"
                                TargetName="ImageTopLabel"
                                Value="Visible" />
                            <Setter
                                Property="Visibility"
                                TargetName="ListBoxGrid"
                                Value="Visible" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type c:View}}, Path=DataContext.IsUNavEnabled}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                TargetName="itemRectangle"
                                Property="Style"
                                Value="{StaticResource itemImageRectangleStyleUNav}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="containerListBoxStyle"
        TargetType="{x:Type c:SSCOUISlidingGridPage}"
        BasedOn="{StaticResource mainSlidingGridPageStyle}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter
            Property="ItemContainerStyle"
            Value="{DynamicResource containerListBoxItemStyle}" />
    </Style>
    <Style
        x:Key="containerListBoxSmDataEntryWithCmdBtnListStyle"
        TargetType="{x:Type c:SSCOUISlidingGridPage}"
        BasedOn="{StaticResource mainSlidingGridPageStyle}">
        <Setter
            Property="ItemContainerStyle"
            Value="{DynamicResource containerListBoxItemSMDataEntryWithDetailsListStyle}" />
    </Style>
    <Style
        x:Key="containerListBoxSmAssistSelectDeptStyle"
        TargetType="{x:Type c:SSCOUISlidingGridPage}"
        BasedOn="{StaticResource mainSlidingGridPageStyle}">
        <Setter
            Property="ItemContainerStyle"
            Value="{DynamicResource containerListBoxItemSmAssistSelectDeptStyle}" />
    </Style>
    <!--GenericPopup XAML -->
    <Style
        x:Key="laneClosedImageStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource laneDownIconColorBrush}"
                            Geometry="{StaticResource icon-minus-circle}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="256" />
        <Setter
            Property="Height"
            Value="256" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="lockScreenImageStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource LockScreenImageColorBrush}"
                            Geometry="{StaticResource icon-exclamation-circle}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Margin"
            Value="0,4,5,0" />
        <Setter
            Property="Width"
            Value="30" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
    </Style>
    <Style
        x:Key="lockScreenTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="30" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="LineHeight"
            Value="38" />
        <Setter
            Property="FontStyle"
            Value="Normal" />
    </Style>
    <!--SSCOI-44803-->
    <Style
        x:Key="genericPopUpStoreLoginButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainLinkButtonStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="Width"
            Value="180" />
    </Style>
    <!--SSCOI 44290-->
    <Style
        x:Key="MeijerCardImageStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source"
            Value="/SSCOUISkin;component/Images/credcd.png" />
    </Style>
    <!--SSCOI 44290-->
    <!--CancelYesNo XAML-->
    <Style
        x:Key="cancelPopUpYesButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource removeButtonColorBrush}" />
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="21" />
    </Style>
    <Style
        x:Key="cancelPopUpNoButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="21" />
    </Style>
    <Style
        x:Key="popUpConfirmAbortVoidTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="30" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="popUpConfirmAbortVoidTitleTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource popUpConfirmAbortVoidTextStyle}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--SelectLanguage XAML-->
    <Style
        x:Key="SelectLanguagePopupTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="LanguageListBoxItemStyle"
        TargetType="ListBoxItem">
        <Setter 
            Property="FocusVisualStyle" 
            Value="{x:Null}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ListBoxItem">
                    <Grid>
                        <Border Name="langBorder" 
                            Width="190"
                            Height="60"/>
                        <controls:ImageButton
                            Name="LanguageButton"
                            Text="{Binding Text}"
                            Style="{StaticResource mainButtonStyle}"
                            IsEnabled="{Binding IsEnabled}"
                            Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Width="184"
                            Height="54"
                            Margin="20,10,20,10"
                            Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                            Value="True">
                            <Setter
                                Property="Background"
                                Value="{StaticResource actionButtonBackgroundColor}"
                                TargetName="LanguageButton" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}"
                                    Value="True"/>
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type c:View}}, Path=DataContext.IsUNavEnabled}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="langBorder"
                                    Property="BorderBrush" 
                                    Value="{StaticResource buttonSelectedBackgroundColorBrush}">
                            </Setter>
                            <Setter TargetName="langBorder"
                                    Property="BorderThickness" 
                                    Value="3">
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="LanguageListBoxStyle"
        TargetType="{x:Type controls:TouchListBox}"
        BasedOn="{StaticResource mainTouchListBoxStyle}">
        <Setter
            Property="MinWidth"
            Value="224" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Disabled" />
        <Setter
            Property="ScrollViewer.CanContentScroll"
            Value="False" />
        <Setter
            Property="ItemContainerStyle"
            Value="{StaticResource LanguageListBoxItemStyle}" />
        <Setter
            Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Orientation="Vertical"
                        IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- CallForHelp XAML -->
    <Style
        x:Key="callForHelpTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="callForHelpButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource actionButtonBackgroundColor}" />
    </Style>
    <Style
        x:Key="systemFunctionLinkButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainLinkButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="18" />
        <Setter
            Property="Padding"
            Value="0" />
        <Setter
            Property="MaxHeight"
            Value="45" />
    </Style>
    <!--OwnBag XAML-->
    <Style
        x:Key="ownBagInstructionsTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="22" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <!--DecoratorControl XAML-->
    <Style
        x:Key="attendantModeBorderStyle"
        TargetType="Border"
        BasedOn="{StaticResource mainDecoratorBorderStyle}">
        <Setter
            Property="BorderBrush"
            Value="{StaticResource attendantModeBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="attendantModeInnerBorderStyle"
        TargetType="Border"
        BasedOn="{StaticResource attendantModeBorderStyle}">
        <Setter
            Property="CornerRadius"
            Value="10" />
    </Style>
    <Style
        x:Key="trainingModeBorderStyle"
        TargetType="Border"
        BasedOn="{StaticResource mainDecoratorBorderStyle}">
        <Setter
            Property="BorderBrush"
            Value="{StaticResource trainingModeBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="trainingModeInnerBorderStyle"
        TargetType="Border"
        BasedOn="{StaticResource trainingModeBorderStyle}">
        <Setter
            Property="CornerRadius"
            Value="10" />
    </Style>
    <Style
        x:Key="attendantModeIconBorderStyle"
        TargetType="Border"
        BasedOn="{StaticResource mainDecoratorControlIconBorderStyle}">
        <Setter
            Property="BorderBrush"
            Value="{StaticResource attendantModeBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="trainingModeIconBorderStyle"
        TargetType="Border"
        BasedOn="{StaticResource mainDecoratorControlIconBorderStyle}">
        <Setter
            Property="BorderBrush"
            Value="{StaticResource trainingModeBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="attendantModeIconStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainDecoratorIconImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource attendantModeIconColorBrush}"
                            Geometry="{StaticResource icon-user}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="30" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
    </Style>
    <Style
        x:Key="trainingModeIconStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainDecoratorIconImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource attendantModeIconColorBrush}"
                            Geometry="{StaticResource icon-user}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="30" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
    </Style>
    <Style
        x:Key="attdTrainTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="PreferredFontSize"
            Value="12" />
        <Setter
            Property="MinimumFontSize"
            Value="11" />
        <Setter
            Property="Foreground"
            Value="{StaticResource highlightedTextColorBrush}" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="Margin"
            Value="0,35,0,0" />
    </Style>
    <Style
        x:Key="attendantModeIconBackgroundStyle"
        TargetType="Grid">
        <Setter
            Property="Background"
            Value="{StaticResource attendantModeBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="trainingModeIconBackgroundStyle"
        TargetType="Grid">
        <Setter
            Property="Background"
            Value="{StaticResource trainingModeBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="picklistReceiptBackgroundStyle"
        TargetType="Grid">
        <Setter
            Property="Background">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource pickListReceiptBackgroundColor}"
                    Opacity="0.7"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
    </Style>
    <!--AlphaNumericPopup XAML-->
    <Style
        x:Key="alphanumericTextBoxStyle"
        TargetType="{x:Type controls:WatermarkTextBox}"
        BasedOn="{StaticResource mainWaterMarkTextBoxStyle}">
        <Setter
            Property="FontStyle"
            Value="Normal" />
        <Setter
            Property="Foreground"
            Value="{StaticResource mainTextColorBrush}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource borderColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource textBoxBackgroundColorBrush}" />
        <Setter
            Property="FontSize"
            Value="40" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding DataContext.StoreMode, RelativeSource={RelativeSource Self}}"
                Value="true">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeInfoTextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="storeModeAlphanumericTextBoxStyle"
        TargetType="{x:Type controls:WatermarkTextBox}"
        BasedOn="{StaticResource alphanumericTextBoxStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
    </Style>
    <Style
        x:Key="alphaNumericPopupTitleStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="52" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="alphaNumericPopupTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontLight}">
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="FontSize"
            Value="36" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="storeModeAlphaNumericPopupTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource alphaNumericPopupTextStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
    </Style>
    <Style
        x:Key="storeModeAlphanumericPopupTitleStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource alphaNumericPopupTitleStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
    </Style>
    <Style
        x:Key="alphaNumericSpaceButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="storeModeAlphanumericSpaceButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource alphaNumericSpaceButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="alphaNumericEnterButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource actionButtonBackgroundColor}" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
    </Style>
    <Style
        x:Key="storeModeEnterButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource alphaNumericEnterButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource storeModeActionButtonBackgroundColor}" />
        <Style.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="{StaticResource StoreModeActionButtonDisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Volume XAML -->
    <Style
        x:Key="SliderIncreaseButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Height"
            Value="18" />
        <Setter
            Property="Width"
            Value="18" />
        <Setter
            Property="Margin"
            Value="0,4,0,0" />
        <Setter
            Property="Padding"
            Value="0" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource volumeSliderIconColorBrush}"
                            Geometry="{StaticResource icon-plus}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="12,12" />
    </Style>

    <Style
        x:Key="SliderDecreaseButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Height"
            Value="18" />
        <Setter
            Property="Width"
            Value="18" />
        <Setter
            Property="Margin"
            Value="0,0,0,4" />
        <Setter
            Property="Padding"
            Value="0" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource volumeSliderIconColorBrush}"
                            Geometry="{StaticResource icon-minus}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="12,3" />
    </Style>

    <Style
        x:Key="MuteThumbStyle"
        TargetType="Thumb">
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="True" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Thumb}">
                    <Ellipse
                        x:Name="thmbEllipse"
                        Height="36"
                        Width="36"
                        Fill="{StaticResource volumeMuteIcon}"
                        StrokeThickness="3"
                        Stroke="{StaticResource volumeSliderStrokeColorBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="SliderThumbStyle"
        TargetType="Thumb">
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="True" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Thumb}">
                    <Ellipse
                        Height="36"
                        Width="36"
                        Fill="{StaticResource volumeSliderFillColorBrush}"
                        StrokeThickness="3"
                        Stroke="{StaticResource volumeSliderStrokeColorBrush}"></Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate
        x:Key="verticalSlider"
        TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>
            <Border
                Grid.RowSpan="3"
                CornerRadius="10"
                Height="186"
                Background="{StaticResource mainButtonBackgroundColorBrush}"
                Width="20" />
            <controls:ImageButton
                Name="SliderIncreaseButton"
                Grid.Row="0"
                Style="{StaticResource SliderIncreaseButtonStyle}" />
            <Track
                Grid.Row="1"
                Name="SliderThumb"
                Height="142">
                <Track.Thumb>
                    <Thumb
                        Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
            </Track>
            <controls:ImageButton
                Name="SliderDecreaseButton"
                Grid.Row="2"
                Style="{StaticResource SliderDecreaseButtonStyle}" />
        </Grid>
    </ControlTemplate>
    <Style
        x:Key="volumeSliderStyle"
        TargetType="Slider">
        <Setter
            Property="Width"
            Value="36" />
        <Setter
            Property="Height"
            Value="186" />
        <Setter
            Property="Orientation"
            Value="Vertical" />
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource mainFocusVisualStyle}" />
        <Setter
            Property="Template"
            Value="{StaticResource verticalSlider}" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="Margin"
            Value="0,16,0,0" />
        <Setter
            Property="IsSnapToTickEnabled"
            Value="True" />
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
    </Style>
    <Style
        x:Key="alphaNumericKeypadButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Width"
            Value="58" />
        <Setter
            Property="Height"
            Value="54" />
    </Style>
    <Style
        x:Key="alphaNumericHotKeypadButtonStyle"
        TargetType="{x:Type controls:ImageToggleButton}"
        BasedOn="{StaticResource mainToggleButtonStyle}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource mainFocusVisualStyle}" />
        <Setter
            Property="Width"
            Value="58" />
        <Setter
            Property="Height"
            Value="54" />
    </Style>
    <Style
        x:Key="storeModeAlphaNumericKeypadButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource alphaNumericKeypadButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="storeModeAlphaNumericHotKeypadButtonStyle"
        TargetType="{x:Type controls:ImageToggleButton}"
        BasedOn="{StaticResource alphaNumericHotKeypadButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="alphanumericShiftButtonStyle"
        TargetType="{x:Type controls:ImageToggleButton}"
        BasedOn="{StaticResource mainToggleButtonStyle}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource mainFocusVisualStyle}" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource backspaceIconColorBrush}"
                            Geometry="{StaticResource icon-shift}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="35,35" />
    </Style>
    <Style
        x:Key="alphaNumericSymbolsButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Width"
            Value="100" />
        <Setter
            Property="Height"
            Value="54" />
    </Style>
    <Style
        x:Key="numericLineKeypadButtonZeroStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource alphaNumericKeypadButtonStyle}">
        <Setter
            Property="Margin"
            Value="5" />
    </Style>
    <Style
        x:Key="SignatureAreaBorderStyle"
        TargetType="Border">
        <Setter
            Property="BorderBrush"
            Value="Black" />
        <Setter
            Property="BorderThickness"
            Value="2" />
    </Style>
    <Style
        x:Key="SignaturePathStyle"
        TargetType="Path">
        <Setter
            Property="Stroke"
            Value="Black" />
        <Setter
            Property="StrokeThickness"
            Value="4" />
        <Setter
            Property="StrokeStartLineCap"
            Value="Round" />
        <Setter
            Property="StrokeEndLineCap"
            Value="Round" />
        <Setter
            Property="StrokeLineJoin"
            Value="Round" />
    </Style>
    <Style
        x:Key="signatureCaptureClearButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
    </Style>
    <Style
        x:Key="extendedSignatureButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="46" />
        <Setter
            Property="MinimumFontSize"
            Value="40" />
    </Style>
    <Style
        x:Key="CartListItemStackPanel"
        TargetType="StackPanel">
        <Setter
            Property="Margin"
            Value="6,8,18,8" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding LineNumber}"
                Value="{x:Null}">
                <Setter
                    Property="Margin"
                    Value="12,8,18,8" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="CartListItemSelectedStyle"
        TargetType="Grid">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{StaticResource cartListSelectedItemBackgroundColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--StoreMode XAML-->
    <Style
        x:Key="measuresStoreModeWithListLabelStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource measuresImageLabelStyle}">
        <Setter
            Property="FontSize"
            Value="32">
        </Setter>
    </Style>
    <Style
        x:Key="storeModeHeaderTitleTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="PreferredFontSize"
            Value="40" />
        <Setter
            Property="MinimumFontSize"
            Value="29" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeMainTextForegroundColorBrush}" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
    </Style>
    <!-- SSCOI-46491-->
    <Style
        x:Key="MeijerStoreModeHeaderTitleTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="PreferredFontSize"
            Value="25" />
        <Setter
            Property="MinimumFontSize"
            Value="29" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeMainTextForegroundColorBrush}" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
    </Style>
    <!-- SSCOI-46491-->
    <Style
        x:Key="storeModeMainButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeMainButtonForegroundColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="21" />
    </Style>
    <Style
        x:Key="storeModeTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="storeModeInfoTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="36" />
        <Setter
            Property="MinimumFontSize"
            Value="27" />
    </Style>
	<!-- +SSCOI-45999 -->
	<Style
        x:Key="storeModeFullAssistInfoTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="26" />
        <Setter
            Property="MinimumFontSize"
            Value="22" />
    </Style>
	<!-- -SSCOI-45999 -->
    <Style
        x:Key="storeModePopupTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="FontSize"
            Value="32" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="storeModeMainButtonSmallStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource storeModeMainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="{StaticResource StoreModeSmallButtonFontSize}" />
        <Setter
            Property="MinimumFontSize"
            Value="NaN" />
    </Style>
    <Style
        x:Key="storeModeItemsControlButtonStyle"
        TargetType="ItemsControl">
        <Setter
            Property="ItemContainerStyle">
            <Setter.Value>
                <Style
                    TargetType="ImageButton"
                    BasedOn="{StaticResource storeModeMainButtonStyle}">
                    <Setter
                        Property="Height"
                        Value="72" />
                    <Setter
                        Property="Width"
                        Value="286" />
                    <Setter
                        Property="Margin"
                        Value="12,0,12,12" />
                    <Setter
                        Property="MinimumFontSize"
                        Value="NaN" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding ElementName=SMInfoBoxField, Path=Visibility}"
                            Value="Visible">
                            <Setter
                                Property="Height"
                                Value="54" />
                            <Setter
                                Property="Margin"
                                Value="12,0,12,8" />
                            <Setter
                                Property="PreferredFontSize"
                                Value="{StaticResource StoreModeSmallButtonFontSize}" />
                            <Setter
                                Property="MinimumFontSize"
                                Value="NaN" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
    </Style>
    <Style
        x:Key="storeModeWithImageVideoItemsControlStyle"
        TargetType="ItemsControl">
        <Setter
            Property="ItemContainerStyle">
            <Setter.Value>
                <Style
                    TargetType="ImageButton"
                    BasedOn="{StaticResource storeModeMainButtonStyle}">
                    <Setter
                        Property="Height"
                        Value="50" />
                    <Setter
                        Property="Width"
                        Value="286" />
                    <Setter
                        Property="Margin"
                        Value="12,4" />
                    <Setter
                        Property="PreferredFontSize"
                        Value="{StaticResource StoreModeSmallButtonFontSize}" />
                    <Setter
                        Property="MinimumFontSize"
                        Value="NaN" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="storeModeItemsControlMainButtonStyle"
        TargetType="ItemsControl">
        <Setter
            Property="ItemContainerStyle">
            <Setter.Value>
                <Style
                    TargetType="ImageButton"
                    BasedOn="{StaticResource storeModeMainButtonStyle}">
                    <Setter
                        Property="Height"
                        Value="72" />
                    <Setter
                        Property="Width"
                        Value="286" />
                    <Setter
                        Property="Margin"
                        Value="0,0,24,12" />
                    <Setter
                        Property="Command"
                        Value="{Binding ActionCommand}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid
                        Columns="2" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="storeModeItemsControlSmallButtonStyle"
        TargetType="ItemsControl">
        <Setter
            Property="ItemContainerStyle">
            <Setter.Value>
                <Style
                    TargetType="ImageButton"
                    BasedOn="{StaticResource storeModeMainButtonStyle}">
                    <Setter
                        Property="PreferredFontSize"
                        Value="{StaticResource StoreModeSmallButtonFontSize}" />
                    <Setter
                        Property="MinimumFontSize"
                        Value="NaN" />
                    <Setter
                        Property="Height"
                        Value="56" />
                    <Setter
                        Property="Margin"
                        Value="0,0,0,6" />
                    <Setter
                        Property="Command"
                        Value="{Binding ActionCommand}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid
                        Columns="1" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="storeModeInfoBoxBorderStyle"
        TargetType="Border">
        <Setter
            Property="BorderBrush"
            Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
    </Style>
    <Style
        x:Key="storeModeInfoBoxStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
        <Setter
            Property="FontSize"
            Value="20" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="storeModeInfoBoxFieldStyle"
        TargetType="Grid">
        <Setter
            Property="Background"
            Value="{StaticResource storeModeInfoBoxFieldBackgroundColor}" />
    </Style>
    <Style
        x:Key="storeModeAssistTerminalInfoTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource storeModeHeaderTitleTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="25" />
        <Setter
            Property="MinimumFontSize"
            Value="18" />
    </Style>
    <!-- SSCOI-46491-->
    <Style
        x:Key="MeijerstoreModeAssistTerminalInfoTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource storeModeHeaderTitleTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="18" />
        <Setter
            Property="MinimumFontSize"
            Value="18" />
    </Style>
    <!-- SSCOI-46491-->
    <Style
        x:Key="storeModePromptTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="27" />
        <Setter
            Property="MinimumFontSize"
            Value="22" />
    </Style>
    <Style
        x:Key="systemMessageTitleStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="36" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="LineStackingStrategy"
            Value="BlockLineHeight" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
    </Style>
    <Style
        x:Key="systemMessageInstructionAreaStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="22" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="LineStackingStrategy"
            Value="BlockLineHeight" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
    </Style>
    <Style
        x:Key="systemMessageButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource storeModeMainButtonStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Stretch" />
        <Setter
            Property="Height"
            Value="54" />
        <Setter
            Property="Width"
            Value="Auto" />
        <Setter
            Property="MinWidth"
            Value="320" />
    </Style>
    <Style
        x:Key="systemMessageImageStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="Stretch"
            Value="UniformToFill" />
    </Style>
    <Style
        x:Key="systemMessageVideoStyle"
        TargetType="MediaElement"
        BasedOn="{StaticResource mainVideoStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="Stretch"
            Value="UniformToFill" />
    </Style>
    <Style
        x:Key="systemMessageFadingScrollViewerStyle"
        TargetType="{x:Type controls:FadingScrollViewer}"
        BasedOn="{StaticResource mainFadingScrollViewerStyle}">
        <Setter
            Property="PanningRatio"
            Value="0.1" />
    </Style>
    <Style
        x:Key="systemMessageButtonWithCheckStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource systemMessageButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconLightColorBrush}"
                            Geometry="{StaticResource icon-check}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="24,24" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Left" />
        <Setter
            Property="ImageVerticalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="storeModePageIndicatorLabelStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="14" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
        <Setter
            Property="TextTrimming"
            Value="CharacterEllipsis" />
    </Style>
    <Style
        x:Key="storeNumericMainButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeMainButtonForegroundColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
        <Setter
            Property="FontSize"
            Value="32" />
    </Style>
    <Style
        x:Key="storeBackSpaceButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource backSpaceButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource storeModeActionButtonBackgroundColor}" />
        <Style.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="{StaticResource StoreModeActionButtonDisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="storeNumericOkButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource numericOkButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource storeModeActionButtonBackgroundColor}" />
        <Style.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="{StaticResource StoreModeActionButtonDisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="balanceScaleIconStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource storeModeInfoTextColorBrush}"
                            Geometry="{StaticResource icon-balance-scale}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Height"
            Value="32" />
        <Setter
            Property="Width"
            Value="32" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="securityMaintenanceListStyle"
        TargetType="{x:Type c:SSCOUITouchListBox}">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="DisableSelection"
            Value="True" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Left" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Disabled" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Hidden" />
    </Style>
    <Style
        x:Key="securityMaintenanceEntryStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource storeModeInfoBoxStyle}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontStoreModeWithListReceipt}" />
        <Setter
            Property="FontSize"
            Value="16" />
        <Setter
            Property="FontWeight"
            Value="Bold" />
    </Style>
    <!-- + Full Assist Mode support for base testing. If not used, remove and replace by integration-specific styles. -->
    <Style
        x:Key="storeModeFullAssistButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource storeModeMainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="20" />
        <Setter
            Property="MinimumFontSize"
            Value="NaN" />
        <Setter
            Property="Margin"
            Value="0,2,6,2" />
        <Setter
            Property="Height"
            Value="55" />
        <Setter
            Property="Width"
            Value="105" />
    </Style>
    <Style
        x:Key="storeModeFullAssistNumericButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource storeModeFullAssistButtonStyle}">
        <Setter
            Property="Height"
            Value="55" />
        <Setter
            Property="Width"
            Value="68.5" />
    </Style>
    <Style
        x:Key="storeModeFullAssistTextBlockStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource storeModeInfoBoxStyle}">
        <Setter
            Property="FontStyle"
            Value="Normal" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource storeModeInfoBoxFieldBackgroundColor}" />
        <Setter
            Property="FontSize"
            Value="32" />
        <Setter
            Property="Height"
            Value="48" />
        <Setter
            Property="Width"
            Value="400" />
        <Setter
            Property="Padding"
            Value="12,4,0,0" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
    </Style>
    <!-- - Full Assist Mode support for base testing. -->

    <Style
        x:Key="runReportsTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource storeModeInfoBoxStyle}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontStoreModeWithListReceipt}" />
        <Setter
            Property="FontSize"
            Value="20" />
        <Setter
            Property="FontWeight"
            Value="Bold" />
        <Setter
            Property="Margin"
            Value="62,3,12,3" />
        <Style.Triggers>
            <DataTrigger
		        Binding="{Binding DataContext.Language, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"
		        Value="2052">
                <Setter
			        Property="FontFamily"
			        Value="{StaticResource fontStoreModeWithListReceiptMingLiU}" />
            </DataTrigger>
            <DataTrigger
		        Binding="{Binding DataContext.Language, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"
		        Value="1041">
                <Setter
			        Property="FontFamily"
			        Value="{StaticResource fontStoreModeWithListReceiptMingLiU}" />
            </DataTrigger>
            <DataTrigger
		        Binding="{Binding DataContext.Language, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"
		        Value="3076">
                <Setter
			        Property="FontFamily"
			        Value="{StaticResource fontStoreModeWithListReceiptGulimChe}" />
            </DataTrigger>
            <DataTrigger
		        Binding="{Binding DataContext.Language, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"
		        Value="1042">
                <Setter
			        Property="FontFamily"
			        Value="{StaticResource fontStoreModeWithListReceiptGulimChe}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="reportsMenuStyle"
        TargetType="{x:Type c:SSCOUITouchListBox}"
        BasedOn="{StaticResource cartReceiptStyle}">
        <Setter
            Property="Background">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource cartControlBackgroundColor}"
                    Opacity="0.4"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- End-->
    <!-- Cash Management -->
    <Style
        x:Key="cashManagementButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource storeModeMainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="20" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
        <Setter
            Property="Padding"
            Value="2,0,2,0" />
    </Style>
    <Style
        x:Key="cashManagementR6ButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource cashManagementButtonStyle}">
        <Setter
            Property="Height"
            Value="62" />
        <Setter
            Property="Width"
            Value="147" />
    </Style>
    <Style
        x:Key="cashManagementToggleButtonStyle"
        TargetType="{x:Type controls:ImageToggleButton}"
        BasedOn="{StaticResource mainToggleButtonStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeMainButtonForegroundColorBrush}" />
        <Setter
            Property="Background"
            Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
        <Setter
            Property="TextBlock.TextWrapping"
            Value="Wrap" />
        <Setter
            Property="PreferredFontSize"
            Value="20" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
        <Setter
            Property="Padding"
            Value="2,0,2,0" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageToggleButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            BorderThickness="0" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger
                            RoutedEvent="Button.TouchDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="innerBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource buttonClickBackgroundColor}"
                                            Duration="0:0:.3"
                                            FillBehavior="Stop"
                                            AccelerationRatio="0.3"
                                            DecelerationRatio="0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="IsChecked"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{StaticResource storeModeToggledButtonBackgroundColorBrush}">
                </Setter>
                <Setter
                    Property="Foreground"
                    Value="{StaticResource storeModeToggledTextForegroundColorBrush}">
                </Setter>
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="{StaticResource disabledButtonOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="cashManagementR6ToggleButtonStyle"
        TargetType="{x:Type controls:ImageToggleButton}"
        BasedOn="{StaticResource cashManagementToggleButtonStyle}">
        <Setter
            Property="Height"
            Value="62" />
        <Setter
            Property="Width"
            Value="147" />
    </Style>
    <Style
        x:Key="cashManagementLockScreenButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource storeModeMainButtonStyle}">
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource storeModeMainButtonForegroundColorBrush}"
                            Geometry="{StaticResource icon-unlocked}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
        <Setter
            Property="ImageHorizontalAlignment"
            Value="Right" />
        <Setter
            Property="ImageMargin"
            Value="10,0,0,0" />
    </Style>
    <Style
        x:Key="cashManagementSubTitleTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource storeModeHeaderTitleTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="24" />
    </Style>
    <Style
        x:Key="cashManagementSubTitleV6HWTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource storeModeHeaderTitleTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="20" />
    </Style>
    <Style
        x:Key="cashManagementInfoTextStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="FontSize"
            Value="20" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
    </Style>
    <Style
        x:Key="cashManagementInfoV6HWTextStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontLight}" />
    </Style>
    <Style
        x:Key="cashManagementSetUpLoaderV6HWTextStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementInfoV6HWTextStyle}">
        <Setter
            Property="FontSize"
            Value="16" />
    </Style>
    <Style
        x:Key="cashManagementLeadthruTitleTextStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="22" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeMainTextForegroundColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementLeadthruTextStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementLeadthruTitleTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="18" />
        <Setter
            Property="MinimumFontSize"
            Value="16" />
    </Style>
    <Style
        x:Key="cashManagementGloryTotalTextStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementLeadthruTitleTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
    </Style>
    <Style
        x:Key="cashManagementCurrencyAreaTextStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="28" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
        <Setter
            Property="TextWrapping"
            Value="NoWrap" />
    </Style>
    <Style
        x:Key="cashManagementNonDispenseDescriptionStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="18" />
        <Setter
            Property="MinimumFontSize"
            Value="12" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Width"
            Value="79" />
    </Style>
    <Style
        x:Key="cashManagementTotalDescriptionStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="18" />
        <Setter
            Property="MinimumFontSize"
            Value="12" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center"/>
        <Setter
            Property="Width"
            Value="75"/>
    </Style>
    <Style
        x:Key="cashManagementCountChangeStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
        <Setter
            Property="PreferredFontSize"
            Value="14" />
        <Setter
            Property="MinimumFontSize"
            Value="10" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="Height"
            Value="18" />
        <Setter
            Property="Width"
            Value="60" />
    </Style>
    <Style
        x:Key="cashManagementValueChangeStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cashManagementCountChangeStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource valueChangeColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementNonDispenseCountChangeStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cashManagementCountChangeStyle}">
        <Setter
            Property="Width"
            Value="79" />
    </Style>
    <Style
        x:Key="cashManagementNonDispenseValueChangeStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cashManagementValueChangeStyle}">
        <Setter
            Property="Width"
            Value="79" />
    </Style>
    <Style
        x:Key="cashManagementCylinderBodyStyle"
        TargetType="ImageButton">
        <Setter
            Property="Height"
            Value="153" />
        <Setter
            Property="Width"
            Value="60" />
        <Setter
            Property="Background"
            Value="{StaticResource cylinderBackgroundColorBrush}" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Bottom" />
        <Setter
            Property="ClickSound"
            Value="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource bttnValidClickSound}}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            BorderBrush="Black"
                            BorderThickness="1" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="cashManagementEnabledCylinderBodyStyle"
        TargetType="ImageButton"
        BasedOn="{StaticResource cashManagementCylinderBodyStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource cylinderEnabledBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementNonDispenseCylinderBodyStyle"
        TargetType="ImageButton"
        BasedOn="{StaticResource cashManagementCylinderBodyStyle}">
        <Setter
            Property="Height"
            Value="64" />
        <Setter
            Property="Width"
            Value="79" />
    </Style>
    <Style
        x:Key="cashManagementPurgeCountBorderStyle"
        TargetType="{x:Type Border}">
        <Setter
            Property="Height"
            Value="40" />
        <Setter
            Property="Width"
            Value="79" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource cylinderBorderColorBrush}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
    </Style>
    <Style
        x:Key="cashManagementGenericCylinderStyle"
        TargetType="{x:Type MeasureTextBlock}">
        <Setter
            Property="Background"
            Value="{StaticResource cylinderBackgroundColorBrush}" />
        <Setter
            Property="Height"
            Value="153" />
        <Setter
            Property="Width"
            Value="58" />
        <Setter
            Property="Margin"
            Value="0,0,0,1" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="FontSize"
            Value="14" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementNonDispenseCylinderStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementGenericCylinderStyle}">
        <Setter
            Property="Height"
            Value="69" />
        <Setter
            Property="Width"
            Value="77" />
        <Setter
            Property="Margin"
            Value="0,0,0,1" />
    </Style>
    <Style
        x:Key="cashManagementCylinderDenominationStyle"
        TargetType="{x:Type MeasureTextBlock}">
        <Setter
            Property="Background"
            Value="{StaticResource cylinderDenominationBackgroundColorBrush}" />
        <Setter
            Property="Height"
            Value="34" />
        <Setter
            Property="Width"
            Value="60" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="PreferredFontSize"
            Value="18" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="0,5,0,0" />
    </Style>
    <Style
        x:Key="cashManagementEnabledCylinderDenominationStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementCylinderDenominationStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource storeModeMainButtonBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementNonDispenseCylinderDenominationStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementCylinderDenominationStyle}">
        <Setter
            Property="Height"
            Value="15" />
        <Setter
            Property="Width"
            Value="79" />
    </Style>
    <Style
        x:Key="cashManagementGenericCurrentValuesStyle"
        TargetType="{x:Type MeasureTextBlock}">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="Height"
            Value="18" />
        <Setter
            Property="Width"
            Value="60" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="PreferredFontSize"
            Value="14" />
        <Setter
            Property="MinimumFontSize"
            Value="10" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
        <Setter
            Property="TextWrapping"
            Value="NoWrap" />
        <Setter
            Property="Padding"
            Value="0,0,0,0" />
        <Setter
            Property="Margin"
            Value="0,0,0,0" />
    </Style>
    <Style
        x:Key="cashManagementNonDispenseCurrentValuesStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementGenericCurrentValuesStyle}">
        <Setter
            Property="Width"
            Value="79" />
    </Style>
    <Style
        x:Key="cashManagementLoaderValuesStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementGenericCurrentValuesStyle}">
    </Style>
    <Style
        x:Key="cashManagementPurgeCountHolderStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementNonDispenseCylinderDenominationStyle}">
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="PreferredFontSize"
            Value="12" />
        <Setter
            Property="MinimumFontSize"
            Value="10" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="Padding"
            Value="0,0,0,0" />
    </Style>
    <Style
        x:Key="cashManagementPurgeCountStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource storeModeInfoTextColorBrush}" />
        <Setter
            Property="FontSize"
            Value="20" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="0,2,0,0" />
    </Style>
    <Style
        x:Key="cashManagementPurgeInstructionsStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="FontSize"
            Value="14" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="cashManagementAlertBoxStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="Background"
            Value="{StaticResource alertBoxColorBrush}" />
        <Setter
            Property="PreferredFontSize"
            Value="20" />
        <Setter
            Property="MinimumFontSize"
            Value="18" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="Padding"
            Value="50,10,20,0" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="cashManagementAlertBoxLongStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cashManagementAlertBoxStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="14" />
        <Setter
            Property="MinimumFontSize"
            Value="12.75" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="Padding"
            Value="45,5,0,0" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="cashManagementBaseLevelLineStyle"
        TargetType="Line">
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="Margin"
            Value="0,0,0,32" />
        <Setter
            Property="X2"
            Value="58" />
        <Setter
            Property="StrokeDashArray"
            Value="5,1" />
        <Setter
            Property="StrokeThickness"
            Value="2" />
        <Setter
            Property="Stroke"
            Value="{StaticResource cylinderBaseLineColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementGenericValuesStyle"
        TargetType="StackPanel">
        <Setter
            Property="Margin"
            Value="0,70,0,0" />
    </Style>
    <Style
        x:Key="cashManagementNonDispenseValuesStyle"
        TargetType="StackPanel">
        <Setter
            Property="Margin"
            Value="0,70,0,0" />
    </Style>
    <Style
        x:Key="cashManagementHighlightedCylinderBorderStyle"
        TargetType="Border"
        BasedOn="{StaticResource glowBorderStyle}">
        <Setter
            Property="BorderBrush"
            Value="{StaticResource highlightedCylinderBorderColor}" />
        <Setter
            Property="Background">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource highlightedCylinderBorderBackgroundColor}"
                    Opacity="1.00"
                    PresentationOptions:Freeze="True" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="cashManagementButtonListSeparatorStyle"
        TargetType="Rectangle"
        BasedOn="{StaticResource mainSeparatorStyle}">
        <Setter
            Property="VerticalAlignment"
            Value="Bottom" />
        <Setter
            Property="HorizontalAlignment"
            Value="Stretch" />
    </Style>
    <Style
        x:Key="cashManagementTableStyle"
        TargetType="DataGrid">
        <Setter
            Property="Margin"
            Value="10"/>
        <Setter
            Property="Padding"
            Value="5"/>
        <Setter
            Property="FontSize"
            Value="18"/>
        <Setter
            Property="RowHeight"
            Value="30"/>
        <Setter
            Property="ColumnWidth"
            Value="*"/>
        <Setter
            Property="HorizontalContentAlignment"
            Value="Left"/>
        <Setter
            Property="VerticalAlignment"
            Value="Center"/>
        <Setter
            Property="AlternationCount"
            Value="2"/>
        <Setter
            Property="AlternatingRowBackground"
            Value="LightGray"/>
        <Setter
            Property="HeadersVisibility"
            Value="None"/>
        <Setter
            Property="GridLinesVisibility"
            Value="Vertical"/>
        <Setter
            Property="VerticalGridLinesBrush"
            Value="{StaticResource borderColorBrush}"/>
    </Style>
    <Style
        x:Key="yieldIconStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource yieldIconColorBrush}"
                            Geometry="{StaticResource icon-yield}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="RenderTransform">
            <Setter.Value>
                <RotateTransform
                    Angle="90">
                </RotateTransform>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Height"
            Value="40" />
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="alertExclamationImageStyle"
        TargetType="Image"
        BasedOn="{StaticResource mainImageStyle}">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource alertExclamationColorBrush}"
                            Geometry="{StaticResource icon-exclamation-circle}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Height"
            Value="28" />
        <Setter
            Property="Width"
            Value="28" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
    </Style>
    <Style
        x:Key="cashManagementR6SeparatorStyle"
        TargetType="Rectangle">
        <Setter
            Property="Fill"
            Value="{StaticResource cashManagementR6SeparatorColorBrush}">
        </Setter>
    </Style>
    <Style
        x:Key="cashManagementR6DenominationDisabledStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementCylinderDenominationStyle}">
        <Setter
            Property="Height"
            Value="20" />
        <Setter
            Property="Width"
            Value="70" />
        <Setter
            Property="Padding"
            Value="0,2,0,0" />
        <Setter
            Property="Foreground"
            Value="{StaticResource gaugeDenominationForegroundColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementR6DenominationEnabledStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource cashManagementR6DenominationDisabledStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource gaugeDenominationEnabledBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementR6GaugeBodyStyle"
        TargetType="ImageButton">
        <Setter
            Property="Height"
            Value="68" />
        <Setter
            Property="Width"
            Value="70" />
        <Setter
            Property="Background"
            Value="{StaticResource gaugeBackgroundDisabledColorBrush}" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Bottom" />
        <Setter
            Property="ClickSound"
            Value="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource bttnValidClickSound}}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="0"
                            BorderBrush="{StaticResource gaugeDenominationDisabledBackgroundColorBrush}"
                            BorderThickness="1" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="cashManagementR6GaugeBodyAlertStyle"
        TargetType="ImageButton"
        BasedOn="{StaticResource cashManagementR6GaugeBodyStyle}">
        <Setter
            Property="Background">
            <Setter.Value>
                <LinearGradientBrush
                    StartPoint="0,.7"
                    EndPoint="0,1">
                    <GradientStop
                        Color="{StaticResource gaugeBackgroundGradientStartColor}"
                        Offset="0" />
                    <GradientStop
                        Color="{StaticResource gaugeBackgroundGradientStopColor}"
                        Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="cashManagementR6GaugeRoundedBodyDisabledStyle"
        TargetType="ImageButton"
        BasedOn="{StaticResource cashManagementR6GaugeBodyStyle}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="7"
                            BorderBrush="{StaticResource gaugeDenominationDisabledBackgroundColorBrush}"
                            BorderThickness="1" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="cashManagementR6GaugeRoundedBodyEnabledStyle"
        TargetType="ImageButton"
        BasedOn="{StaticResource cashManagementR6GaugeBodyStyle}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type controls:ImageButton}">
                    <Grid>
                        <Border
                            x:Name="innerBorder"
                            controls:MeasureTextBlock.Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="7"
                            BorderBrush="{StaticResource gaugeDenominationEnabledBackgroundColorBrush}"
                            BorderThickness="1" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Background"
            Value="{StaticResource gaugeBackgroundEnabledColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementR6GaugeRoundedBodyDisabledAlertStyle"
        TargetType="ImageButton"
        BasedOn="{StaticResource cashManagementR6GaugeRoundedBodyDisabledStyle}">
        <Setter
            Property="Background">
            <Setter.Value>
                <LinearGradientBrush
                    StartPoint="0,.7"
                    EndPoint="0,1">
                    <GradientStop
                        Color="{StaticResource gaugeBackgroundGradientStartColor}"
                        Offset="0" />
                    <GradientStop
                        Color="{StaticResource gaugeBackgroundGradientStopColor}"
                        Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="cashManagementR6GaugeRoundedBodyEnabledAlertStyle"
        TargetType="ImageButton"
        BasedOn="{StaticResource cashManagementR6GaugeRoundedBodyDisabledStyle}">
        <Setter
            Property="Background">
            <Setter.Value>
                <LinearGradientBrush
                    StartPoint="0,.7"
                    EndPoint="0,1">
                    <GradientStop
                        Color="{StaticResource gaugeBackgroundEnabledGradientStartColor}"
                        Offset="0" />
                    <GradientStop
                        Color="{StaticResource gaugeBackgroundGradientStopColor}"
                        Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="cashManagementR6ActiveBoxBorderStyle"
        TargetType="Border">
        <Setter
            Property="BorderBrush"
            Value="{StaticResource gaugeDenominationDisabledBackgroundColorBrush}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Width"
            Value="320" />
    </Style>
    <Style
        x:Key="cashManagementR6ActiveBoxBodyStyle"
        TargetType="MeasureTextBlock">
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="0,4,0,0" />
        <Setter
            Property="Background"
            Value="{StaticResource cylinderBackgroundColorBrush}" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Width"
            Value="320" />
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
    </Style>
    <Style
        x:Key="cashManagementR6ActiveBoxBodyAlertStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cashManagementR6ActiveBoxBodyStyle}">
        <Setter
            Property="Background">
            <Setter.Value>
                <LinearGradientBrush
                    StartPoint=".2,0"
                    EndPoint="0,0">
                    <GradientStop
                        Color="{StaticResource gaugeBackgroundGradientStartColor}"
                        Offset="0" />
                    <GradientStop
                        Color="{StaticResource gaugeBackgroundGradientStopColor}"
                        Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="cashManagementR6GenericCurrentValuesStyle"
        TargetType="{x:Type MeasureTextBlock}">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="Height"
            Value="18" />
        <Setter
            Property="Width"
            Value="70" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontRegular}" />
        <Setter
            Property="PreferredFontSize"
            Value="14" />
        <Setter
            Property="MinimumFontSize"
            Value="10" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="Foreground"
            Value="{StaticResource cashManagementR6DynamicFontColorBrush}" />
        <Setter
            Property="TextWrapping"
            Value="NoWrap" />
        <Setter
            Property="Padding"
            Value="0,0,0,0" />
        <Setter
            Property="Margin"
            Value="0,0,0,0" />
    </Style>
    <Style
        x:Key="cashManagementR6CountChangeStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource cashManagementR6DynamicFontColorBrush}" />
        <Setter
            Property="PreferredFontSize"
            Value="14" />
        <Setter
            Property="MinimumFontSize"
            Value="10" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="Height"
            Value="18" />
        <Setter
            Property="Width"
            Value="70" />
    </Style>
    <Style
        x:Key="cashManagementR6ValueChangeStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource cashManagementR6CountChangeStyle}">
        <Setter
            Property="Foreground"
            Value="{StaticResource valueChangeColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementR6AreaTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource cashManagementR6DynamicFontColorBrush}" />
        <Setter
            Property="PreferredFontSize"
            Value="15" />
        <Setter
            Property="MinimumFontSize"
            Value="10" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="cashManagementR6PendingTextStyle"
        TargetType="{x:Type MeasureTextBlock}"
        BasedOn="{StaticResource storeModeTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="22" />
        <Setter
            Property="MinimumFontSize"
            Value="20" />
        <Setter
            Property="Foreground"
            Value="{StaticResource cashManagementR6PendingFontColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementR6TitleTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource storeModeHeaderTitleTextStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="40" />
        <Setter
            Property="MinimumFontSize"
            Value="24" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
    </Style>
    <Style
        x:Key="cashManagementR6AlertBoxCanvasStyle"
        TargetType="Canvas">
        <Setter
            Property="Background"
            Value="{StaticResource alertBoxColorBrush}" />
    </Style>
    <Style
        x:Key="cashManagementR6AlertBoxStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="Background"
            Value="{StaticResource alertBoxColorBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource alertBoxTextColorBrush}" />
        <Setter
            Property="PreferredFontSize"
            Value="18" />
        <Setter
            Property="MinimumFontSize"
            Value="14" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="Padding"
            Value="40,10,40,0" />
    </Style>
    <Style
        x:Key="cashManagementErrorMessageV6HWStyle"
        TargetType="{x:Type c:SSCOUITouchListBox}"
        BasedOn="{StaticResource cartReceiptStyle}">
    </Style>
    <Style
        x:Key="cashManagementFailedStatusImageStyle"
        TargetType="Image">
        <Setter
            Property="Source">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource removeButtonColorBrush}"
                            Geometry="{StaticResource icon-close}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Width"
            Value="12" />
        <Setter
            Property="Width"
            Value="12" />
        <Setter
            Property="Stretch"
            Value="Uniform" />
        <Setter
            Property="DockPanel.Dock"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
    </Style>
    <Style
        x:Key="cashManagementFailedCountTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="PreferredFontSize"
            Value="15" />
        <Setter
            Property="MinimumFontSize"
            Value="10" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource cylinderRedFillColorBrush}" />
        <Setter
            Property="DockPanel.Dock"
            Value="Left" />
        <Setter
            Property="MaxHeight"
            Value="20"/>
        <Setter
            Property="VerticalAlignment"
            Value="Bottom"/>
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="TextAlignment"
            Value="Left" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="cartControlHeaderStyle"
        TargetType="DockPanel">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="cartControlRewardsAreaStyle"
        TargetType="StackPanel">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="cartControlTotalAreaStyle"
        TargetType="Grid">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="cartControlAreaDueStyle"
        TargetType="DockPanel">
        <Setter
            Property="Background"
            Value="{StaticResource transparentBackgroundColorBrush}" />
    </Style>
    <Style
        x:Key="mediaListTextStyle"
        TargetType="{x:Type controls:MeasureTextBlock}"
        BasedOn="{StaticResource runReportsTextStyle}">
        <Setter
            Property="HorizontalAlignment"
            Value="Left" />
        <Setter
            Property="VerticalAlignment"
            Value="Top" />
        <Setter
            Property="Margin"
            Value="12,2" />
    </Style>
    <Style
        x:Key="itemRemovedButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="24" />
        <Setter
            Property="MinimumFontSize"
            Value="21" />
    </Style>
    <Style
        x:Key="storeModeListInfoTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource storeModeInfoTextStyle}">
        <Setter
            Property="TextWrapping"
            Value="NoWrap" />
    </Style>
    <Style
        x:Key="numericKeypadButtonStyle"
        TargetType="ImageButton"
        BasedOn="{StaticResource mainButtonStyle}" />
    <Style
        x:Key="assistOperatorMsgTextStyle"
        TargetType="MeasureTextBlock"
        BasedOn="{StaticResource mainFontRegular}">
        <Setter
            Property="FontSize"
            Value="25" />
        <Setter
            Property="TextAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="assistOperatorPanelStyle"
        TargetType="StackPanel">
        <Setter
            Property="Background">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource Meijer_cartControlBackgroundColor}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="lotteryButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ImageButton">
                    <Grid
                        Margin="0,0,0,0">
                        <controls:DropShadowBorder
                            Style="{DynamicResource itemImageDropShadowStyle}"
                            IsPopup="false" />
                        <Rectangle
                            Width="97"
                            Height="114"
                            Fill="{StaticResource subCategoryNoImageBorderColorBrush }">
                        </Rectangle>
                        <Image
                            Stretch="None"
                            Source="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource lottoImage}}">
                            <Image.Clip>
                                <RectangleGeometry
                                    Rect="0,0,97,114" />
                            </Image.Clip>
                        </Image>
                        <DockPanel
                            LastChildFill="False">
                            <Grid
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                                <Border
                                    Style="{StaticResource itemImageLabelContainerStyle}"
                                    Margin="0,0,0,0" />
                                <StackPanel>
                                    <controls:MeasureTextBlock
                                        Text="{Loc LotteryText}"
                                        Width="97"
                                        Margin="0,0,0,0"
                                        MaxHeight="100">
                                        <controls:MeasureTextBlock.Style>
                                            <Style
                                                TargetType="{x:Type controls:MeasureTextBlock}"
                                                BasedOn="{StaticResource itemImageCategoryTextStyle}">
                                            </Style>
                                        </controls:MeasureTextBlock.Style>
                                    </controls:MeasureTextBlock>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="fuelButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ImageButton">
                    <Grid
                        Margin="0,0,0,0">
                        <controls:DropShadowBorder
                            Style="{DynamicResource itemImageDropShadowStyle}"
                            IsPopup="false" />
                        <Rectangle
                            Width="97"
                            Height="114"
                            Fill="{StaticResource subCategoryNoImageBorderColorBrush }">
                        </Rectangle>
                        <Image
                            Stretch="None"
                            Source="{Binding Converter={StaticResource PathConverter}, ConverterParameter={StaticResource fuelImage}}">
                            <Image.Clip>
                                <RectangleGeometry
                                    Rect="0,0,97,114" />
                            </Image.Clip>
                        </Image>
                        <DockPanel
                            LastChildFill="False">
                            <Grid
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                                <Border
                                    Style="{StaticResource itemImageLabelContainerStyle}"
                                    Margin="0,0,0,0" />
                                <StackPanel>
                                    <controls:MeasureTextBlock
                                        Text="{Loc FuelText}"
                                        Width="97"
                                        Margin="0,0,0,0"
                                        MaxHeight="100">
                                        <controls:MeasureTextBlock.Style>
                                            <Style
                                                TargetType="{x:Type controls:MeasureTextBlock}"
                                                BasedOn="{StaticResource itemImageCategoryTextStyle}">
                                            </Style>
                                        </controls:MeasureTextBlock.Style>
                                    </controls:MeasureTextBlock>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="unavControlBackgroundPanelStyle"
        TargetType="StackPanel">
        <Setter
            Property="Background">
            <Setter.Value>
                <SolidColorBrush
                    Color="{StaticResource unavControlBackgroundPanelColor}"
                    Opacity="{StaticResource unavControlBackgroundPanelOpacity}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="unavControlGenericButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Focusable"
            Value="False" />
    </Style>
    <Style
        x:Key="unavControlDirectionalButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource unavControlGenericButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource unavControlDirectionalButtonBackgroundColorBrush}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ImageButton}">
                    <Path
                        x:Name="innerPath"
                        Data="M0,42 L42,84 L84,42 L42,0 L0,42 L42,84"
                        Fill="{TemplateBinding Background}"
                        Stroke="{StaticResource unavControlButtonBorderColorBrush}"
                        StrokeThickness="4">
                    </Path>
                    <ControlTemplate.Triggers>
                        <EventTrigger
                            RoutedEvent="Button.TouchDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="innerPath"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="{StaticResource buttonClickBackgroundColor}"
                                            Duration="0:0:.3"
                                            FillBehavior="Stop"
                                            AccelerationRatio="0.3"
                                            DecelerationRatio="0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="unavControlMoveWidgetButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource unavControlGenericButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource unavControlMoveWidgetButtonBackgroundColorBrush}" />
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="9" />
        <Setter
            Property="Foreground"
            Value="{StaticResource unavControlMoveWidgetButtonForegroundColorBrush}" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource fontBold}" />
    </Style>
    <Style
        x:Key="unavControlSelectButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource unavControlGenericButtonStyle}">
        <Setter
            Property="Background"
            Value="{StaticResource unavControlSelectButtonBackgroundColorBrush}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ImageButton}">
                    <Path
                        x:Name="innerPath"
                        Data="M0,0 L0,60 L60,60 L60,0 L0,0 L0,60"
                        Fill="{TemplateBinding Background}"
                        Stroke="{StaticResource unavControlButtonBorderColorBrush}"
                        StrokeThickness="4">
                    </Path>
                    <ControlTemplate.Triggers>
                        <EventTrigger
                            RoutedEvent="Button.TouchDown">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="innerPath"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="{StaticResource buttonClickBackgroundColor}"
                                            Duration="0:0:.3"
                                            FillBehavior="Stop"
                                            AccelerationRatio="0.3"
                                            DecelerationRatio="0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="unavControlMoveWidgetButtonBorderStyle"
        TargetType="Border">
        <Setter
            Property="BorderBrush"
            Value="{StaticResource unavControlButtonBorderColorBrush}" />
        <Setter
            Property="BorderThickness"
            Value="4" />
        <Setter
            Property="Height"
            Value="40" />
        <Setter
            Property="Width"
            Value="70" />
    </Style>
    <Style
        x:Key="noMouseOverListBoxItemStyle"
        TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="receiptItemFocusVisualStyle"
        BasedOn="{StaticResource mainFocusVisualStyle}">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        StrokeThickness="3"
                        Stroke="{StaticResource buttonSelectedBackgroundColorBrush}"
                        Margin="1,0,5,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Start CRD 125378 MeijerGo and Shop n Drop -->
    <Style
        x:Key="meijerGoButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ImageButton">
                    <Border
                        BorderThickness="1"
                        Height="500">
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Image
                                Stretch="Uniform"
                                Height="272"
                                Width="225">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoRedColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-m}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-phone}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-s}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-h}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-o}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-p}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-amp}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-s2}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-c}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-a}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-ss-n}" />
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                            <Border
                                Padding="20"
                                VerticalAlignment="Bottom">
                                <Image
                                    Stretch="Uniform"
                                    Width="Auto">
                                    <Image.Source>
                                        <DrawingImage>
                                            <DrawingImage.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing
                                                        Brush="{StaticResource meijerGoStartBrush}"
                                                        Geometry="{StaticResource icon-meijerStartBG}" />
                                                    <GeometryDrawing
                                                        Brush="{StaticResource mainButtonForegroundColorBrush}"
                                                        Geometry="{StaticResource icon-meijerStart1}" />
                                                    <GeometryDrawing
                                                        Brush="{StaticResource mainButtonForegroundColorBrush}"
                                                        Geometry="{StaticResource icon-meijerStart2}" />
                                                    <GeometryDrawing
                                                        Brush="{StaticResource mainButtonForegroundColorBrush}"
                                                        Geometry="{StaticResource icon-meijerStart3}" />
                                                    <GeometryDrawing
                                                        Brush="{StaticResource mainButtonForegroundColorBrush}"
                                                        Geometry="{StaticResource icon-meijerStart4}" />
                                                    <GeometryDrawing
                                                        Brush="{StaticResource mainButtonForegroundColorBrush}"
                                                        Geometry="{StaticResource icon-meijerStart5}" />
                                                </DrawingGroup>
                                            </DrawingImage.Drawing>
                                        </DrawingImage>
                                    </Image.Source>
                                </Image>
                            </Border>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="meijerShopNDropButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainButtonStyle}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ImageButton">
                    <Border
                        BorderThickness="1"
                        Height="500">
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Image
                                Stretch="Uniform"
                                Height="272"
                                Width="225">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-cart}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoRedColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-m}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-s}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-h}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-o}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-p}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-sep1}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-n}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-sep2}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-d}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-r}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-o2}" />
                                                <GeometryDrawing
                                                    Brush="{StaticResource MeijerGoLogoBlueColor}"
                                                    Geometry="{StaticResource icon-dual-attract-sd-p2}" />
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                            <Border
                                Padding="20"
                                VerticalAlignment="Bottom">
                                <Image
                                    Stretch="Uniform"
                                    Width="Auto">
                                    <Image.Source>
                                        <DrawingImage>
                                            <DrawingImage.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing
                                                        Brush="{StaticResource meijerGoStartBrush}"
                                                        Geometry="{StaticResource icon-meijerStartBG}" />
                                                    <GeometryDrawing
                                                        Brush="{StaticResource mainButtonForegroundColorBrush}"
                                                        Geometry="{StaticResource icon-meijerStart1}" />
                                                    <GeometryDrawing
                                                        Brush="{StaticResource mainButtonForegroundColorBrush}"
                                                        Geometry="{StaticResource icon-meijerStart2}" />
                                                    <GeometryDrawing
                                                        Brush="{StaticResource mainButtonForegroundColorBrush}"
                                                        Geometry="{StaticResource icon-meijerStart3}" />
                                                    <GeometryDrawing
                                                        Brush="{StaticResource mainButtonForegroundColorBrush}"
                                                        Geometry="{StaticResource icon-meijerStart4}" />
                                                    <GeometryDrawing
                                                        Brush="{StaticResource mainButtonForegroundColorBrush}"
                                                        Geometry="{StaticResource icon-meijerStart5}" />
                                                </DrawingGroup>
                                            </DrawingImage.Drawing>
                                        </DrawingImage>
                                    </Image.Source>
                                </Image>
                            </Border>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End CRD 125378 MeijerGo and Shop n Drop -->
    
    <!-- Start CRD 125377 -->
    <Style
        x:Key="canceledOrderSystemButtonStyle"
        TargetType="{x:Type controls:ImageButton}"
        BasedOn="{StaticResource mainSystemButtonStyle}">
        <Setter
            Property="PreferredFontSize"
            Value="16" />
        <Setter
            Property="MinimumFontSize"
            Value="12" />
        <Setter
            Property="Image">
            <Setter.Value>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing
                            Brush="{StaticResource mainIconColorBrush}"
                            Geometry="{StaticResource icon-close}" />
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ImageSize"
            Value="30,30" />
    </Style>
    <!-- End CRD 125377 -->

</ResourceDictionary>